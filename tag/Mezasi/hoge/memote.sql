-- MySQL dump 10.11
--
-- Host: localhost    Database: memote
-- ------------------------------------------------------
-- Server version	5.0.45-modified

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `design`
--

DROP TABLE IF EXISTS `design`;
CREATE TABLE `design` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `rid` varchar(10) NOT NULL,
  `pre_color` varchar(20) default '#000000',
  `pre_background_color` varchar(20) default '#CCFFFF',
  `synUnderlined_color` varchar(20) default 'fuchsia',
  `synError_color` varchar(20) default 'white',
  `synError_background_color` varchar(20) default 'red',
  `synTodo_color` varchar(20) default 'black',
  `synTodo_background_color` varchar(20) default 'yellow',
  `Linenum_color` varchar(20) default 'yellow',
  `synSpecial_color` varchar(20) default '#c000c0',
  `synType_color` varchar(20) default '#008000',
  `synComment_color` varchar(20) default '#0000c0',
  `synPreProc_color` varchar(20) default '#c000c0',
  `synIdentifier_color` varchar(20) default '#008080',
  `synConstant_color` varchar(20) default '#c00000',
  `synStatement_color` varchar(20) default '#804000',
  `created_at` datetime NOT NULL,
  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `rid` (`rid`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `design`
--

LOCK TABLES `design` WRITE;
/*!40000 ALTER TABLE `design` DISABLE KEYS */;
INSERT INTO `design` VALUES (1,'QKOKyF7j0F','#000000','#CCFFFF','fuchsia','white','red','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','0000-00-00 00:00:00','2007-12-02 01:33:00'),(2,'7kpjjadPv6','#000000','#CCFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:04:29','2007-12-02 10:04:29'),(3,'Z0wbRD6WCa','#ffffff','#CCFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:08:20','2007-12-02 10:08:20'),(4,'Q4kNLprDWj','#000000','#ffFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:09:26','2007-12-02 10:09:26'),(5,'5NUMMS6dG0','#000000','#CCFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:14:50','2007-12-02 10:14:50'),(6,'B2gMCKrsSb','#000000','#000000','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:23:38','2007-12-02 10:23:38'),(7,'j2jSssKLlE','#000000','#CCFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2007-12-02 19:23:56','2007-12-02 10:23:56'),(8,'AmzxNqbOBi','#000000','#6699FF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2008-01-25 11:06:10','2008-01-25 02:06:11'),(9,'YmsvEfm2Lq','#000000','#CC99FF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2008-01-25 11:06:39','2008-01-25 02:06:39'),(10,'n9ubXve9r5','#000000','#99CCFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2008-01-25 11:07:11','2008-01-25 02:07:11'),(11,'nmwjExvE7N','#000000','#CCCCFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2008-01-25 11:08:52','2008-01-25 02:08:52'),(12,'loXt7eeZL8','#000000','#CCFFFF','fuchsia','white','#ff0000','black','yellow','yellow','#c000c0','#008000','#0000c0','#c000c0','#008080','#c00000','#804000','2008-01-26 02:15:17','2008-01-25 17:15:17');
/*!40000 ALTER TABLE `design` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `file`
--

DROP TABLE IF EXISTS `file`;
CREATE TABLE `file` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `rid` varchar(10) NOT NULL,
  `title` varchar(255) NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `body` text NOT NULL,
  `created_at` datetime NOT NULL,
  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `rid` (`rid`),
  KEY `index_title` (`title`)
) ENGINE=MyISAM AUTO_INCREMENT=70 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `file`
--

LOCK TABLES `file` WRITE;
/*!40000 ALTER TABLE `file` DISABLE KEYS */;
INSERT INTO `file` VALUES (18,'d6LkJIbHbV','å…¬å¼MTG','DS400016.WMA','2007å¹´11æœˆ12ï½ž16æ—¥ã¾ã§ã®å…¬å¼MTG\r\n\r\né‰„äººã¨ç©¶æ¥µã®ã¦ã“å…¥ã‚Œã«é–¢ã—ã¦ã®è©±ã—åˆã„ã‚’ä¹…ç•™ç±³ã•ã‚“ã¨æ£®å±±ã•ã‚“ã§ã—ãŸã„ã‚‰ã—ã„ã€‚\r\nã‚ã¨ã€ã“ã®MTGã‹ã‚‰å››æ¢ã•ã‚“ãŒå‚åŠ ã€‚','2007-11-12 10:53:13','2007-11-12 01:53:13'),(19,'CRfM56DoB2','Sukinaã®ç§»è¡Œã«é–¢ã™ã‚‹MTG','DS400018.WMA','å‰ç”°ã•ã‚“ã€ä¹…ç•™ç±³ã•ã‚“ã€ã‹ãã•ã‚“å‚åŠ ã€‚Sukinaã®ç§»è¡Œã«é–¢ã—ã¦å…ˆæ–¹ã¨ã®é€£çµ¡é–¢ä¿‚ã‚’å«ã‚ãŸMTGã€‚20æ—¥ã«äºˆå®šæ—¥ãŒæ±ºã¾ã‚Šã¾ã—ãŸã€‚å…ˆæ–¹ç¢ºèªä¸­ã€‚','2007-11-12 19:05:12','2007-11-12 10:05:12'),(8,'wP8UPMLkGR','2007-11-05 : å…¬å¼ç³»MTG','DS400003.WMA','å®šä¾‹ã®å…¬å¼ç³»ã®MTGã€‚\r\nç‰¹è¨˜äº‹é …ã¯ç„¡ã—ã€‚','2007-11-07 11:27:23','2007-11-07 02:27:23'),(9,'Iofby9B6OT','2007-11-05 : ãƒ›ãƒƒãƒˆãƒªãƒ³ã‚¯ã¸æ¥½æ›²ãƒ‡ãƒ¼ã‚¿ãŒã‚³ãƒ”ãƒ¼ã§ããªã„å•é¡ŒMTG','DS400004.WMA','ãƒ›ãƒƒãƒˆãƒªãƒ³ã‚¯å´ãŒãƒ•ã‚¡ã‚¤ãƒ«ãƒ‘ãƒ¼ãƒŸãƒƒã‚·ãƒ§ãƒ³ã‚’å¤‰æ›´ã—ã¦ã¦ã“ã¡ã‚‰å´ã®ã‚¹ã‚¯ãƒªãƒ—ãƒˆãŒã“ã‘ã¦ã„ãŸç‚ºã®MTGã€‚','2007-11-07 11:28:23','2007-11-07 02:28:23'),(10,'mQfIfHroxR','2007-11-05 : å…¬å¼ ChakuJPOPã®TOPå¤‰æ›´ã«é–¢ã—ã¦ã®MTG','DS400005.WMA','ãƒãƒ£ã‚¯JPOPã®TOPå¤‰æ›´ã«é–¢ã—ã¦ã®ç›¸è«‡MTG.æ­£ç›´å¾®å¦™','2007-11-07 11:31:13','2007-11-07 02:31:13'),(11,'dbveP2iSCE','2007-11-05 : -Melody World- ãƒ‡ã‚¶ã‚¤ãƒ³å¤‰æ›´ã«ã¤ã„ã¦MTV','DS400006.WMA','ãªã‚“ã¤ãƒ¼ã‹ã‚ã‚Œãªã‹ã‚“ã˜ãªMTG','2007-11-07 12:05:06','2007-11-07 03:05:06'),(12,'lDiWLo5k6L','2007-11-05 : ã‚·ã‚¹ãƒ†ãƒ é–‹ç™ºéƒ¨ã‚³ãƒ¼ãƒ‰ãƒ¬ãƒ“ãƒ¥ãƒ¼ä¼š','DS400007.WMA','ã‚ˆã—ã¿ãã‚“ã®è§£æžç³»ã®ã‚³ãƒ¼ãƒ‰ãƒ¬ãƒ“ãƒ¥ãƒ¼ä¼šã€‚ãã®ä»–Zenyç³»ã®å§«ã©ã†ã—ã‚ˆã†ã‹ã®é›‘è«‡ã€‚','2007-11-07 12:07:49','2007-11-07 03:07:49'),(13,'Fb15nDflYm','2007-11-05 : é–‹ç™ºéƒ¨ã‚³ãƒ¼ãƒ‰ãƒ¬ãƒ“ãƒ¥ãƒ¼ä¼šã€Œmobircã€ by tokuhirom','DS400010.WMA','tokuhiromã«ã‚ˆã‚‹ mobircã®å‹‰å¼·ä¼š\r\n\r\nHTML::Featureã¨ã‹ã¤ã„å¤‰ãˆã‚‹ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ«ã®ç´¹ä»‹ã‚‚\r\n\r\nhttp://coderepos.org/share/wiki/mobirc','2007-11-07 19:02:35','2007-11-07 10:02:35'),(14,'IXFbEIhdZK','é–‹ç™ºéƒ¨MTG by tanaka','DS400012.WMA','ç”°ä¸­å›ã®ãƒ­ã‚¸ã‚«ãƒ«ã‚·ãƒ³ã‚­ãƒ³ã‚°ã®ç™ºè¡¨ä¼šã€‚å¾ŒåŠã¯æœ¨æ‘ã•ã‚“ã®7ã¤ã®ç¿’æ…£ç™ºè¡¨ä¼š','2007-11-09 10:22:16','2007-11-09 01:22:16'),(15,'mC3GfVtrLS','æ£®å±±ã•ã‚“ã¨RE:MIXBOXã®ãƒ¬ã‚¤ã‚¢ã‚¦ãƒˆã«ã¤ã„ã¦MTG','DS400013.WMA','æœ¨æ´¥ã•ã‚“ã‹ã‚‰ã‚‚ã‚‰ã£ãŸä¾é ¼æ›¸ãŒç«¯çš„éŽãŽã¦åˆ†ã‹ã‚‰ãªã‹ã£ãŸã®ã§ã€èžã“ã†ã¨æ€ã£ãŸã‚‰ä¼‘ã¿ã§èžã‘ãªã„ã®ã§ã€æ£®å±±ã•ã‚“ã«èžã„ãŸã€‚','2007-11-09 11:42:53','2007-11-09 02:42:53'),(16,'aeUIWIWGnS','GMOã®ã‚µã‚¤ãƒˆæ›´æ–°ã«ã¤ã„ã¦MTG','DS400014.WMA','ä¹…ç•™ç±³ã•ã‚“ã¨ï¼‘ï¼•ï¼šï¼ï¼ã‹ã‚‰ãƒãƒ£ã‚¯TVã¨ãƒãƒ£ã‚¯JPOPã®TOPæ›¸ãæ›ãˆã«ã¤ã„ã¦ã®MTG','2007-11-09 15:31:23','2007-11-09 06:31:23'),(17,'ImBOuxhAVx','ã‚·ã‚¹ãƒ†ãƒ éƒ¨é€±å ±å‘Šä¼š','DS400015.WMA','å®šä¾‹ã®å ±å‘Šä¼š','2007-11-09 19:14:34','2007-11-09 10:14:34'),(20,'EWDCjzhHSW','é–‹ç™ºéƒ¨ã‚³ãƒ¼ãƒ‰ãƒ¬ãƒ“ãƒ¥ãƒ¼ä¼šã€ŒPrismã€ by tokuhirom','DS400019.WMA','prismã¨ã„ã†ã‚¢ãƒ—ãƒªã«ã¤ã„ã¦ã®èª¬æ˜Žã€‚\r\nWebã‚µã‚¤ãƒˆã‚’å–ã£ã¦ãã¦å¥½ãã«ãƒ‡ã‚¶ã‚¤ãƒ³ã‚’å¤‰æ›´ã§ãã‚‹ã‚ˆã†ã«ãªã‚‹ã‚„ã¤ã€‚','2007-11-12 19:07:17','2007-11-12 10:07:17'),(21,'aSxuIgsffn','é‰„äººãƒ»ç©¶æ¥µã®ã¦ã“å…¥ã‚ŒMTG','DS400020.WMA','å››æ¢ã•ã‚“ã€æ£®å±±ã•ã‚“ã€ä¹…ç•™ç±³ã•ã‚“ã§ã®ç©¶æ¥µãƒ»é‰„äººã®ã¦ã“å…¥ã‚ŒMTGã€‚\r\n\r\nã¤ã„ã§ã«ã‚¢ãƒ‹å¤©ã¸Flashã‚’å°Žå…¥ã™ã‚‹è©±ã‚‚ã—ã¾ã—ãŸã€‚','2007-11-13 11:51:28','2007-11-13 02:51:28'),(22,'TXQP6zhYwS','ã‚·ã‚¹ãƒ†ãƒ é–‹ç™ºéƒ¨ã‚³ãƒ¼ãƒ‰ãƒ¬ãƒ“ãƒ¥ãƒ¼ä¼šã€Œãƒ­ã‚¸ã‚«ãƒ«ã‚·ãƒ³ã‚­ãƒ³ã‚°ã€ by tanaka','DS400021.WMA','tanakaå›ã«ã‚ˆã‚‹ãƒ­ã‚¸ã‚«ãƒ«ã‚·ãƒ³ã‚­ãƒ³ã‚°ã®ç™ºè¡¨ä¼šã€‚é˜¿éƒ¨ã•ã‚“ãŒã¤ã£ã“ã¿ã¾ãã£ã¦ãŸã€‚','2007-11-13 18:50:22','2007-11-13 09:50:22'),(23,'4H1U4Bqcag','Sukinaç§»è¡Œã®æ‰‹é †ã«é–¢ã—ã¦ã®MTG','DS400022.WMA','ã‹ãã•ã‚“ã¨Sukinaç§»è¡Œã«é–¢ã—ã¦ã®MTGã€‚JukeBoxç­‰ã®ç¢ºèªã€‚','2007-11-15 16:29:38','2007-11-15 07:29:38'),(24,'XHWXpMJbNf','é–‹ç™ºéƒ¨MTGã€€ã‚ªãƒ¼ãƒ—ãƒ³ã‚½ãƒ¼ã‚·ãƒ£ãƒ«ã«ã¤ã„ã¦ by tokuhirom','DS400023.WMA','ä»Šæµè¡Œã‚Šã‚‰ã—ã„OpenSocialã«ã¤ã„ã¦ã®èª¬æ˜Žä¼šã€‚','2007-11-15 19:00:26','2007-11-15 10:00:26'),(25,'8tozjuNyMv','ã—ã—ã‚ƒã‚‚ã‚ã‚‚','sixamo.pl.docx','ã—ã—ã‚ƒã‚‚ã®ç™ºè¡¨ç”¨è³‡æ–™','2007-11-19 06:59:04','2007-11-18 21:59:04'),(26,'GubFhEqJOr','å…¬å¼MTG','DS400024.WMA','å…¬å¼ã®å½¢å¼ãŒå¤‰æ›´ã•ã‚Œã‚‹ã‚ˆå‘ŠçŸ¥MTG\r\né›†ã¾ã‚‹æ„å‘³ãŒã‚ã£ãŸã®ã‹ã¯ä¸æ˜Žã€‚','2007-11-19 10:46:38','2007-11-19 01:46:38'),(27,'ZLhp5BuKmx','å…¬å¼MTG','DS400025.WMA','- ï¼”ã‚µã‚¤ãƒˆã®è©±ãƒšãƒ³ãƒ‡ã‚£ãƒ³ã‚°\r\n- 26æ—¥ï¼ˆæœˆï¼‰èˆŸä¹…ä¿ã•ã‚“ä¼‘ã¿\r\n- ã†ãŸæ£®æ—©ã‚ã«ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n- Sukinaã®è³ªå•è¿”ã—ã¦ã­ã€‚\r\n- MelopreãŒ2ä»¶æœ€é€Ÿã§è¿”ã—ã¦æ¬²ã—ã„ã¨ã®ã“ã¨ã€‚å››æ¢ã•ã‚“ã€ã‚ã¤ã—ã•ã‚“å¯¾å¿œã€‚','2007-11-19 10:48:50','2007-11-19 01:48:50'),(28,'lEPeeW4Ivx','é–‹ç™ºéƒ¨å‹‰å¼·ä¼šã€€ã—ã—ã‚ƒã‚‚æ¦‚èª¬ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ','DS400026.WMA','ã—ã—ã‚ƒã‚‚ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨å‡¦ç†ã®æµã‚Œã€‚ç™ºè¡¨ã¯ç›¸å¤‰ã‚ã‚‰ãšé§„ç›®é§„ç›®ã ã£ãŸã€‚è‹¦æ‰‹ã ã€‚','2007-11-19 19:10:21','2007-11-19 10:10:21'),(29,'Mel3HqJZeZ','ã‚·ã‚¹ãƒ†ãƒ éƒ¨å‹‰å¼·ä¼š é‡Žæ‘ã—ã‚‡ã†ãã‚…ã†ã¶ by kan','DS400031.WMA','ã‹ã‚“ã‹ã‚“ã«ã‚ˆã‚‹ã®ã‚€ã‚‰ã—ã‚‡ã†ãã‚…ãƒ¼ã¶ã®èª¬æ˜Žã€‚','2007-11-21 19:47:57','2007-11-21 10:47:57'),(30,'qTM0VLrVjc','ã‚·ã‚¹ãƒ†ãƒ é–‹ç™ºéƒ¨ä»Šé€±ã®ã¾ã¨ã‚MTG','DS400032.WMA','ä»Šé€±ã®ã¾ã¨ã‚ã€‚ä»Šé€±ã¯ã²ã©ã‹ã£ãŸã€‚','2007-11-22 22:18:02','2007-11-22 13:18:02'),(31,'oIY8ECJvNd','ç€ã‚¦ã‚¿ç³»MTG','DS400033.WMA','ã‚„ãŸã‚‰ã«HitRankãŒå¤šã‹ã£ãŸæ°—ãŒã—ãŸã€‚','2007-11-26 14:51:18','2007-11-26 05:51:18'),(32,'7d5Xa6XPOG','ã‚·ã‚¹ãƒ†ãƒ éƒ¨å‹‰å¼·ä¼šã€Œçµµæ–‡å­—ã«ã¤ã„ã¦ã€ by tokuhirom','DS400035.WMA','è£ãƒ¦ãƒ‹ã‚³ãƒ¼ãƒ‰ã®è©±ã€‚é¢ç™½ã„ã€‚','2007-11-26 19:03:04','2007-11-26 10:03:04'),(33,'Wcg2VP4JWD','ç€ã‚¦ã‚¿MTG','DS400036.WMA','ãƒ»å¥½ããªã®é€€ä¼šãƒšãƒ¼ã‚¸\r\nãƒ»ã‚¨ãƒ•ãƒ«ãƒ¼ãƒˆãƒ•ãƒ©ãƒƒã‚·ãƒ¥ã‚³ãƒ¼ãƒŠãƒ¼\r\nãƒ»ãƒ’ãƒƒãƒˆãƒ©ãƒ³ã‚¯CSV\r\nãƒ»å¥½ããªã‚¢ãƒ³ã‚±ãƒ¼ãƒˆå¯¾å¿œ\r\n\r\nä¸Šè¨˜ã®è©±ã€‚\r\n\r\nã‚ã¨ã¯ã€SoftBankç«¯æœ«ã®è©±ã‚‚ã—ãŸã€‚','2007-11-27 14:25:45','2007-11-27 05:25:45'),(34,'3iuoXacbAK','å…¬å¼ç³»MTG','DS400037.WMA','å…¬å¼ç³»ã®ã‚¿ã‚¹ã‚¯ãŒå†ã³ãŸã¾ã£ã¦ããŸã®ã§ã€ï¼ˆä½•åº¦ç›®ã ï¼‰å†åº¦MTGã€‚\r\n\r\nä»Šé€±ã¯ã‚¿ã‚¹ã‚¯åŸ‹ã¾ã£ã¦ã¾ã™ã€‚ã¨ã‹âˆšã®æœˆæœ«æ›´æ–°ã‚’ã©ã†ã™ã‚‹ã‹ï¼Ÿ','2007-11-28 11:09:27','2007-11-28 02:09:27'),(35,'j45BHsK8Jc','ã‚·ã‚¹ãƒ†ãƒ éƒ¨å‹‰å¼·ä¼šã€ŒKCCSã®å¯¾å¿œã«ã¤ã„ã¦ã€ by hiroyuki','DS400039.WMA','KCCSã®ä¼šå“¡ç²¾æŸ»ã«ã¤ã„ã¦ã®ç›¸è«‡ã€‚\r\nã‚„ã‚‰ãªãã¦ã„ã„ã‚“ã˜ã‚ƒãªã„ã€‚','2007-11-28 19:30:52','2007-11-28 10:30:52'),(36,'sYh1p1sqJQ','Jsracã®ã‚³ãƒ¬ã‚¯ãƒˆã‚³ãƒ¼ãƒ‰æ›´æ–°ã®è©± by ã‚ã¤ã—ã•ã‚“','DS400040.WMA','æœ€åˆã«ã€æ‹…å½“ã®æ–¹ã‹ã‚‰ã€ŒCollectCodeã€ã®ãƒ•ã‚¡ã‚¤ãƒ«ã‚’ã‚‚ã‚‰ã†ã€‚ãã®ä»–ã‚‚ã‚ã‚‚ã‚ã®æ³¨æ„ã€‚','2007-11-29 11:57:58','2007-11-29 02:57:58'),(37,'eb81DBKZDY','ãƒã‚ªã‚¦ã‚¤ãƒ³ã‚°ã¨ã®æ¥½æ›²æä¾›ã®è©±','DS400041.WMA','æä¾›ã‚’ã™ã‚‹ã‹ã©ã†ã‹ï¼Ÿã™ã‚‹ã¨ã—ãŸã‚‰ãƒ•ãƒ­ãƒ¼ã‚’ã©ã†ã™ã‚‹ã‹ï¼Ÿã®è©±ã€‚èˆ¹ä¹…ä¿ã•ã‚“ã€€å››æ¢ã•ã‚“ã€€æ£®å±±ã•ã‚“\r\n','2007-11-29 14:35:33','2007-11-29 05:35:33'),(38,'TQALwzoTqq','50éŸ³æ¤œç´¢ã«ã¤ã„ã¦ã®ä¼šè­°','DS400043.WMA','JukeBoxã®å…¥åŠ›å‘¨ã‚ŠãŒãŠã‹ã—ã„ã¨ã‹è‰²ã€…èžã„ãŸã€‚\r\nã‚ã‚Œã€ãŠã‹ã—ã„ã‚ˆã€‚\r\n','2007-11-29 18:02:08','2007-11-29 09:02:08'),(39,'euaJRxhtGh','å…¬å¼ç³»MTG','DS400046.WMA','Flashã¨ã™ããªç§»è¡Œã®è©±ã€‚GMOã®ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆå¯¾å¿œ','2007-12-03 10:50:29','2007-12-03 01:50:29'),(40,'uHK32oIrY2','é–‹ç™ºéƒ¨MTGã€€ãƒ¢ãƒ“ãƒ†ãƒƒã‚¯ç™ºè¡¨ä¼š by natsumi','DS400047.WMA','FlashLiteã«ã¤ã„ã¦ã„ã‚ã‚“ãªä¼šç¤¾ã®ç™ºè¡¨ä¼šã‚’èžã„ã¦ããŸäººã®ãƒ•ã‚£ãƒ¼ãƒ‰ãƒãƒƒã‚¯ã€‚','2007-12-03 19:00:57','2007-12-03 10:00:57'),(41,'di5AGnEziL','é–‹ç™ºéƒ¨MTGã€€ã‚»ã‚«ãƒ³ãƒ‰ï¾—ï½²ï¾Œã§ã®è£½ä½œã«ã¤ã„ã¦ by tokkyobudda','DS400048.WMA','é’æœ¨ã•ã‚“ã«ã‚ˆã‚‹Secondlifeè¬›åº§','2007-12-04 19:08:36','2007-12-04 10:08:36'),(42,'3nP6MdbotE','é–‹ç™ºéƒ¨MTGã€€ã€ŒSecondLifeã§ã®æ¼”ç®—ã€ã‚ã¹','DS400049.WMA','ã‚»ã‚«ãƒ³ãƒ‰ï¾—ï½²ï¾Œã®ä¸–ç•Œã§ã®ä½ç½®æƒ…å ±ã¨ã‹ã®æ‰±ã„æ–¹ã€‚','2007-12-05 19:04:45','2007-12-05 10:04:45'),(43,'OmNTR9poYE','å…¬å¼JasracMTG','DS400051.WMA','2007å¹´6,7,8ã‚’å¯¾è±¡ã«9æœˆã«è¡Œã£ã¦ã„ã‚‹utaã®ç”³è«‹ãŒã‚‚ã‚Œã¦ã„ã‚‹ã€‚çµè«–ã¨ã—ã¦ã¯ã€ã‚‚ã‚Œã¦ã„ã‚‹åˆ†ã‚’è¿½åŠ ã—ã¦ç”³è«‹ã™ã‚‹ã€‚\r\ntroubleshootingã«æµã™ã€‚\r\nå„ã‚µã‚¤ãƒˆã®æ¼ã‚ŒãŸåˆ†utaã®DLæ•°ã‚’å‡ºã™\r\n\r\nä»Šå¾Œã¯ã€FileOutputã®æ™‚ç‚¹ã§ nonãŒå«ã¾ã‚Œã¦ã„ãŸã‚‰æŠ½å‡ºã—ã¦æ£®å±±ã•ã‚“ã«å ±å‘Šã™ã‚‹\r\n','2007-12-06 15:34:38','2007-12-06 06:34:38'),(44,'9d17EIGyKl','äº”åç”°ã®é¢¨æ™¯','gotanda.jpg','äº”åç”°ã®å†™çœŸã ã‚ˆ','2007-12-07 12:57:02','2007-12-07 03:57:02'),(45,'Ekc8M9Luqg','çŠ¬ã®ç”»åƒ','DSC00109.JPG','å››æ¢ã•ã‚“ã®çŠ¬','2007-12-09 02:35:06','2007-12-08 17:35:06'),(46,'VS0wPZVzUg','å…¬å¼MTGï¼ˆå®šä¾‹ï¼‰','DS400053.WMA','TODOã®ç¢ºèªã€‚50éŸ³ã«å¯¾ã™ã‚‹èªè­˜ãŒã‚ã„ã¾ã„ãªã¾ã¾ã§ã‚„ã£ã¦ã‚‹ã‚ˆã†ãªæ°—ãŒã—ãŸã€‚åˆ†ã‹ã‚‰ãªã„ã¨ã“ã‚ã¯åˆ†ã‹ã‚‰ãªã„ã¨ã„ã£ã¦ã„ãŸã ã‘ã‚‹ã¨ã‚ã‚ŠãŒãŸã„ã€‚','2007-12-10 10:44:57','2007-12-10 01:44:57'),(47,'ZT7sbeYBRn','é–‹ç™ºéƒ¨MTGã€ŒDSLã§ãƒ†ã‚¹ãƒˆæ›¸ã“ã†ãœã€ by tokuhirom','DS400055.WMA','DSLã®æ›¸ãæ–¹ã¨ãƒ†ã‚¹ãƒˆã®æ›¸ãæ–¹ã«ã¤ã„ã¦ã®ãŠè©±ã€‚','2007-12-10 19:10:10','2007-12-10 10:10:10'),(48,'u31x7WgVFl','å…¬å¼MTGï¼ˆä»Šé€±ã©ã†ã—ã‚ˆã†ã‹ï¼‰','DS400056.WMA','ä»Šé€±ã‚’ã©ã†ä¹—ã‚Šåˆ‡ã‚‹ã‹ã®MTGã€‚GMOæ¥½æ›²ãƒªã‚¹ãƒˆã€ã‚¢ã‚µãƒƒãƒ—æ¥½æ›²åˆ¥URLãŒmustã€‚','2007-12-12 12:02:04','2007-12-12 03:02:04'),(49,'SrTtUJziFD','é–‹ç™ºéƒ¨MTGã€Œãƒ†ã‚¹ãƒˆã«ã¤ã„ã¦ã€ by nekokak','DS400057.WMA','è¦ç´„ã™ã‚‹ã¨ã€miyagawaã•ã‚“ã®ã‚³ãƒ¼ãƒ‰ã‚’èª­ã‚ã€‚ãªã‚“ã ã‘ã©ã€è¦‹ã‚‚ãµãŸã‚‚ç„¡ã„ã‹ã‚‰ã€Test::Base::Filters; ã¨ã‹ Test::Moreã‚‚ç¢ºèªã—ã‚ã¨ã„ã†ã“ã¨ã€‚ã‚ã¨ã€ãƒ¦ãƒ‹ãƒƒãƒˆãƒ†ã‚¹ãƒˆãƒ»çµåˆãƒ†ã‚¹ãƒˆãŒã§ã¦ããŸã€‚','2007-12-12 18:56:04','2007-12-12 09:56:04'),(50,'AJSePxFL4q','é–‹ç™ºéƒ¨MTGé›†å ±å‘Šä¼š','DS400058.WMA','ä»Šé€±ã®å ±å‘Šã—ã¾ã™ä¼šã€‚','2007-12-14 19:46:54','2007-12-14 10:46:54'),(51,'doybEdr8WJ','å…¬å¼MTGï¼ˆå®šä¾‹ï¼‰','DS400059.WMA','ãƒ»å››æ¢ã•ã‚“ä¼‘ã¿ã€‚\r\nãƒ»ãƒ’ãƒƒãƒˆãƒ©ãƒ³ã‚¯ç³»ã¯ãŠã‚ŒãŒã‚„ã‚‹','2007-12-17 11:01:02','2007-12-17 02:01:02'),(52,'grzuIbgBMm','é–‹ç™ºéƒ¨MTG by tokuhirom AS3','DS400062.WMA','action script3ã«ã¤ã„ã¦\r\n\r\nfcsh rascut ã‚’ä½¿ã†ã¨é–‹ç™ºãŒæ¥½ã‚‰ã—ã„ã€‚','2007-12-18 19:09:08','2007-12-18 10:09:08'),(53,'4sRj4qFjZB','å…¬å¼ç³»MTGã€€æ®‹ã‚Šã®ã‚¿ã‚¹ã‚¯ä»Šå¹´å¦‚ä½•ã—ã‚ˆã†ï¼Ÿä¼šè­°','DS400063.WMA','ä»Šå¹´ã‚’ä¹—ã‚Šåˆ‡ã‚‹ç‚ºã®ä¼šè­°ã€‚\r\nã¨ã‚Šã‚ãˆãšã€ãƒ’ãƒƒãƒˆãƒ©ãƒ³ã‚¯ã¨ã‚¨ãƒ•âˆšã¯ã‚„ã‚‹ã“ã¨ã«ãªã‚Šã¾ã—ãŸã€‚','2007-12-19 17:17:33','2007-12-19 08:17:33'),(54,'oBEdaMLn8d','é–‹ç™ºéƒ¨MTGã€ŒPerl 5.10ã«ã¤ã„ã¦ã€ by tokuhirom','DS400066.WMA','sayã¨ã‹é¢ç™½ãã†ã ã€‚','2007-12-20 19:15:33','2007-12-20 10:15:33'),(55,'OyDy2SKmiL','è‡ªåˆ†å†™çœŸï¼ˆã‹ã’ï¼‰','ore.jpg','ãŠã‚Œã®å†™çœŸ\r\n','2007-12-21 13:17:47','2007-12-21 04:17:47'),(56,'NCMmUvDDIl','é–‹ç™ºéƒ¨MTGé€±çºã‚','DS400067.WMA','ä»Šé€±ã®ã¾ã¨ã‚\r\n','2007-12-21 18:36:55','2007-12-21 09:36:55'),(57,'MJWB0gH6aK','å…¬å¼MTG(å®šä¾‹ï¼‰','DS400066.WMA','ä»Šå¹´æœ€å¾Œã®ã‚„ã¤ã€‚\r\nã‚„ã‚‹ã“ã¨ã‚ã‚Šã™ãŽã€‚','2007-12-25 12:26:03','2007-12-25 03:26:03'),(58,'OXTdmFFDST','é–‹ç™ºéƒ¨MTG by takefumi','DS400069.WMA','YAMAHAã®ãƒ«ãƒ¼ã‚¿ãƒ¼ã«ã¤ã„ã¦','2007-12-25 18:52:26','2007-12-25 09:52:26'),(59,'KiTGbK2TKZ','ã‚·ã‚¹ãƒ†ãƒ éƒ¨å‹‰å¼·ä¼š debian ãƒ‘ãƒƒã‚±ãƒ¼ã‚¸ã®ä½œã‚Šæ–¹','DS400071.WMA','ãƒ‘ãƒƒã‚±ãƒ¼ã‚¸ã®ä½œã‚Šæ–¹ã‹ã‚‰ã€ä»Šå¾Œã®å±•é–‹ã¾ã§ã®è©±ã€‚','2008-01-08 19:08:45','2008-01-08 10:08:45'),(60,'Kc7A6wTJH8','é–‹ç™ºéƒ¨MTGã€€aptã«ã¤ã„ã¦ by tokuhirom','DS400072.WMA','aptã«ã¤ã„ã¦ã®ä»Šå¾Œã®å±•é–‹ã¨ã‹è‰²ã€…ã€‚','2008-01-09 19:03:26','2008-01-09 10:03:26'),(61,'EPBmUoVPHo','é–‹ç™ºéƒ¨å‹‰å¼·ä¼š adlocalã«ã¤ã„ã¦','DS400075.WMA','æºå¸¯ã®åº§æ¨™ã¨ã‹ã«ã¤ã„ã¦ã€‚\r\n','2008-01-15 18:59:27','2008-01-15 09:59:27'),(62,'40jtRUIUHm','é–‹ç™ºéƒ¨MTG ã€ŒMoFedgeå…¬é–‹ã—ãŸã„ã€ by takefumi','DS400076.WMA','ã†ã¡ã®MoFedgeã‚’å…¬é–‹ã—ã‚ˆã†ã‹å¦‚ä½•ã—ã‚ˆã†ã‹ã®ç›¸è«‡ä¼šã€‚','2008-01-16 18:49:33','2008-01-16 09:49:33'),(63,'fGFO5WgWGg','é–‹ç™ºéƒ¨MTGã€€ä»Šé€±ã®ã¾ã¨ã‚','DS400077.WMA','ä»Šé€±ã¯è‰²ã€…ãƒ¡ãƒ³ãƒ†ãƒŠãƒ³ã‚¹ã—ã¦ãŸã€‚\r\nä¸»ã«DBå‘¨ã‚Šã®è² è·ã‚’ã•ã’ã‚‹æ€ç´¢ã€‚','2008-01-18 18:59:34','2008-01-18 09:59:34'),(64,'5K6LiOufNC','é–‹ç™ºéƒ¨å‹‰å¼·ä¼š EncodeJPMobile ã«ã¤ã„ã¦ by tokuhirom','DS400080.WMA','æ–‡å­—ã‚³ãƒ¼ãƒ‰ã®ä¸–ç•Œã«ã¤ã„ã¦è‰²ã€…ã®è©±ã€‚','2008-01-21 19:00:36','2008-01-21 10:00:36'),(65,'cJU8pPMhyc','é–‹ç™ºéƒ¨MTG by ã‚ˆã—ã¿ã‹ã‚“','DS400081.WMA','DBICã®resultsetattributã«ã¤ã„ã¦ã©ã†ã—ã‚ˆã†ã‹ï¼Ÿ\r\n\r\nçµè«–ï¼šDBIã§ã„ã„ã‚“ã˜ã‚ƒã­ã€‚','2008-01-23 19:05:01','2008-01-23 10:05:01'),(66,'lE63pynoSY','é–‹ç™ºéƒ¨MTGã€€é€±å ±','DS400082.WMA','ä»Šé€±ã®ã¾ã¨ã‚\r\n','2008-01-25 18:53:16','2008-01-25 09:53:16'),(67,'Y8nABFmoS6','é–‹ç™ºéƒ¨MTGã€€ã€ŒSecondLifeã®ä»Šå¾Œã«ã¤ã„ã¦ã€','DS400083.WMA','monoã¨ã‹LibSecondLifeã¨ã‹ã‚‚è©±ã—ãŸã€‚','2008-01-28 18:53:17','2008-01-28 09:53:17'),(68,'BlRdVeJlxv','é–‹ç™ºéƒ¨MTG [lost connection]by tokurirom','DS400090.WMA','lost connection ãŒå¦‚ä½•ç™ºç”Ÿã™ã‚‹ã‹ã¨ã„ã†ãŠè©±ã€‚\r\n','2008-02-12 20:11:50','2008-02-12 11:11:50'),(69,'P2eHpGbFw0','é–‹ç™ºéƒ¨MTGã€€by kan ã€Œã§ã¶ã•ã¿ã®å ±å‘Šä¼šã€','DS400091.WMA','C#ã®è©±ã¯ãŠã‚‚ã—ã‚ã‹ã£ãŸã€‚\r\n','2008-02-19 19:15:00','2008-02-19 10:15:00');
/*!40000 ALTER TABLE `file` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `note`
--

DROP TABLE IF EXISTS `note`;
CREATE TABLE `note` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `rid` varchar(10) NOT NULL,
  `title` varchar(255) NOT NULL,
  `tag` varchar(255) default NULL,
  `body` text NOT NULL,
  `created_at` datetime NOT NULL,
  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `rid` (`rid`),
  KEY `index_title` (`title`),
  KEY `note_tag` (`tag`),
  KEY `note_tag_timestamp` (`tag`,`timestamp`),
  FULLTEXT KEY `title` (`title`,`body`),
  FULLTEXT KEY `fulltext_index` (`body`),
  FULLTEXT KEY `fulltext_index_title_body` (`title`,`body`),
  FULLTEXT KEY `fulltext_index_title` (`title`)
) ENGINE=MyISAM AUTO_INCREMENT=312 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `note`
--

LOCK TABLES `note` WRITE;
/*!40000 ALTER TABLE `note` DISABLE KEYS */;
INSERT INTO `note` VALUES (1,'xsfWhLycnD','test',NULL,'test','2007-06-25 08:33:35','2007-06-24 23:33:35'),(2,'iE1JNpsiwf','test',NULL,'teest','2007-06-27 06:55:35','2007-06-26 21:55:35'),(3,'v7G4tSbpLx','test',NULL,'package main;\r\nuse strict;\r\n','2007-06-27 07:02:18','2007-06-26 22:02:18'),(4,'iuYUOfX417','test',NULL,'package main;\r\nuse strict;\r\n','2007-06-27 07:03:06','2007-06-26 22:03:06'),(5,'TuCaTisCzf','test',NULL,'package main;\r\nuse strict;\r\n','2007-06-27 07:09:42','2007-06-26 22:09:42'),(6,'mcoyYiYO7v','test',NULL,'<b> hoge </b>','2007-06-27 07:16:42','2007-06-26 23:14:19'),(7,'gqtJPukdEE','test',NULL,'adfasfasfasfasf\r\nasdf\r\nasfasfasfasfasdfasf\r\n<b>asdf</b>\r\nas\r\ndf\r\nasf\r\nã©ã†ã—ã¾ã™ã‹\r\nf\r\naf  ','2007-06-27 07:23:20','2007-06-26 23:17:22'),(8,'ndmq3Y4XUY','test',NULL,'adfasfasfasfasf\r\nasdf\r\nasfasfasfasfasdfasf\r\nasdf\r\nas\r\ndf\r\nasf\r\na\r\nf\r\naf','2007-06-27 07:35:29','2007-06-26 22:35:29'),(9,'D6ttKnKLVY','Elevetor',NULL,'string NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nkey rpc_chan;\r\n\r\nvector  _First_Floor     = <103.269, 136.721, 26.297>;\r\nvector  _Second_Floor    = <103.269, 136.721, 46.297>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}\r\n','2007-07-09 20:27:16','2007-07-09 11:27:16'),(10,'ygBOFEGvm8','ElevetorSwitch',NULL,'\r\n\r\n\r\nstring URL     = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"5e388b0c-bde9-d62c-9015-db021bf6e13e\";\r\n\r\ninteger DIALOG_CHANNEL = 42; // dialog channel\r\nlist MENU_MAIN = [\"first_floor\",\"second_floor\"]; // the main menu\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}\r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}\r\n\r\ndefault \r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n        //llListen( 0, \"\", llGetOwner(), \"\" );\r\n    }\r\n                \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"What do you want to do?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n    \r\n            \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            if (message == \"first_floor\")\r\n                 xmlrpc_client( _make_xml(CHANNEL ,\"up\", 1) ); \r\n            else if (message == \"second_floor\") \r\n                xmlrpc_client( _make_xml(CHANNEL ,\"down\", 2) );            \r\n        }          \r\n    }    \r\n}\r\n\r\n\r\n','2007-07-09 20:30:09','2007-07-09 11:31:04'),(11,'P2hQ3UgsET','Elevetorver2',NULL,'string NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nkey rpc_chan;\r\n\r\nvector  _First_Floor     = <103.269, 136.721, 26.297>;\r\nvector  _Second_Floor    = <103.269, 136.721, 46.297>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}\r\n','2007-07-09 21:09:11','2007-07-09 12:09:11'),(12,'CpQaQbFa26','ElevetorSwitch3',NULL,'string URL     = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"1183b9b4-4d5e-6796-095b-e72c232c14c9\";\r\n\r\n\r\ninteger DIALOG_CHANNEL = 42; // dialog channel\r\nlist MENU_MAIN = [\"first_floor\",\"second_floor\"]; // the main menu\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}\r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}\r\n\r\ndefault \r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n        //llListen( 0, \"\", llGetOwner(), \"\" );\r\n    }\r\n                \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"What do you want to do?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n    \r\n            \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            if (message == \"first_floor\")\r\n                xmlrpc_client( _make_xml(CHANNEL ,\"up\", 1) );\r\n            else if (message == \"second_floor\") \r\n                xmlrpc_client( _make_xml(CHANNEL ,\"down\", 2) );            \r\n        }          \r\n    }    \r\n}\r\n\r\n','2007-07-10 01:46:06','2007-07-09 16:46:06'),(13,'V8vaTixEMC','Elevetor3',NULL,'// --- xmlrpc client ---//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"5bfd1a14-5067-8738-33d8-bc97c9807254\";\r\n\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nkey rpc_chan;\r\n\r\nvector  _Second_Floor    = <104.269, 85.007, 46.209>;\r\nvector  _First_Floor     = <104.269, 85.007, 26.209>;\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\nstring  _NOW_POS         = \"First\";\r\n       \r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n                        \r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    if(! _MOVE_STATE && _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"motion\", 1 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n    \r\n    //moving_start() {\r\n        // --- frist floor ---//\r\n    //    if( _NOW_POS == \"First\" & _MOVE_STATE == FALSE ) {\r\n    //        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"motion\", 1 ) );\r\n    //    }     \r\n    //}\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"motion\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}','2007-07-10 01:46:45','2007-07-09 16:46:45'),(14,'jrZoihxReg','ElevetorDoor3',NULL,'integer isOpen = FALSE;\r\n\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan;\r\n\r\ninteger _MOTION = 1;\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llOpenRemoteDataChannel();\r\n    } \r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }\r\n           \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        llSay(0,\"Hello\");\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            llSay(0,(string)rpc_chan );\r\n            // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel E\'s Door\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if( idata == _MOTION ) {\r\n                rotation doorRot = llGetRot();\r\n                if(isOpen==FALSE){\r\n                    llSetRot(doorRot * llEuler2Rot(<0,0,PI_BY_TWO>));\r\n                    isOpen = TRUE;\r\n                }else{\r\n                    llSetRot(doorRot * llEuler2Rot(<0,0,-PI_BY_TWO>));\r\n                    isOpen = FALSE;\r\n                }\r\n            }\r\n        }  \r\n    }      \r\n        \r\n} ','2007-07-10 01:47:06','2007-07-09 16:47:06'),(15,'mf0HX2wkr7','å‘ãã®çµ¶å¯¾å€¤',NULL,'integer isOpen = FALSE;\r\nrotation default_doorRot = <0,0,0,1.0>; \r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n          //default_doorRot = llGetRot();   \r\n    }\r\n\r\n  touch_start(integer total_number)\r\n  {\r\n    llSay(0, (string) default_doorRot );\r\n    llSay(0, (string) llGetRot() );\r\n    if( default_doorRot == llGetRot() ) {\r\n      llSetRot(default_doorRot * llEuler2Rot(<0,0,PI_BY_TWO>));\r\n    }else{\r\n      llSetRot(default_doorRot );\r\n    }\r\n  }\r\n} ','2007-07-10 02:25:31','2007-07-09 17:25:31'),(16,'kK16XKVikA','Elevetor å‹•ä½œç¢ºèªç‰ˆ',NULL,'string NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nkey rpc_chan;\r\n\r\nvector  _First_Floor     = <103.269, 136.721, 26.297>;\r\nvector  _Second_Floor    = <103.269, 136.721, 46.297>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}\r\n','2007-07-10 04:35:59','2007-07-09 19:35:59'),(17,'eM4UEbsfpu','Elevetorè£½ä½œéŽç¨‹',NULL,'â– ã€€XMLRPCã‚µãƒ¼ãƒãƒ¼ã€€ï¼‹ã€€ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼ã€€åˆæˆ\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nXMLã‚µãƒ¼ãƒãƒ¼\r\n\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger UP   = 1;\r\ninteger DOWN = 2;\r\n\r\nkey rpc_chan;\r\nfloat   _MOVE_SECOND     = 3.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\n\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\ndefault {\r\n    state_entry()\r\n    {\r\n	llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n	// DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n	// send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n            // Email Send\r\n	    string msg;\r\n            msg = \"Command: OpenRPCChannel\\n\";\r\n            msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n            llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n	else if (event_type == REMOTE_DATA_REQUEST)\r\n	{\r\n		if (idata == UP)\r\n		{\r\n			llSetTimerEvent(_TIME_INTERVAL);\r\n            		llMoveToTarget(llGetPos() + < 0.0, 0.0,10.0> , _MOVE_SECOND);\r\n		}\r\n		else if(idata ==DOWN)\r\n		{\r\n	        	llSetTimerEvent(_TIME_INTERVAL);\r\n	            	llMoveToTarget(llGetPos() + < 0.0, 0.0,-10.0> , _MOVE_SECOND);\r\n		}\r\n\r\n	}\r\n\r\n\r\n    	timer()\r\n    	{\r\n        	llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n        	keepHorizon();\r\n	}\r\n\r\n	\r\n    }\r\n}\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nXMLã‚µãƒ¼ãƒãƒ¼\r\n\r\n// This is the email address that we send our initial notification request to. Your PHP script will read and parse the email at\r\n// this address later through POP3, so you should probably use one that is not used by anyone or anything else.\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\n\r\n// I always set constants for different idata commands sent through RPC. Then I just make sure they match the constants\r\n// that I set in my PHP file, and everything works great.\r\ninteger RPC_ERROR = 0;\r\ninteger RPC_COMMAND1 = 1;\r\ninteger RPC_COMMAND2 = 2;\r\n\r\n\r\n// This will be used as a reference later in case we need to know it.\r\nkey rpc_chan;\r\n\r\ndefault {\r\n    state_entry()\r\n    {\r\n	llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n        // If the RPC channel has just been opened, then we need to send off a notice to the webserver.\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            // We should keep a reference to the RPC channel that has been opened.\r\n            rpc_chan = channel;\r\n            \r\n            // Here, we can specify extra parameters in the email that we need the webserver to know, such as the RPC channel.\r\n            string msg;\r\n            msg = \"Command: OpenRPCChannel\\n\";\r\n            msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n            llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n            \r\n            llSay(0, \"Channel has been opened, and email has been sent. Waiting for ET to phone home.\");\r\n        }\r\n        \r\n        // If an RPC request has been sent from the webserver.\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            // We can check what command is coming through here, and handle them as needed.\r\n            if (idata == RPC_COMMAND1)\r\n            {\r\n                llSay(0, \"We have received a request for RPC_COMMAND1. Sending acknowledment.\");\r\n                llRemoteDataReply(channel, message_id, \"success\", RPC_COMMAND1);\r\n            \r\n            // Just checking for another command.\r\n            } \r\n            else if (idata == RPC_COMMAND2)\r\n            {\r\n                llSay(0, \"We have received a request for RPC_COMMAND2. Sending acknowledment.\");\r\n                llRemoteDataReply(channel, message_id, \"success\", RPC_COMMAND2);\r\n             // If it was an unrecognized command, we still have to send some sort of reply back.\r\n            } \r\n            else \r\n            {\r\n                llSay(0, \"An unrecognized RPC command was sent. Sending back error reply.\");\r\n                llRemoteDataReply(channel, message_id, \"\", RPC_ERROR);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆå´ã®Script\r\n\r\n\r\n\r\n\r\n\r\nstring URL          = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"f067b9e0-ac56-5eb8-3c63-403f0d784e4c\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}\r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}\r\n\r\ndefault\r\n{\r\n    touch_start(integer total_number)\r\n    {\r\n        xmlrpc_client( _make_xml(CHANNEL ,\"Hello World\", 10) );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-07-10 19:12:12','2007-07-10 10:12:12'),(18,'ZlQk4jD59d','Elevetorã®è§£èª¬',NULL,'//==========================================================================//\r\n// --- xmlrpc client ç”¨ã‚°ãƒ­ãƒ¼ãƒãƒ«å¤‰æ•°ç¾¤\r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"5bfd1a14-5067-8738-33d8-bc97c9807254\";\r\n\r\n//==========================================================================//\r\n//--- xmlrpc server  ç”¨ã‚°ãƒ­ãƒ¼ãƒãƒ«å¤‰æ•°ç¾¤\r\n//==========================================================================//\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan; // self server key\r\n\r\ninteger RPC_ERROR = 0;\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\n//==========================================================================//\r\n// ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿åŸºæœ¬æ©Ÿèƒ½ç”¨ã‚°ãƒ­ãƒ¼ãƒãƒ«å¤‰æ•°ç¾¤\r\n//==========================================================================//\r\n//--- ãƒ•ãƒ­ã‚¢ãƒ¼ã®åºŠã®çµ¶å¯¾å€¤ ---//\r\nvector  _Second_Floor    = <104.269, 85.007, 46.209>;\r\nvector  _First_Floor     = <104.269, 85.007, 26.209>;\r\n\r\n//--- ç§»å‹•ä¸­åˆ¤å®šãƒ•ãƒ©ã‚° ---//\r\ninteger _MOVE_STATE      = FALSE;\r\n\r\n//--- ç§»å‹•ã‚¹ãƒ”ãƒ¼ãƒ‰ ---//\r\nfloat   _MOVE_SECOND     = 5.0;\r\n\r\n//--- åˆ¶å¾¡è£…ç½®ç™ºå‹•ã‚¤ãƒ³ã‚¿ãƒ¼ãƒãƒ« ---//\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\n//--- å®‰å®šåŒ–åˆ¶å¾¡è£…ç½®ã§ä½¿ç”¨ ---//\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\n//---åœæ­¢æ™‚ã®ä½ç½® ---//\r\nstring  _NOW_POS         = \"First\";\r\n\r\n//==========================================================================//\r\n// XMLRPC Client Methods\r\n//==========================================================================//\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n\r\n//==========================================================================//\r\n// å§¿å‹¢å®‰å®šåŒ–è£…ç½®\r\n//==========================================================================//\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault {\r\n\r\n    // åˆæœŸåŒ–\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    // å‡ºç¾æ™‚ã«åˆæœŸåŒ–\r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    // XMLRPC Server ã¨ã—ã¦ã®å‡¦ç†ã‚’ã‹ãã¨ã“ã‚ã ã‚ˆ\r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // Serverã®keyã‚’ãŠãã‚‹ã‚ˆ\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n	// ãƒªã‚¯ã‚¨ã‚¹ãƒˆãŒæ¥ãŸã‚‰åå¿œã™ã‚‹ãœ\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n	    // ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼ãŒåœæ­¢ä¸­ãªã‚‰ã“ã“ãŒå‹•ä½œã™ã‚‹ãœ\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n		    // ç›®æ¨™åœ°ç‚¹ã‚’ï¼‘éšŽã¸ã‚»ãƒƒãƒˆ\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n		    // ç¾åœ¨åœæ­¢ä¸­ã®å ´æ‰€ãŒ Firstãªã‚‰ï¼‘éšŽã®Doorã‚’é–‰ã‚ã¾ã™\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"motion\", 1 ) );\r\n                        llSleep(2.0); // ã™ãã«å‹•ã‹ã™ã¨å‹•ä½œãŒã¸ã‚“ãªã®ã§ï¼’ç§’å¯ã‹ã—ã¾ã™\r\n                    }\r\n		    // ç›®æ¨™åœ°ç‚¹ã‚’ï¼’å›žã¸ã‚»ãƒƒãƒˆ\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n\r\n		// å‹•ä½œä¸­ãƒ•ãƒ©ã‚°ã‚’ç«‹ã¦ã¾ã™\r\n                _MOVE_STATE = TRUE;            \r\n		// æŒ™å‹•å®‰å®šåŒ–ç”¨ Timerã‚’èµ·å‹•ã•ã›ã¾ã™\r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n		// ç›®æ¨™åœ°ç‚¹IDã‚’å–å¾—\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n		// ç§»å‹•é–‹å§‹\r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n    \r\n    // ã‚¿ãƒ¼ã‚²ãƒƒãƒˆã«ãŸã©ã‚Šç€ã„ãŸã‚‰å‹•ãã¾ã™ãœ\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"motion\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}','2007-07-10 19:35:52','2007-07-10 10:35:52'),(19,'K5kwwzASz7','XMLRPC Client and Dialog',NULL,'//==========================================================================//\r\n// Dialog\r\n//==========================================================================//\r\ninteger DIALOG_CHANNEL = 42;       // dialog channel\r\nlist MENU_MAIN = [\"open\",\"close\"]; // the main menu\r\n\r\n//==========================================================================//\r\n// XMLRPC Client \r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"40d1354b-8332-2bd2-7f6c-86911f58418a\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n    }\r\n    \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"What do you want to do?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n      \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            if (message == \"open\")\r\n                xmlrpc_client( _make_xml(CHANNEL ,\"open\", 1) );\r\n            else if (message == \"close\") \r\n                xmlrpc_client( _make_xml(CHANNEL ,\"close\", 0) );            \r\n        }          \r\n    }    \r\n}\r\n','2007-07-10 12:00:29','2007-07-10 03:01:57'),(20,'pLx0QeCXTi','ElevetorFloor ver4',NULL,'//==========================================================================//\r\n// XMLRPC Server\r\n//==========================================================================//\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan;\r\n\r\n//==========================================================================//\r\n// Elevetor\r\n//==========================================================================//\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nvector  _First_Floor     = <103.269, 136.721, 26.297>;\r\nvector  _Second_Floor    = <103.269, 136.721, 46.297>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nstring  _NOW_POS         = \"First\";\r\n\r\n//==========================================================================//\r\n// XMLRPC Client \r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"441103c5-2bdb-634f-211f-201c3e7b87b7\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n//==========================================================================//\r\n// keepHorizon\r\n//==========================================================================//\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"open\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n} ','2007-07-10 12:22:54','2007-07-10 03:22:54'),(21,'qvmHZ0rH3T','ElevetorFloor ver5',NULL,'\r\nâ– ï¼‘éšŽéƒ¨åˆ†ã®æ‰‰ã¨ã®é€£å‹•æˆåŠŸç‰ˆ\r\n\r\n\r\n//==========================================================================//\r\n// XMLRPC Server\r\n//==========================================================================//\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan;\r\n\r\n//==========================================================================//\r\n// Elevetor\r\n//==========================================================================//\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nvector  _First_Floor     = <103.269, 136.721, 26.297>;\r\nvector  _Second_Floor    = <103.269, 136.721, 46.297>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nstring  _NOW_POS         = \"First\";\r\n\r\n//==========================================================================//\r\n// XMLRPC Client \r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"40d1354b-8332-2bd2-7f6c-86911f58418a\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n//==========================================================================//\r\n// keepHorizon\r\n//==========================================================================//\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"open\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n} ','2007-07-10 12:37:01','2007-07-10 03:37:01'),(22,'F9wCvxixEk','ç›´æŽ¥ãƒªãƒ³ã‚¯æ–¹ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆ',NULL,'//==========================================================================//\r\n// XMLRPC Server\r\n//==========================================================================//\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan;\r\n\r\n//==========================================================================//\r\n// Elevetor\r\n//==========================================================================//\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nvector  _First_Floor     = <104.269, 85.008, 26.004>;\r\nvector  _Second_Floor    = <104.269, 85.008, 46.004>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nstring  _NOW_POS         = \"First\";\r\n\r\n//==========================================================================//\r\n// XMLRPC Client \r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"5bfd1a14-5067-8738-33d8-bc97c9807254\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n//==========================================================================//\r\n// keepHorizon\r\n//==========================================================================//\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    link_message(integer sender_num, integer num, string str, key id)\r\n    {\r\n        \r\n            if(!_MOVE_STATE ) {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        _TARGET_POS = _First_Floor ;\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    else if( _NOW_POS == \"Second\" ) {\r\n                        _TARGET_POS =  _Second_Floor;\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                \r\n                    llSay(0,(string)_TARGET_POS);\r\n                    _MOVE_STATE = TRUE;            \r\n                    llSetTimerEvent(_TIME_INTERVAL);\r\n                    _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                    \r\n                    llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n\r\n    }\r\n    \r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"open\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}  ','2007-07-10 17:37:57','2007-07-10 08:37:57'),(23,'AAKVTRyrqr','ç›´æŽ¥å‘½ä»¤åž‹ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼',NULL,'//==========================================================================//\r\n// XMLRPC Server\r\n//==========================================================================//\r\nstring NOTIFY_EMAIL = \"yamanaka@mfac.jp\";\r\nkey rpc_chan;\r\n\r\n//==========================================================================//\r\n// Elevetor\r\n//==========================================================================//\r\ninteger FIRST_FLOOR  = 1;\r\ninteger SECOND_FLOOR = 2;\r\n\r\nvector  _First_Floor     = <104.269, 85.008, 27.004>;\r\nvector  _Second_Floor    = <104.269, 85.008, 46.004>;\r\n\r\ninteger _MOVE_STATE      = FALSE;\r\nfloat   _MOVE_SECOND     = 5.0;\r\nfloat   _TIME_INTERVAL   = 0.1;\r\n\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n\r\nstring  _NOW_POS         = \"First\";\r\n\r\n//==========================================================================//\r\n// XMLRPC Client \r\n//==========================================================================//\r\nstring URL           = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring _DOOR_CHANNEL = \"5bfd1a14-5067-8738-33d8-bc97c9807254\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}                                \r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}        \r\n//==========================================================================//\r\n// keepHorizon\r\n//==========================================================================//\r\nkeepHorizon()\r\n{\r\n    vector cur_rot = llRot2Euler(llGetRot());\r\n    float  z_rot   = cur_rot.z;\r\n    llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault {\r\n    \r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llOpenRemoteDataChannel();\r\n    }\r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }    \r\n    \r\n    remote_data(integer event_type, key channel, key message_id, string sender, integer idata, string sdata)\r\n    {\r\n        // DebugMessage;\r\n        llSay(0,(string)idata);\r\n        llSay(0,(string)sdata);\r\n\r\n        // send \'channel key\'\r\n        if (event_type == REMOTE_DATA_CHANNEL)\r\n        {\r\n            rpc_chan = channel;\r\n            \r\n                // Email Send\r\n            string msg;\r\n                msg = \"Command: OpenRPCChannel\\n\";\r\n                msg += \"RPC-Chan: \"+(string)rpc_chan+\"\\n\";\r\n                llEmail(NOTIFY_EMAIL, \"RPC Chan Opened\", msg);\r\n        }\r\n        else if (event_type == REMOTE_DATA_REQUEST)\r\n        {\r\n            llSay(0 , sdata);\r\n            if(!_MOVE_STATE ) {\r\n                if (idata == FIRST_FLOOR)\r\n                {\r\n                    _TARGET_POS = _First_Floor ;\r\n                }\r\n                else if(idata == SECOND_FLOOR)\r\n                {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    _TARGET_POS =  _Second_Floor;\r\n    \r\n                }\r\n                else {\r\n                    _TARGET_POS = llGetPos() ;       \r\n                }\r\n                \r\n                llSay(0,(string)_TARGET_POS);\r\n                _MOVE_STATE = TRUE;            \r\n                llSetTimerEvent(_TIME_INTERVAL);\r\n                llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n                _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                \r\n                llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    link_message(integer sender_num, integer num, string str, key id)\r\n    {\r\n        \r\n            if(!_MOVE_STATE ) {\r\n                    if( _NOW_POS == \"First\" ) {\r\n                        _TARGET_POS = _Second_Floor ;\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                    else if( _NOW_POS == \"Second\" ) {\r\n                        _TARGET_POS =  _First_Floor;\r\n                        xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"close\", 0 ) );\r\n                        llSleep(2.0);\r\n                    }\r\n                \r\n                    llSay(0,(string)_TARGET_POS);\r\n                    _MOVE_STATE = TRUE;            \r\n                    llSetTimerEvent(_TIME_INTERVAL);\r\n                    llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n                    _TARGET_ID = llTarget(_TARGET_POS, _TARGET_MARGIN);\r\n                    \r\n                    llMoveToTarget(_TARGET_POS , _MOVE_SECOND);\r\n            }\r\n\r\n    }\r\n    \r\n    at_target(integer number, vector targetpos, vector ourpos)\r\n    {\r\n        llSay(0, \"at_target\");\r\n        \r\n        // set now position.\r\n        if( _TARGET_POS == _First_Floor ) \r\n        {\r\n            _NOW_POS = \"First\";\r\n            xmlrpc_client( _make_xml( _DOOR_CHANNEL, \"open\", 1 ) );\r\n        }\r\n        else if ( _TARGET_POS ==  _Second_Floor )\r\n        {\r\n            _NOW_POS = \"Second\";    \r\n        }    \r\n        \r\n        llTargetRemove(_TARGET_ID);\r\n        llStopMoveToTarget();\r\n        \r\n        llSetTimerEvent(FALSE);\r\n        keepHorizon();\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        _MOVE_STATE = FALSE;\r\n        \r\n        llSetPos(_TARGET_POS);\r\n    }    \r\n                     \r\n    timer()\r\n    {\r\n            llSay(0 , (string) llGetPos() );\r\n            llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n            keepHorizon();\r\n    }\r\n\r\n    \r\n}  ','2007-07-10 18:19:38','2007-07-10 09:19:38'),(24,'zYevdQgWvH','ç›´æŽ¥å‘½ä»¤åž‹ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼ã‚¹ã‚¤ãƒƒãƒ',NULL,'//==========================================================================//\r\n// Dialog\r\n//==========================================================================//\r\ninteger DIALOG_CHANNEL = 42; // dialog channel\r\nlist MENU_MAIN = [\"second_floor\"]; // the main menu\r\n\r\n//==========================================================================//\r\n// XMLRPC Client\r\n//==========================================================================//\r\nstring URL     = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"1183b9b4-4d5e-6796-095b-e72c232c14c9\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}\r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault \r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n    }\r\n                \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"What do you want to do?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n    \r\n            \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            if (message == \"second_floor\")\r\n                 xmlrpc_client( _make_xml(CHANNEL ,\"second_floor\", 1) ); \r\n        }          \r\n    }    \r\n}\r\n','2007-07-10 18:34:09','2007-07-10 09:34:09'),(25,'LhxcDbDQjB','pet ã«é–¢ã™ã‚‹è€ƒå¯Ÿ',NULL,'ä¸‹è¨˜ã®ï¼’ã¤ã‚’ç”¨ã„ã¦ã‚ªãƒ¼ãƒŠãƒ¼ã®å ´æ‰€ã‚’\r\n\r\nkey llGetOwnerKey(key id)\r\n\r\ninteger llGetAgentInfo(key id)\r\n\r\n\r\nå¾—ã‚‹ã“ã¨ãŒã§ããªã„ã“ã¨ãŒã‚ã‹ã£ãŸã€‚\r\n\r\n\r\nã¨ã‚Šãˆã‚ãšã€ã‚»ãƒ³ã‚µãƒ¼ã‚’ä½¿ã£ã¦ã€ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«è¿½è·¡ã•ã›ã‚‹æ–¹é‡ã§ã„ãã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-07-11 11:54:18','2007-07-11 02:54:18'),(26,'09bGoFjJSS','ã‚»ãƒ³ã‚µãƒ¼ï¼ˆï¼¯ï½—ï½Žï½…ï½’åå¿œï¼‰',NULL,'default\r\n{\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n        // The following \'for\' loop runs through all detected avatars and says \"Hello Jane Doe\",\r\n        // where \"Jane Doe\" is the name of the current detected avatar.\r\n        integer i;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                llWhisper(0, \"Hello \" + llDetectedName(i));\r\n            }\r\n        }\r\n    }\r\n}\r\n','2007-07-11 15:57:28','2007-07-11 06:57:28'),(27,'91lgkInJy0','SensorRepeat ',NULL,'default\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 10, PI, 30 );\r\n    }    \r\n    \r\n    touch_start(integer total_number)\r\n    {\r\n        //llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n        // The following \'for\' loop runs through all detected avatars and says \"Hello Jane Doe\",\r\n        // where \"Jane Doe\" is the name of the current detected avatar.\r\n        integer i;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                llWhisper(0, \"Hello \" + llDetectedName(i));\r\n            }\r\n        }\r\n    }\r\n}\r\n','2007-07-11 16:09:51','2007-07-11 07:09:51'),(28,'17i7wL1ykG','llSensorRepeat',NULL,'default\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 10, PI, 30 );\r\n    }    \r\n    \r\n    touch_start(integer total_number)\r\n    {\r\n        //llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n            }\r\n        }\r\n    }\r\n}','2007-07-11 16:37:09','2007-07-11 07:37:09'),(29,'KBpjOoEFu8','pet ã‚¹ãƒˆãƒ¼ã‚­ãƒ³ã‚°',NULL,'integer OWNER_FG;\r\n\r\nstroking_owner( vector owner_pos )\r\n{\r\n    //--- self pos --//\r\n    vector pet_pos = llGetPos();\r\n\r\n    if( pet_pos.x > owner_pos.x )\r\n        pet_pos.x--;\r\n    else if( pet_pos.x < owner_pos.x )\r\n        pet_pos.x++;  \r\n    \r\n    if( pet_pos.y > owner_pos.y )\r\n        pet_pos.y--;\r\n    else if( pet_pos.y < owner_pos.y )\r\n        pet_pos.y++;                    \r\n\r\n    llSetPos(pet_pos);             \r\n}\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        OWNER_FG = 0;\r\n        //llSensorRepeat(\"\", llGetOwner(), AGENT, 10, PI, 30 );\r\n    }    \r\n    \r\n    // for check //\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n                OWNER_FG = 1;\r\n            }\r\n        }\r\n        \r\n        if( OWNER_FG ) {\r\n            stroking_owner(owner_pos);\r\n        }\r\n    }\r\n}    \r\n\r\n','2007-07-11 20:50:44','2007-07-11 11:52:59'),(30,'RuZF6s85Sn','ãƒ—ãƒ¬ã‚¼ãƒ³ãƒãƒ ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ',NULL,'use strict;\r\nuse warnings;\r\n\r\nmy $pet = {\r\n    x => 10,\r\n    y => 10,\r\n};\r\n\r\n\r\nsub build_path {\r\n    my ( $owner ) = @_ ;\r\n    my $currnet_step = 1;\r\n\r\n    if( $pet->{x} == $owner->{x} && $pet->{y} == $owner->{y} ) {\r\n        return;\r\n    }\r\n\r\n    my $nextX = $pet->{x};\r\n    my $nextY = $pet->{y};\r\n    my $deltaX = $owner->{x} - $pet->{x};\r\n    my $deltaY = $owner->{y} - $pet->{y};\r\n    my ($stepX, $stepY);\r\n    my $step;\r\n    my $fraction;\r\n\r\n    my @path;\r\n    #for ($step = 0; $step < $MAX_PATH_LENGTH; $step++) {\r\n    #    $path[$step] = undef;\r\n    #}\r\n\r\n    $step = 0;\r\n\r\n    if ($deltaX < 0){ $stepX = -1;} else { $stepX = 1;}\r\n    if ($deltaY < 0){ $stepY = -1;} else { $stepY = 1;}\r\n\r\n    $deltaX = abs( $deltaX * 2 );\r\n    $deltaY = abs( $deltaY * 2 );\r\n\r\n    $path[$step] =  { nextX => $nextX, nextY => $nextY };\r\n    $step++;\r\n\r\n    if ($deltaX > $deltaY) {\r\n        $fraction = $deltaY - $deltaX / 2;\r\n        while ($nextX != $owner->{x}) {\r\n            if ($fraction >= 0) {\r\n                $nextY += $stepY;\r\n                $fraction -= $deltaX;\r\n            }\r\n            $nextX += $stepX;\r\n            $fraction += $deltaY;\r\n            $path[$step] = { nextX => $nextX , nextY => $nextY };\r\n            $step++;\r\n        }\r\n    } else {\r\n        $fraction = $deltaX - $deltaY / 2;\r\n        while ($nextY != $owner->{y}) {\r\n            if ($fraction >= 0) {\r\n                $nextX += $stepX;\r\n                $fraction -= $deltaY;\r\n            }\r\n            $nextY += $stepY;\r\n            $fraction += $deltaX;\r\n            $path[$step] = { nextX => $nextX, nextY => $nextY };\r\n            $step++;\r\n        }\r\n    }\r\n\r\n    return \\@path;\r\n}\r\n\r\n\r\nuse Data::Dumper;\r\nwarn Dumper build_path({ x=> 30, y => 50 });\r\n','2007-07-12 11:40:23','2007-07-12 02:40:23'),(31,'BOnQ2aFgAw','lsl ãƒ—ãƒ¬ã‚¼ãƒ³ãƒãƒ ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ',NULL,'integer OWNER_FG;\r\nfloat   ff_value = 1.5;\r\nfloat STEP = 1.0;\r\n\r\nfloat abs_float( float value )\r\n{\r\n    if( value > 0 )\r\n        return value;\r\n    else\r\n        return ( -1.0 * value );\r\n}\r\n\r\nlist build_path( vector owner_pos ) \r\n{\r\n    vector pet_pos = llGetPos();\r\n    list path;\r\n    //--- Same position. \r\n    if( pet_pos.x == owner_pos.x && pet_pos.y == owner_pos.y )\r\n    {\r\n        return [];   \r\n    }\r\n    else {\r\n        float next_x  = pet_pos.x;\r\n        float next_y  = pet_pos.y;\r\n        float delta_x = owner_pos.x - pet_pos.x;\r\n        float delta_y = owner_pos.y - pet_pos.y;\r\n        float step_x;\r\n        float step_y;\r\n        //integer step;\r\n        float fraction;\r\n        \r\n        if( delta_x < 0 ) step_x = -STEP; else step_x = STEP;\r\n        if( delta_y < 0 ) step_y = -STEP; else step_y = STEP;\r\n        \r\n        delta_x = abs_float( delta_x * 2.0 );\r\n        delta_y = abs_float( delta_y * 2.0 );\r\n        \r\n        path = [ llList2CSV([ (string)next_x, (string)next_y ]) ];\r\n        \r\n        if( delta_x > delta_y ) {\r\n            fraction = delta_y - delta_x / 2;\r\n            while( next_x != owner_pos.x ) {\r\n                if( fraction >= 0 ) {\r\n                    next_y   += step_y;\r\n                    fraction -= delta_x;\r\n                }\r\n                next_x   += step_x;\r\n                fraction += delta_y;\r\n                path +=  llList2CSV([ (string)next_x, (string)next_y ]);\r\n            }\r\n        }\r\n        \r\n    } \r\n\r\n    return path;       \r\n}\r\n\r\n\r\n\r\n\r\nstroking_owner( vector owner_pos )\r\n{\r\n    //--- self pos --//\r\n    vector pet_pos = llGetPos();\r\n\r\n    if( pet_pos.x > owner_pos.x )\r\n        pet_pos.x -= ff_value;\r\n    else if( pet_pos.x < owner_pos.x )\r\n        pet_pos.x += ff_value;  \r\n    \r\n    if( pet_pos.y > owner_pos.y )\r\n        pet_pos.y -= ff_value;\r\n    else if( pet_pos.y < owner_pos.y )\r\n        pet_pos.y += ff_value;                    \r\n\r\n    llSetPos(pet_pos);             \r\n}\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        OWNER_FG = 0;\r\n        //llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1 );\r\n    }    \r\n    \r\n    // for check //\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                //llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n                OWNER_FG = 1;\r\n            }\r\n        }\r\n        \r\n        if( OWNER_FG ) {\r\n            stroking_owner(owner_pos);\r\n        }\r\n    }\r\n}    \r\n\r\n','2007-07-12 13:12:17','2007-07-12 04:12:17'),(32,'zMKFX5MjmR','lsl ãƒ—ãƒ¬ã‚¼ãƒ³ãƒãƒ ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ  ver2',NULL,'integer OWNER_FG;\r\nfloat   ff_value = 1.5;\r\nfloat STEP = 1.0;\r\n\r\nfloat abs_float( float value )\r\n{\r\n    if( value > 0 )\r\n        return value;\r\n    else\r\n        return ( -1.0 * value );\r\n}\r\n\r\nlist build_path( vector owner_pos ) \r\n{\r\n    vector pet_pos = llGetPos();\r\n    list path;\r\n    //--- Same position. \r\n    if( pet_pos.x == owner_pos.x && pet_pos.y == owner_pos.y )\r\n    {\r\n        return [];   \r\n    }\r\n    else {\r\n        float next_x  = pet_pos.x;\r\n        float next_y  = pet_pos.y;\r\n        float delta_x = owner_pos.x - pet_pos.x;\r\n        float delta_y = owner_pos.y - pet_pos.y;\r\n        float step_x;\r\n        float step_y;\r\n        float fraction;\r\n        \r\n        if( delta_x < 0 ) step_x = -STEP; else step_x = STEP;\r\n        if( delta_y < 0 ) step_y = -STEP; else step_y = STEP;\r\n        \r\n        delta_x = abs_float( delta_x * 2.0 );\r\n        delta_y = abs_float( delta_y * 2.0 );\r\n        \r\n        path = [ llList2CSV([ (string)next_x, (string)next_y ]) ];\r\n        llSay(0, llList2CSV([ (string)next_x, (string)next_y ]) );\r\n        if( delta_x > delta_y ) {\r\n            fraction = delta_y - delta_x / 2;\r\n            while( next_x != owner_pos.x ) {\r\n                if( fraction >= 0 ) {\r\n                    next_y   += step_y;\r\n                    fraction -= delta_x;\r\n                }\r\n                next_x   += step_x;\r\n                fraction += delta_y;\r\n                path +=  [llList2CSV([ (string)next_x, (string)next_y ])];\r\n            }\r\n        }\r\n        else {\r\n            fraction = delta_x - delta_y / 2;\r\n            while( next_y != owner_pos.y ) {\r\n                if( fraction >= 0 ) {\r\n                    next_x   += step_x;\r\n                    fraction -= delta_y;\r\n                }\r\n                next_y   += step_y;\r\n                fraction -= delta_x;\r\n                path +=  llList2CSV([ (string)next_x, (string)next_y ]);\r\n            }                \r\n        }\r\n        \r\n    } \r\n    llSay(0, (string) path );\r\n    return path;       \r\n}\r\n\r\n\r\n\r\n\r\nstroking_owner( vector owner_pos )\r\n{\r\n    //--- self pos --//\r\n    vector pet_pos = llGetPos();\r\n\r\n    if( pet_pos.x > owner_pos.x )\r\n        pet_pos.x -= ff_value;\r\n    else if( pet_pos.x < owner_pos.x )\r\n        pet_pos.x += ff_value;  \r\n    \r\n    if( pet_pos.y > owner_pos.y )\r\n        pet_pos.y -= ff_value;\r\n    else if( pet_pos.y < owner_pos.y )\r\n        pet_pos.y += ff_value;                    \r\n\r\n    llSetPos(pet_pos);             \r\n}\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        OWNER_FG = 0;\r\n        //llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1 );\r\n    }   \r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }        \r\n      \r\n    \r\n    // for check //\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                //llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n                OWNER_FG = 1;\r\n            }\r\n        }\r\n        \r\n        if( OWNER_FG ) {\r\n            stroking_owner(owner_pos);\r\n            list hoge = build_path(owner_pos);\r\n            llSay(0, (string) hoge );\r\n        }\r\n    }\r\n}    \r\n\r\n','2007-07-12 14:44:47','2007-07-12 05:44:47'),(33,'bMxhBsvzAX','lsl ãƒ—ãƒ¬ã‚¼ãƒ³ãƒãƒ ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ  ver3',NULL,'//=========================================================================//\r\nfloat åž‹ã§ã‚„ã‚‹ã¨ over flow ã™ã‚‹ã®ã§ã€€integerã§ã‚„ã‚‹ã“ã¨\r\n//=========================================================================//\r\n\r\ninteger OWNER_FG;\r\nfloat   ff_value = 1.5;\r\ninteger STEP = 1;\r\n\r\nfloat abs_float( float value )\r\n{\r\n    if( value > 0 )\r\n        return value;\r\n    else\r\n        return ( -1.0 * value );\r\n}\r\n\r\nlist build_path( vector owner_pos ) \r\n{\r\n    llSay( 0, (string) owner_pos );\r\n    vector pet_pos = llGetPos();\r\n    list path;\r\n    \r\n    //--- Same position. \r\n    // FIXME: XXXX\r\n    if( pet_pos.x == owner_pos.x && pet_pos.y == owner_pos.y )\r\n    {\r\n        return [];   \r\n    }\r\n    \r\n    else {\r\n        integer next_x   = (integer) pet_pos.x;\r\n        integer next_y   = (integer) pet_pos.y;\r\n        integer delta_x  = (integer) ( owner_pos.x - pet_pos.x );\r\n        integer delta_y  = (integer) ( owner_pos.y - pet_pos.y );\r\n        integer step_x;\r\n        integer step_y;\r\n        integer fraction;\r\n        \r\n        if( delta_x < 0 ) step_x = -STEP; else step_x = STEP;\r\n        if( delta_y < 0 ) step_y = -STEP; else step_y = STEP;\r\n        \r\n        delta_x = llAbs( delta_x * 2 );\r\n        delta_y = llAbs( delta_y * 2 );\r\n        \r\n        path = [ llList2CSV([ (string)next_x, (string)next_y ]) ];\r\n        if( delta_x > delta_y ) {\r\n            fraction = delta_y - delta_x / 2;\r\n            while( next_x != (integer) owner_pos.x ) {\r\n                if( fraction >= 0 ) {\r\n                    next_y   += step_y;\r\n                    fraction -= (integer) delta_x;\r\n                }\r\n                next_x   += step_x;\r\n                fraction += delta_y;\r\n                path +=  [llList2CSV([ (string)next_x, (string)next_y ])];\r\n            }\r\n        }\r\n        else {\r\n            fraction = delta_x - delta_y / 2;\r\n            while( next_y != (integer) owner_pos.y ) {\r\n                if( fraction >= 0 ) {\r\n                    next_x   += step_x;\r\n                    fraction -= delta_y;\r\n                }\r\n                next_y   += step_y;\r\n                fraction -= delta_x;\r\n                path +=  llList2CSV([ (string)next_x, (string)next_y ]);\r\n            }                \r\n        }\r\n        \r\n    } \r\n    return path;       \r\n}\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        OWNER_FG = 0;\r\n    }   \r\n    \r\n    on_rez(integer start_param) {\r\n        llResetScript(); \r\n    }        \r\n      \r\n    // for check //\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 10, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                //llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n                OWNER_FG = 1;\r\n            }\r\n        }\r\n        \r\n        if( OWNER_FG ) {\r\n            list path = build_path(owner_pos);\r\n            llSay(0, (string) path );\r\n            \r\n            integer loop_count;\r\n            for( loop_count = 0; loop_count < llGetListLength( path ); loop_count++) {\r\n                string path_x_y = llList2String(path, loop_count);\r\n                llSay(0, path_x_y );\r\n                llSleep(2);    \r\n            }            \r\n            \r\n        }\r\n    }\r\n}    \r\n\r\n','2007-07-12 15:19:19','2007-07-12 06:19:19'),(34,'Q8UN1AoHW3','petã®ä½œæˆã«é–¢ã—ã¦',NULL,'â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nâ– ã€€ä»¥ä¸‹ã®ï¼’ç‚¹ã‚’æŽ¢ã—ã ã™ã€‚\r\n\r\n	ãƒ»æŒã¡ä¸»ã®åº§æ¨™ãŠã‚ˆã³å–å¾—ã§ãã‚‹æƒ…å ±ã‚’ã¬ãã ã™ã€‚\r\n	ãƒ»ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®æ–¹å‘ã‚’è‡ªå‹•ã§ã‚³ãƒ³ãƒˆãƒ­ãƒ¼ãƒ«ã™ã‚‹æ–¹æ³•ã‚’æŠœãå‡ºã™ã€‚\r\n\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã‚»ãƒ³ã‚µãƒ¼ã§Ownerã‚’æ¤œå‡ºã™ã‚‹æ–¹æ³•ã¯ã“ã†ãªã‚‹ã€‚\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos = llDetectedPos(i);\r\n                OWNER_FG = 1;\r\n            }\r\n        }\r\n    }	\r\n\r\nllDetectedç³»ã§æ§˜ã€…ãªæƒ…å ±ã‚’å¾—ã‚‹ã“ã¨ãŒã§ãã‚‹ã®ã§\r\n\r\n\r\n	ãƒ»llDetectedRotï¼šå›žè»¢ã‚’èª¿ã¹ã‚‹ã€‚\r\n	ãƒ»llDetectedPosï¼šä½ç½®ã‚’èª¿ã¹ã‚‹ã€‚\r\n	ãƒ»llDetectedKeyï¼šKeyã‚’èª¿ã¹ã‚‹\r\n\r\nã§ã€ä¸‹è¨˜ã§è§’åº¦ã‚’å–å¾—ã§ãã‚‹ã®ã§\r\n\r\n> # å¯¾è±¡ç‰©ã‹ã‚‰ã®è§’åº¦ã‚’å–å¾—ã™ã‚‹ï¼ˆè·é›¢ã«å¿œã˜ã¦å¤‰åŒ–ã™ã‚‹ï¼‰\r\n> \r\n> vector d=llDetectedPos(i)-llGetPos();\r\n> d=llVecNorm(d);\r\n\r\n\r\nä»»æ„ã®è§’åº¦ã«ä½ç½®ã§ãã‚‹ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-07-13 07:34:50','2007-07-12 22:34:50'),(35,'F1che5ubg9','stroking pet',NULL,'integer OWNER_FG;\r\nfloat _MOVE_SECOND = 2.0;\r\n\r\nvector  _TARGET_POS;\r\ninteger _TARGET_ID;\r\nfloat   _TARGET_MARGIN   = 0.2;\r\nfloat   OWNER_R = 10;\r\nfloat   PET_R   = 5;\r\n\r\nfloat OWNER_RAY = 5.0;\r\nfloat PET_RAY   = 2.0;\r\n\r\ninteger ATTAINMENT_FG = 0;\r\n\r\nfloat distance( vector target_a , vector target_b )\r\n{\r\n    return llSqrt(  ( target_b.x - target_a.x ) * ( target_b.x - target_a.x ) + ( target_b.y - target_a.y ) * ( target_b.y - target_a.y )  ); \r\n} \r\n\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        //llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n        llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n        //llParticleSystem([PSYS_SRC_PATTERN_DROP]);\r\n        OWNER_FG = 0;\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 10, PI, 1);\r\n    }    \r\n    \r\n    // for check //\r\n    touch_start(integer total_number)\r\n    {\r\n        llSensor(\"\", llGetOwner(), AGENT, 30, PI); // scan for agents/avatars within 10 metres.\r\n    }\r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            // --- find owner ---//\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                //llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n                owner_pos        = llDetectedPos(i);\r\n                vector pet_pos   = llGetPos();\r\n                float kakudo = llAtan2( owner_pos.x - pet_pos.x , owner_pos.y - pet_pos.y );\r\n                //llSay( 0, (string) kakudo);\r\n                OWNER_FG = 1;\r\n                \r\n                //--- distance check ---//\r\n                float distance = distance( pet_pos, owner_pos );\r\n                //llSay( 0, (string) distance );\r\n                if( distance < 5.0  ) {\r\n                    ATTAINMENT_FG = 1;       \r\n                }\r\n                else {\r\n                    \r\n                    llLookAt(owner_pos, 5.0, 1.0);\r\n                    //--- change ---//\r\n                    //vector eul = <0, 0, kakudo>;\r\n                    //eul *= DEG_TO_RAD;\r\n                    //rotation quat = llEuler2Rot( eul );\r\n                    //rotation quat0 = llGetRot();\r\n                    //llSetRot( quat * quat0); \r\n                    //llSay(0 , (string) owner_pos );\r\n                    _TARGET_ID = llTarget(owner_pos, _TARGET_MARGIN);                   \r\n                    llMoveToTarget(owner_pos , _MOVE_SECOND);\r\n                }        \r\n                //float en    = ( pet_pos.x  - owner_pos.x ) * ( pet_pos.x  - owner_pos.x )  \r\n                //           + ( pet_pos.y - owner_pos.y )*( pet_pos.y - owner_pos.y ) ;\r\n                //float  ray  = ( OWNER_RAY + PET_RAY );\r\n                //if( test <= ( PET_R - OWNER_R ) ) {\r\n                //    llSay(0, \"ok\");    \r\n                //}       \r\n            }\r\n        }\r\n        \r\n        if( OWNER_FG ) {\r\n            //stroking_owner(owner_pos);\r\n        }\r\n    }\r\n    not_at_target()\r\n    {\r\n        if(ATTAINMENT_FG) {\r\n            llTargetRemove(_TARGET_ID);\r\n            llStopMoveToTarget();\r\n            ATTAINMENT_FG = 0;\r\n        }    \r\n        //llSay(0, (string) llGetPos() );\r\n    }\r\n}    \r\nt9gBoh7ZsC','ãã‚‰ã’è§£æž',NULL,'integer debug = FALSE;\r\n//Holds the position of owner.\r\nvector owner_position;\r\n//Holds the position of pet.\r\nvector my_position;\r\n//Holds the key of owner.\r\nkey owner_query;\r\n//Holds the mass of pet.\r\nfloat my_mass;\r\n//Holds the speed of move(less is faster).\r\nfloat speed = 3;\r\n//Holds the speed of timer event(per second).\r\nfloat sensor_repeat = 0.5;\r\nfloat sensor_repeat_wait = 10;\r\n//Holds the distance to close(less is closer).\r\nfloat distance_toClose = 1.5;\r\n//Holds the offset of z.\r\nfloat offset_z = 0.7;\r\n\r\n\r\n//ã‚ªãƒ¼ãƒŠãƒ¼è¦‹ã‚‹ãœ\r\nlookat_owner()\r\n{\r\n    // è‡ªåˆ†ã®ä½ç½®ã‚’get\r\n    my_position = llGetPos();\r\n    // è‡ªåˆ†ã®è§’åº¦ã‚’å¾—ã‚‹\r\n    rotation my_rot = llGetRot();\r\n    vector look_at = owner_position;\r\n    //è‡ªåˆ†ã®ã»ã†ã‚’è¦‹ã‚‹ãŸã‚ã® z pos ã‚’å¾—ã‚‹ã€‚\r\n    look_at.z = my_position.z;\r\n    llLookAt(look_at,my_mass/2,my_mass/20);\r\n}\r\n\r\n//ã€€Ownerã«è¿‘ã¥ããœ\r\nclose_to_owner()\r\n{\r\n    // è‡ªåˆ†ã®ãƒã‚¸ã‚·ãƒ§ãƒ³ã‚’å¾—ã‚‹ã‚ˆ\r\n    my_position = llGetPos();\r\n    \r\n    \r\n    //æ–°ã—ã„ä½ç½®ã‚’ç®—å‡ºã—ã¾ã™ã€‚\r\n    vector new_positon;\r\n    new_positon.x = my_position.x+(owner_position.x-my_position.x)/speed;\r\n    new_positon.y = my_position.y+(owner_position.y-my_position.y)/speed;\r\n    new_positon.z = my_position.z+(owner_position.z+offset_z-my_position.z)/speed;\r\n    \r\n    // è·é›¢ã‚’å¾—ã¾ã™\r\n    float distance = llVecDist(my_position,owner_position);\r\n    if(debug == TRUE)\r\n    {\r\n        llOwnerSay(\"new_positon:\" + (string)new_positon);\r\n        llOwnerSay(\"distance:\" + (string)distance);\r\n    }\r\n\r\n    //ã‚ªãƒ¼ãƒŠãƒ¼ã«æŽ¥è¿‘ã—ã¾ã™ã€‚\r\n    if(distance > distance_toClose)\r\n    {\r\n        llSetPos(new_positon);\r\n    }\r\n    else\r\n    {\r\n    }\r\n    \r\n    \r\n    //ç§»å‹•ã—ãŸã‚‰ã€ã‚ªãƒ¼ãƒŠãƒ¼ã®ã»ã†ã‚’è¦‹ã‚‹ã‚ˆ\r\n    rotation my_rot = llGetRot();\r\n    vector look_at = owner_position;\r\n    //fix the z pos to me.\r\n    look_at.z = my_position.z;\r\n    llLookAt(look_at,my_mass/2,my_mass/10);\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        // pet ã®è³ªé‡ã‚’å–å¾—ã—ã¾ã™\r\n        my_mass = llGetMass();\r\n        // owner ã®ãƒ‡ãƒ¼ã‚¿ã‚’å–å¾—ã—ã¾ã™ã€‚\r\n        owner_query = llRequestAgentData(llGetOwner(),DATA_ONLINE);\r\n        \r\n    }\r\n    dataserver(key query_id, string data)\r\n    {\r\n        // ownerã®éš›ã®å‡¦ç†\r\n        if(query_id == owner_query)\r\n        {\r\n            //ONLINE\r\n            if(data == \"1\")\r\n            {\r\n                if(debug == TRUE)\r\n                {\r\n                    llOwnerSay(\"My Owner is ONLINE.\");\r\n                }\r\n                //***if Owner is online, go to active state***\r\n                state active;\r\n            }\r\n            //OFFLINE\r\n            else\r\n            {\r\n                if(debug == TRUE)\r\n                {\r\n                    llOwnerSay(\"My Owner is now OFFLINE.\");\r\n                }\r\n                //***if Owner is offline, go to wait state***\r\n                state wait;\r\n            }\r\n        }\r\n    }\r\n    on_rez(integer param)\r\n    {\r\n        llResetScript();\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n    }\r\n}\r\n    \r\nstate active {\r\n    \r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\",\"\",AGENT | ACTIVE,20,PI * 2,sensor_repeat);\r\n    }\r\n    \r\n    \r\n    sensor(integer num_detected)\r\n    {\r\n        //Search Owner.\r\n        if(debug == TRUE)\r\n        {\r\n            llOwnerSay(\"Searching Owner...\");\r\n        }\r\n        integer found_owner = FALSE;\r\n        integer x = 0;\r\n        for(x;x<num_detected;x = x + 1)\r\n        {\r\n            //Agent?\r\n            if(llDetectedType(x) & AGENT)\r\n            {\r\n                //Owner?\r\n                if(llDetectedKey(x) == llGetOwner())\r\n                {\r\n                    found_owner = TRUE;\r\n                    owner_position = llDetectedPos(x);\r\n                }\r\n            }\r\n        }\r\n        //Owner founded.\r\n        if(found_owner = TRUE)\r\n        {\r\n            if(debug == TRUE)\r\n            {\r\n                llOwnerSay(\"I found owner! : \" + (string)owner_position);\r\n                llOwnerSay(\"My Position is : \" + (string)llGetPos());\r\n            }\r\n            \r\n            //Go Close to Owner.\r\n            close_to_owner();\r\n            \r\n        }\r\n        //Could not find owner.\r\n        else\r\n        {\r\n            if(debug == TRUE)\r\n            {\r\n                llOwnerSay(\"Owner is not here!\");\r\n            }\r\n            //***if Could not find owner, go to wait state***\r\n            state wait;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nstate wait {\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\",\"\",AGENT | ACTIVE,20,PI * 2,sensor_repeat_wait);\r\n    }\r\n\r\n    sensor(integer num_detected)\r\n    {\r\n        //Search Owner.\r\n        if(debug == TRUE)\r\n        {\r\n            llOwnerSay(\"Searching Owner...\");\r\n        }\r\n        integer found_owner = FALSE;\r\n        integer x = 0;\r\n        for(x;x<num_detected;x = x + 1)\r\n        {\r\n            //Agent?\r\n            if(llDetectedType(x) & AGENT)\r\n            {\r\n                //Owner?\r\n                if(llDetectedKey(x) == llGetOwner())\r\n                {\r\n                    found_owner = TRUE;\r\n                    owner_position = llDetectedPos(x);\r\n                }\r\n            }\r\n        }\r\n        //Owner founded.\r\n        if(found_owner = TRUE)\r\n        {\r\n            if(debug == TRUE)\r\n            {\r\n                llOwnerSay(\"I found owner! : \" + (string)owner_position);\r\n                llOwnerSay(\"My Position is : \" + (string)llGetPos());\r\n            }\r\n            \r\n            //***if Owner founded, go to active state***\r\n            state active;\r\n            \r\n        }\r\n        //Could not find owner.\r\n        else\r\n        {\r\n            if(debug == TRUE)\r\n            {\r\n                llOwnerSay(\"Owner is not here!\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n','2007-07-13 11:09:27','2007-07-13 02:09:27'),(37,'9FoV9HF6rF','å¤–éƒ¨ã¸æŽ¥ç¶šã—ã¦ç¢ºèªã™ã‚‹',NULL,'string URL        = \"http://secondbuzz.yamanaka.t2.mfac.jp/nomuracube/visited?\";\r\nstring NOMURA_KEY = \"lfXJ9vfd7ulIhHXKhgllmuSy8gVqfZdT\";\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\", NULL_KEY, AGENT, 10, PI, 10);\r\n    }    \r\n    \r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            \r\n            string query = \"nomura_key=\" + NOMURA_KEY + \"&avator_key=\" + llEscapeURL( (string) llDetectedKey(i) );\r\n            llHTTPRequest( URL + query , [HTTP_METHOD, \"POST\"], \"\");\r\n        }\r\n    }\r\n    \r\n    http_response(key request_id, integer status, list metadata, string body)\r\n    {\r\n        //--- first visit-- //\r\n        list avator_key_fg = llParseString2List(body,[\",\"],[]);\r\n        if( (integer) llList2String(  avator_key_fg, 1 ) == 0 ) \r\n        {\r\n            llInstantMessage( llList2Key( avator_key_fg , 0 ) ,\"Hello\" );\r\n        }\r\n        else {\r\n        }\r\n    }\r\n}    \r\n                                                                                                                                                                                                                                                                                                          ','2007-07-13 16:19:39','2007-07-13 07:19:39'),(38,'sGuPbbHOcX','mail å¤§ç«¹',NULL,'ã€ŒNOMURA CUBEã€ã¸ãŠè¶Šã—é ‚ãã€ã‚ã‚ŠãŒã¨ã†ã”ã–ã„ã¾ã™ã€‚\r\n\r\nã€ŒNOMURA CUBEã€ã¯ã€é‡Žæ‘è­‰åˆ¸ã®æƒ…å ±ç™ºä¿¡åž‹æ‹ ç‚¹ã§ã™ã€‚\r\nã©ã†ãžã”ã‚†ã£ãã‚Šã”è¦§ä¸‹ã•ã„ã€‚\r\n\r\nDisclaimer ï¼ˆæµ·å¤–å±…ä½è€…ã®æ–¹ã¸ï¼‰\r\nhttp://www.nomura.co.jp/disclaimer.html?banner_id=n2007062506\r\n\r\n\r\n\r\n\r\n','2007-07-13 18:56:35','2007-07-13 09:56:35'),(39,'16MFdWROhC','é‡Žæ‘ã«ã¤ã„ã¦ã®ç´°ã',NULL,'é’æœ¨ã•ã‚“ã€€å±±ä¸­ã•ã‚“\r\n\r\nãŠç–²ã‚Œæ§˜ã§ã™ã€‚\r\nå¤§ç«¹ã§ã™ã€‚\r\n\r\næŽ²é¡Œã®ä»¶ã«ã¤ãã¾ã—ã¦\r\nä¸‹è¨˜ã®å†…å®¹ã«ã¦é€£çµ¡ãŒã‚ã‚Šã¾ã—ãŸã®ã§\r\nå¯¾å¿œã‚’ãŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚\r\n\r\nâ– Tã‚·ãƒ£ãƒ„ãƒ‡ã‚¶ã‚¤ãƒ³\r\næ·»ä»˜ã®ï¼”ãƒ‘ã‚¿ãƒ¼ãƒ³ã®ä¸­ã‹ã‚‰ã€ŒDã‚¿ã‚¤ãƒ—ï¼ˆç«‹ä½“ç‰ˆï¼‰ã€ã«é¸å®šã—ã¾ã—ã¦\r\nèƒ¸ã«èµ¤ã¨ã‚°ãƒ¬ãƒ¼ã®ãƒœãƒ¼ãƒ€ãƒ¼ãƒ©ã‚¤ãƒ³ãŒå…¥ã£ã¦ã„ã‚‹ã®ã‚’ã€ã¯ãšã—ãŸå½¢ã«\r\nä¿®æ­£ã‚’ã™ã‚‹å½¢ã§å®Œæˆã—ãŸãã”å¯¾å¿œãã ã•ã„ã€‚\r\n\r\nâ– ï¼‘Få¥¥ãƒ‘ãƒãƒ«ï¼ˆäº‹å‰å…±æœ‰ã®ã¿ã§å¯¾å¿œã¯å¾…ã¡ã€‚ï¼‰\r\nãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã®çŠ¶æ…‹ã®ãƒ‘ãƒãƒ«ã«ã¤ã„ã¦æ—¢ã«è¨­ç½®é ‚ã„ã¦ãŠã‚Šã¾ã™ãŒ\r\nã‚ªãƒªã‚¸ãƒŠãƒ«ã®ã‚¯ãƒªã‚¨ã‚¤ãƒ†ã‚£ãƒ–ãŒç”¨æ„ã§ãã‚‹å¯èƒ½æ€§ãŒ\r\nå‡ºã¦ãã¦ãŠã‚Šã¾ã—ã¦ã€aiãƒ‡ãƒ¼ã‚¿ã§æä¾›ã•ã‚Œã‚‹å ´åˆãŒã‚ã‚Šã¾ã™ãŸã‚\r\nãã®éš›ã«ã¯å·®ã—æ›¿ãˆã‚’å¯¾å¿œã—ã¦é ‚ããŸãäº‹å‰ã«æƒ…å ±å…±æœ‰ã¨ã•ã›ã¦é ‚ãã¾ã™ã€‚\r\n\r\nâ– ãƒšãƒƒãƒˆã‚µãƒ³ãƒ—ãƒ«\r\nTarouæ°ã«ã„ãã¤ã‹æ¸¡ã—ã¦ãŠãã¾ã—ãŸã®ã§ã”ç¢ºèªãã ã•ã„ã€‚\r\nä¸­ã§ã‚‚ãŠã™ã™ã‚ãªã®ãŒã€ã‚¢ãƒ’ãƒ«ã®ãƒšãƒƒãƒˆã§ã—ã¦ã€ç‰©ç†ã¨ãƒ•ã‚¡ãƒ³ãƒˆãƒ ã‚’ä¸¡æ–¹æœ‰åŠ¹ã«\r\nã™ã‚‹ã“ã¨ã§å®‰å®šã—ãŸèµ°è¡Œã‚’å®Ÿç¾ã—ã¦ãŠã‚Šã¾ã™ã€‚\r\n\r\nã¾ãŸã€ãƒ•ã‚©ãƒ­ï¼ã‚¤ãƒ³ã‚°ã®ã‚¹ã‚¯ãƒªãƒ—ãƒˆãŒå£²ã£ã¦ã„ãŸã®ã§\r\nã“ã‚Œã‚‚ãŠé€ã‚Šã—ã¦ãŠãã¾ã—ãŸã€‚ã”å‚è€ƒã«ãªã‚Œã°ã¨æ€ã„ã¾ã™ã€‚\r\n\r\nï¼œæƒ…å ±å…±æœ‰ï¼ž\r\n\r\nï¼‘ï¼“æ—¥ã®ï¼‘ï¼—ï¼šï¼ï¼å‰å¾Œã§é‡Žæ‘ã®æ–¹ãŒã€ŒHanako Roffoã€ã§ãƒ­ã‚°ã‚¤ãƒ³äºˆå®šã§ã™ã€‚\r\nåŸºæœ¬çš„ã«ã¯ã€ä½œæ¥­ã®é‚ªé­”ã‚’ã—ãªã„ã‚ˆã†ã«ä¼ãˆã¦ã‚ã‚Šã¾ã™ãŒ\r\nè©±ã—ã‹ã‘ã‚‰ã‚ŒãŸã‚‰æŒ¨æ‹¶ç¨‹åº¦ã®å¯¾å¿œã‚’ã—ã¦é ‚ã‘ã‚Œã°ã¨æ€ã„ã¾ã™ã€‚\r\n\r\nã¾ãŸ\r\nãã®å ´ã§ãªã«ã‹ã‚„ã£ã¦ãã‚Œã¨ã„ã†è©±ã‚’ã•ã‚ŒãŸã‚‰\r\nã€Œå¤§ç«¹ã®æ–¹ã§ä¸€æ‹¬ç®¡ç†ã—ã¦ã„ã‚‹ã®ã§ã€å¤§ç«¹ã«è¦æœ›ã¯ä¼ãˆã¾ã™ã®ã§æŒã¡å¸°ã‚Šç¢ºèªã¨\r\nã•ã›ã¦é ‚ãã¾ã™ã€‚ã€ã¨ã„ã£ãŸã”å¯¾å¿œã§ä¸é‡ã«é€ƒã’ã¦ãã ã•ã„ã€‚\r\n\r\nä»¥ä¸Š\r\nã‚ˆã‚ã—ããŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚\r\n\r\n\r\næ ªå¼ä¼šç¤¾ãƒ¢ãƒã‚¤ãƒ«ãƒ•ã‚¡ã‚¯ãƒˆãƒªãƒ¼\r\nãƒ¡ãƒ‡ã‚£ã‚¢ã‚°ãƒ«ãƒ¼ãƒ—\r\nå¤§ç«¹ã€€å…ƒæ¨¹\r\n\r\nURL :http://www.mobilefactory.jp/index.html\r\nmail:otake@mfac.jp\r\nTEL :03-5740-6155\r\nFAX :03-5740-6156\r\n','2007-07-13 18:57:09','2007-07-13 09:57:09'),(40,'hHQ8WWwCfv','é‡Žæ‘ï¼‘',NULL,'é’æœ¨ã•ã‚“ã€€å±±ä¸­ã•ã‚“\r\n\r\nãŠç–²ã‚Œæ§˜ã§ã™ã€‚\r\nå¤§ç«¹ã§ã™ã€‚\r\n\r\næŽ²é¡Œã®ä»¶ã«ã¤ãã¾ã—ã¦\r\nä¸‹è¨˜ã®ã¨ãŠã‚Šã§ã”æ¡ˆå†…ã„ãŸã—ã¾ã™ã€‚\r\n\r\nâ– Disclaimer\r\næ·»ä»˜è³‡æ–™ã®æ–‡è¨€ã§note cardã‚’é‡Žæ‘æ•·åœ°å†…ã«å…¥ã£ãŸã‚‰POPUPã™ã‚‹å½¢ã§\r\nè¨­ç½®ã‚’ãŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚ãªãŠã€ä¸€åº¦é–‹ã„ãŸæ–¹ã«ï¼’å›žç›®ä»¥é™æ¥è¨ªæ™‚ã«ã¯\r\nå‡ºã•ãªã„ä»•æ§˜ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n\r\nâ– ï¼‘Få—ä»˜å¬¢ã‚³ãƒ¡ãƒ³ãƒˆ\r\nã€Œã„ã‚‰ã£ã—ã‚ƒã„ã¾ã›ã€‚NOMURA CUBE ã¸ã‚ˆã†ã“ãã€‚ã€\r\n\r\nâ– ï¼’Få—ä»˜å¬¢ã‚³ãƒ¡ãƒ³ãƒˆ\r\nã€Œã„ã‚‰ã£ã—ã‚ƒã„ã¾ã›ã€‚ï¼’éšŽã®ãƒãƒ¼ãƒãƒ£ãƒ«ã‚»ãƒŸãƒŠãƒ¼ãƒ«ãƒ¼ãƒ ã¯åªä»Šæº–å‚™ä¸­ã§ã™ã€‚\r\n2007å¹´8æœˆæœ«é ƒã®ã‚ªãƒ¼ãƒ—ãƒ³äºˆå®šã§ã™ã€‚ã€\r\n\r\nâ– ï¼‘Få¥¥ãƒ‘ãƒãƒ«ã‚¯ãƒªã‚¨ã‚¤ãƒ†ã‚£ãƒ–\r\næ–‡è¨€ã¯æ¨ªæ›¸ãã€‚\r\nè¡¨ç¤ºã•ã‚Œã‚‹é¢ã¯ï¼•åˆ†ã§ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã«æˆ»ã‚‹ä»•æ§˜ã€‚\r\n\r\nã€€ãƒ»ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šãƒ‘ãƒãƒ«ã‚’ã‚¯ãƒªãƒƒã‚¯ã—ã¦ãƒ¡ãƒ‹ãƒ¥ãƒ¼ã‚’ã”åˆ©ç”¨ãã ã•ã„ã€‚\r\nã€€ã€€ã€€ç”»åƒï¼šå°åž‹ã®æ“ä½œç›¤ã®ç”»åƒã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»QRã‚³ãƒ¼ãƒ‰é¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šã€Œãã‚Œã€é‡Žæ‘ã«èžã„ã¦ã¿ã‚ˆã†ã€ç€ãƒ¡ãƒ­ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰ã¯ã“ã¡ã‚‰\r\nã€€ã€€ã€€ç”»åƒï¼šQRã‚³ãƒ¼ãƒ‰ã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»ãƒšãƒƒãƒˆé…å¸ƒé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šCUBEçŠ¬ã‚¯ãƒªãƒƒã‚¯ã§ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\nã€€ã€€ã€€ç”»åƒï¼šCUBEçŠ¬ç”»åƒã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»Tã‚·ãƒ£ãƒ„é…å¸ƒé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šCUBETã‚·ãƒ£ãƒ„ã‚¯ãƒªãƒƒã‚¯ã§ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\nã€€ã€€ã€€ç”»åƒï¼šCUBETã‚·ãƒ£ãƒ„ç”»åƒã‚’æŽ²è¼‰ï¼ˆãƒãƒ¼ã‚¸ãƒ§ãƒ³ã¯ç¢ºèªä¸­ï¼‰\r\n\r\nâ– æ“ä½œç›¤ã‚¯ãƒªã‚¨ã‚¤ãƒ†ã‚£ãƒ–\r\nï¼“ã¤ã®é¢ã‚’é¸ã¶ãŸã‚ã®ã‚µãƒ ãƒã‚¤ãƒ«ãƒœã‚¿ãƒ³ã‚’é…ç½®ã€‚\r\nè¡¨ç¤ºã•ã‚Œã‚‹é¢ã¯ï¼•åˆ†ã§ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã«æˆ»ã‚‹ä»•æ§˜ã€‚\r\n\r\nã€€ãƒ»ç€ãƒ¡ãƒ­\r\nã€€ã€€ã€€æ–‡è¨€ï¼šç€ãƒ¡ãƒ­ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰\r\n\r\nã€€ãƒ»ãƒšãƒƒãƒˆ\r\nã€€ã€€ã€€æ–‡è¨€ï¼šãƒšãƒƒãƒˆãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\n\r\nã€€ãƒ»Tã‚·ãƒ£ãƒ„\r\nã€€ã€€ã€€æ–‡è¨€ï¼šTã‚·ãƒ£ãƒ„ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\n\r\nâ– TVCMå‹•ç”»\r\nã€Œå´–ã®ä¸Šã€ç¯‡â‡’ã€Œå¤§é‚¸å®…ã€ç¯‡ã®é †ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n\r\nâ– ã‚¹ã‚¯ãƒªãƒ¼ãƒ³ã«ã¤ã„ã¦\r\nã‚¹ã‚¯ãƒªãƒ¼ãƒ³è„‡ã«ã‚¹ãƒ”ãƒ¼ã‚«ãƒ¼è¨­ç½®ã‚’ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\nãƒ‡ã‚¶ã‚¤ãƒ³ã¯æ®ãˆç½®ãåž‹ã§ã‚¹ãƒªãƒ ãªã‚¿ã‚¤ãƒ—ï¼ˆã‚„ã‚„é«˜ç´šæ„Ÿï¼‰ã®ã‚‚ã®ã€‚\r\n\r\nå–ã‚Šæ€¥ãŽã“ã“ã¾ã§ãŠé€ã‚Šã—ã¾ã™ã€‚\r\nã®ã¡ã»ã©å¾ŒåŠã‚’é€ã‚Šã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\næ ªå¼ä¼šç¤¾ãƒ¢ãƒã‚¤ãƒ«ãƒ•ã‚¡ã‚¯ãƒˆãƒªãƒ¼\r\nãƒ¡ãƒ‡ã‚£ã‚¢ã‚°ãƒ«ãƒ¼ãƒ—\r\nå¤§ç«¹ã€€å…ƒæ¨¹\r\n\r\nURL :http://www.mobilefactory.jp/index.html\r\nmail:otake@mfac.jp\r\nTEL :03-5740-6155\r\nFAX :03-5740-6156\r\n','2007-07-13 18:57:31','2007-07-13 09:57:31'),(41,'WUg2iZ7sTm','é‡Žæ‘ï¼’',NULL,'é’æœ¨ã•ã‚“ã€€å±±ä¸­ã•ã‚“\r\n\r\nãŠç–²ã‚Œæ§˜ã§ã™ã€‚\r\nå¤§ç«¹ã§ã™ã€‚\r\n\r\næŽ²é¡Œã®ä»¶ã«ã¤ãã¾ã—ã¦\r\nè¿½åŠ ã‚’å«ã‚ã¦ä¸‹è¨˜ã®ã¨ãŠã‚Šã§ã”æ¡ˆå†…ã„ãŸã—ã¾ã™ã€‚\r\n\r\nâ– Disclaimer\r\næ·»ä»˜è³‡æ–™ã®æ–‡è¨€ã§note cardã‚’é‡Žæ‘æ•·åœ°å†…ã«å…¥ã£ãŸã‚‰POPUPã™ã‚‹å½¢ã§\r\nè¨­ç½®ã‚’ãŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚ãªãŠã€ä¸€åº¦é–‹ã„ãŸæ–¹ã«ï¼’å›žç›®ä»¥é™æ¥è¨ªæ™‚ã«ã¯\r\nå‡ºã•ãªã„ä»•æ§˜ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n\r\nâ– ï¼‘Få—ä»˜å¬¢ã‚³ãƒ¡ãƒ³ãƒˆ\r\nã€Œã„ã‚‰ã£ã—ã‚ƒã„ã¾ã›ã€‚NOMURA CUBE ã¸ã‚ˆã†ã“ãã€‚ã€\r\n\r\nâ– ï¼’Få—ä»˜å¬¢ã‚³ãƒ¡ãƒ³ãƒˆ\r\nã€Œã„ã‚‰ã£ã—ã‚ƒã„ã¾ã›ã€‚ï¼’éšŽã®ãƒãƒ¼ãƒãƒ£ãƒ«ã‚»ãƒŸãƒŠãƒ¼ãƒ«ãƒ¼ãƒ ã¯åªä»Šæº–å‚™ä¸­ã§ã™ã€‚\r\n2007å¹´8æœˆæœ«é ƒã®ã‚ªãƒ¼ãƒ—ãƒ³äºˆå®šã§ã™ã€‚ã€\r\n\r\nâ– ï¼‘Få¥¥ãƒ‘ãƒãƒ«ã‚¯ãƒªã‚¨ã‚¤ãƒ†ã‚£ãƒ–\r\næ–‡è¨€ã¯æ¨ªæ›¸ãã€‚\r\nè¡¨ç¤ºã•ã‚Œã‚‹é¢ã¯ï¼•åˆ†ã§ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã«æˆ»ã‚‹ä»•æ§˜ã€‚\r\n\r\nã€€ãƒ»ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šãƒ‘ãƒãƒ«ã‚’ã‚¯ãƒªãƒƒã‚¯ã—ã¦ãƒ¡ãƒ‹ãƒ¥ãƒ¼ã‚’ã”åˆ©ç”¨ãã ã•ã„ã€‚\r\nã€€ã€€ã€€ç”»åƒï¼šå°åž‹ã®æ“ä½œç›¤ã®ç”»åƒã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»QRã‚³ãƒ¼ãƒ‰é¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šã€Œãã‚Œã€é‡Žæ‘ã«èžã„ã¦ã¿ã‚ˆã†ã€ç€ãƒ¡ãƒ­ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰ã¯ã“ã¡ã‚‰\r\nã€€ã€€ã€€ç”»åƒï¼šQRã‚³ãƒ¼ãƒ‰ã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»ãƒšãƒƒãƒˆé…å¸ƒé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šCUBEçŠ¬ã‚¯ãƒªãƒƒã‚¯ã§ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\nã€€ã€€ã€€ç”»åƒï¼šCUBEçŠ¬ç”»åƒã‚’æŽ²è¼‰\r\n\r\nã€€ãƒ»Tã‚·ãƒ£ãƒ„é…å¸ƒé¢\r\nã€€ã€€ã€€æ–‡è¨€ï¼šCUBETã‚·ãƒ£ãƒ„ã‚¯ãƒªãƒƒã‚¯ã§ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\nã€€ã€€ã€€ç”»åƒï¼šCUBETã‚·ãƒ£ãƒ„ç”»åƒã‚’æŽ²è¼‰ï¼ˆãƒãƒ¼ã‚¸ãƒ§ãƒ³ã¯ç¢ºèªä¸­ï¼‰\r\n\r\nâ– æ“ä½œç›¤ã‚¯ãƒªã‚¨ã‚¤ãƒ†ã‚£ãƒ–\r\nï¼“ã¤ã®é¢ã‚’é¸ã¶ãŸã‚ã®ã‚µãƒ ãƒã‚¤ãƒ«ãƒœã‚¿ãƒ³ã‚’é…ç½®ã€‚\r\nè¡¨ç¤ºã•ã‚Œã‚‹é¢ã¯ï¼•åˆ†ã§ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã«æˆ»ã‚‹ä»•æ§˜ã€‚\r\n\r\nã€€ãƒ»ç€ãƒ¡ãƒ­\r\nã€€ã€€ã€€æ–‡è¨€ï¼šç€ãƒ¡ãƒ­ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰\r\n\r\nã€€ãƒ»ãƒšãƒƒãƒˆ\r\nã€€ã€€ã€€æ–‡è¨€ï¼šãƒšãƒƒãƒˆãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\n\r\nã€€ãƒ»Tã‚·ãƒ£ãƒ„\r\nã€€ã€€ã€€æ–‡è¨€ï¼šTã‚·ãƒ£ãƒ„ãƒ—ãƒ¬ã‚¼ãƒ³ãƒˆ\r\n\r\nâ– TVCMå‹•ç”»\r\nã€Œå´–ã®ä¸Šã€ç¯‡â‡’ã€Œå¤§é‚¸å®…ã€ç¯‡ã®é †ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n\r\nâ– ï¼‘Fã‚¹ã‚¯ãƒªãƒ¼ãƒ³ã«ã¤ã„ã¦\r\nã‚¹ã‚¯ãƒªãƒ¼ãƒ³è„‡ã«ã‚¹ãƒ”ãƒ¼ã‚«ãƒ¼è¨­ç½®ã‚’ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\nãƒ‡ã‚¶ã‚¤ãƒ³ã¯æ®ãˆç½®ãåž‹ã§ã‚¹ãƒªãƒ ãªã‚¿ã‚¤ãƒ—ï¼ˆã‚„ã‚„é«˜ç´šæ„Ÿï¼‰ã®ã‚‚ã®ã€‚\r\n\r\nâ– ï¼’Fã‚¹ã‚¯ãƒªãƒ¼ãƒ³ã«ã¤ã„ã¦\r\nã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆã‚³ãƒ³ãƒ†ãƒ³ãƒ„ãŒã¾ã ã“ãªã„ã®ã§ä¸‹è¨˜æ–‡è¨€ã‚’ã‚¹ã‚¯ãƒªãƒ¼ãƒ³ã«\r\nè¨˜è¼‰ã—ã¦ãã ã•ã„ã€‚ã¾ãŸã€ã‚»ãƒŸãƒŠãƒ¼ãƒ«ãƒ¼ãƒ ãƒ‰ã‚¢ã‚’ã‚¯ãƒªãƒƒã‚¯ã§\r\nå®¤å†…ã«ãƒ¯ãƒ¼ãƒ—ã™ã‚‹ä»•æ§˜ã¯ä¸€æ—¦ç„¡ã—ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n\r\næ–‡è¨€ï¼šãƒãƒ¼ãƒãƒ£ãƒ«ã‚»ãƒŸãƒŠãƒ¼ãƒ«ãƒ¼ãƒ ã¯åªä»Šæº–å‚™ä¸­ã§ã™ã€‚\r\n2007å¹´8æœˆæœ«é ƒã®ã‚ªãƒ¼ãƒ—ãƒ³äºˆå®šã§ã™ã€‚\r\n\r\nâ– ã‚«ã‚¦ãƒ³ã‚¿ãƒ¼ãƒ‡ã‚¶ã‚¤ãƒ³\r\nå½¢çŠ¶ï¼šç¾åœ¨ã€å°å½¢ã«ãªã£ã¦ã„ã‚‹ã‚‚ã®ã‚’ç›´æ–¹ä½“ã«ã—ã¦ãã ã•ã„ã€‚\r\nè‰²ã€€ï¼šèµ¤ã¿ã‚’æŠ‘ãˆã¦ã€é»’ã¿ã‚’è¶³ã—ã¦ãã ã•ã„ã€‚\r\n\r\nâ– çŠ¬\r\nãƒ»åå‰ä»˜ã‘ã‚‰ã‚Œã‚‹ã‚ˆã†ã«ã—ã¦ãã ã•ã„ã€‚\r\nãƒ»ãƒ‡ã‚¶ã‚¤ãƒ³ã‚¤ãƒ¡ãƒ¼ã‚¸ã¯ãƒžãƒ¡ã‚·ãƒã€‚\r\n\r\nä»¥ä¸Š\r\nã‚ˆã‚ã—ããŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\næ ªå¼ä¼šç¤¾ãƒ¢ãƒã‚¤ãƒ«ãƒ•ã‚¡ã‚¯ãƒˆãƒªãƒ¼\r\nãƒ¡ãƒ‡ã‚£ã‚¢ã‚°ãƒ«ãƒ¼ãƒ—\r\nå¤§ç«¹ã€€å…ƒæ¨¹\r\n\r\nURL :http://www.mobilefactory.jp/index.html\r\nmail:otake@mfac.jp\r\nTEL :03-5740-6155\r\nFAX :03-5740-6156\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-07-13 18:58:10','2007-07-13 09:58:10'),(42,'jaWUyRB4O1','NomuraSensor',NULL,'string URL        = \"http://secondbuzz.yamanaka.t2.mfac.jp/client/nomura_cube/visited?\";\r\nstring NOMURA_KEY = \"lfXJ9vfd7ulIhHXKhgllmuSy8gVqfZdT\";\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\", NULL_KEY, AGENT, 10, PI, 2);\r\n    }    \r\n    \r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            \r\n            string query = \"nomura_key=\" + NOMURA_KEY + \"&avator_key=\" + llEscapeURL( (string) llDetectedKey(i) );\r\n            llHTTPRequest( URL + query , [HTTP_METHOD, \"POST\"], \"\");\r\n        }\r\n    }\r\n    \r\n    http_response(key request_id, integer status, list metadata, string body)\r\n    {\r\n        //llSay(0,body);\r\n        //--- first visit-- //\r\n        list avator_key_fg = llParseString2List(body,[\",\"],[]);\r\n        if( (integer) llList2String(  avator_key_fg, 1 ) == 0 ) \r\n        {\r\n            llInstantMessage( llList2Key( avator_key_fg , 0 ) ,\"Hello\" );\r\n            llGiveInventory(llGetOwner(),llGetInventoryName(INVENTORY_NOTECARD, 0));\r\n        }\r\n        else {\r\n        }\r\n    }\r\n}    \r\n          ','2007-07-14 20:24:30','2007-07-14 11:24:30'),(43,'PJTybJhb7i','ãƒ•ãƒ©ã‚¤ãƒ³ã‚°Petã®è§£æž',NULL,'// ï¼•Kï½‡ã®ã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\nfloat heartbeat = 0.5; \r\n// è¡æ’ƒã®è¨­å®š\r\nfloat rot_str = 2;\r\nfloat rot_dmp = 0.5;\r\n\r\n//æ‘©æ“¦\r\nfloat friction = 0.6; \r\n\r\n// zè»¸æ–¹é¢ã¸ã®åŠ›\r\nfloat z_force = 0.2; //check this one\r\n\r\n// ãƒãƒ£ãƒ³ãƒãƒ«\r\ninteger company_channel;\r\n\r\n\r\n//--- ã‚¹ãƒ”ãƒ¼ãƒ‰ ---//\r\nfloat speed;\r\n//--- ç¯„å›² ---//\r\nfloat range;\r\n\r\n//---ã€€ç›®æ¨™å ´æ‰€ ---// \r\nvector new_target;\r\n//--- ç›®æ¨™ID ---//\r\ninteger target_id;\r\n\r\n\r\n//--- å‹•ä½œã‚’ã¨ã‚ã‚‹ã‚ˆã†ã®é–¢æ•°\r\nall_stop()\r\n{\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«ç‰©ç†çš„ãªåŠ›åŠã³å›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªåŠ›ã‚’åŠ ãˆã‚‹ \r\n    // llGetVel : ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®é€Ÿåº¦ã‚’å¾—ã‚‹\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªå›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n\r\n\r\n//--- axis: è»¸ ---//\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n\r\n// å›žè»¢ã«æŒ‡å®šã•ã‚ŒãŸä½ç½®ã§æŒ‡å®šã•ã‚ŒãŸè»¸ã‚’æŒ‡ã•ã›ã¾ã™ã€‚\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        //--- ã‚¿ã‚¤ãƒžãƒ¼ã‚¤ãƒ™ãƒ³ãƒˆã‚’ã‚»ãƒƒãƒˆ ---//\r\n        llSetTimerEvent(heartbeat);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®æµ®åŠ›ã‚’è¨­å®šã™ã‚‹\r\n        llSetBuoyancy(1);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ã‚¹ãƒ†ãƒ¼ã‚¿ã‚¹ï¼ˆç‰©ç†ï¼ãƒ•ã‚¡ãƒ³ãƒˆãƒ ç­‰ï¼‰ã‚’è¨­å®šã™ã‚‹\r\n        llSetStatus(STATUS_ROTATE_X,FALSE);\r\n        llSetStatus(STATUS_ROTATE_Y,FALSE);\r\n        //The two lines above stop the object from rotating in anything but the z axis.\r\n        llSetStatus(STATUS_PHANTOM,TRUE);\r\n        //Make the object phantom.\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        // company_channel ã®å ´åˆã®ã¿åå¿œ\r\n        if(num == company_channel)\r\n        {\r\n	    // æ–‡å­—åˆ—ã‚’æŒ‡å®šã—ãŸåŒºåˆ‡ã‚Šæ–‡å­—ã§ãƒªã‚¹ãƒˆã«å¤‰æ›ã™ã‚‹ï¼ˆç©ºç™½ã‚’å«ã‚“ã ãƒªã‚¹ãƒˆã«å¤‰æ›ï¼‰\r\n            list data = llParseStringKeepNulls( str, [\"-=-\"], [] );\r\n            // ãƒªã‚¹ãƒˆã‹ã‚‰æœ€åˆã®ãƒ‡ãƒ¼ã‚¿ã‚’å–å¾—ï¼ˆã“ã®å ´åˆã‚³ãƒžãƒ³ãƒ‰ï¼‰\r\n            string Cmd = llList2String(data,0);\r\n\r\n            if( Cmd == \"MOVETO\" )\r\n            {\r\n                // target ã‚’ã¨ã‚Šã ã™\r\n                new_target = (vector)llList2String(data,1);\r\n		// speed ã‚’å–ã‚Šå‡ºã™\r\n                speed = (float)llList2String(data,2);\r\n		// ç¯„å›²ã‚’å–ã‚Šå‡ºã™\r\n                range = (float)llList2String(data,3);\r\n		// ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®åˆ°é”ç›®æ¨™åœ°ç‚¹ã‚’ã‚­ãƒ£ãƒ³ã‚»ãƒ«ã™ã‚‹\r\n                llTargetRemove(target_id); \r\n		// ç›®æ¨™åˆ°é”åœ°ç‚¹ã‚’å†è¨­å®šã™ã‚‹\r\n                target_id = llTarget(new_target,range);\r\n		// ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«æ°¸ç¶šçš„ãªåŠ›ã‚’åŠ ãˆã‚‹\r\n                llSetForce(<speed,0,0> * llGetMass(),TRUE);\r\n		// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n                //Set up a rotational force towards new_target.\r\n            }\r\n        }\r\n    }\r\n    not_at_target()\r\n    {\r\n	// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n        llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n        vector currentpos = llGetPos();\r\n	// ç¾åœ¨ä½ç½®ãŒç›®æ¨™åœ°ç‚¹ã‚ˆã‚Šã‚‚å¤§ãã„ã°ã‚ã„\r\n        if(currentpos.z > new_target.z)\r\n        {\r\n            //ä¸‹ã’ã‚‹\r\n            llApplyImpulse(<0,0,-z_force> * llGetMass(),FALSE);\r\n        }\r\n        else\r\n        {\r\n            //ä¸Šã’ã‚‹\r\n            llApplyImpulse(<0,0,z_force> * llGetMass(),FALSE);\r\n        }    \r\n    }\r\n\r\n	// ç›®æ¨™ã«åˆ°é”ã—ãŸã‚‰åå¿œ\r\n	at_target(integer tnum, vector target_pos, vector our_location)\r\n	{\r\n	    // åœæ­¢å‡¦ç†\r\n	    all_stop();\r\n	    // ãƒªãƒ³ã‚¯å…ˆã«ç›®çš„åœ°ã«ç€ã„ãŸã“ã¨ã‚’çŸ¥ã‚‰ã›ã‚‹\r\n	    llMessageLinked( LINK_SET, company_channel, \"ATPOS\", \"\" );\r\n	}\r\n\r\n	timer()\r\n	{\r\n	        //Apply some friction \r\n        	llApplyImpulse(-llGetVel() * llGetMass() * friction,FALSE);   \r\n	}\r\n\r\n	on_rez(integer param)\r\n	{\r\n	    llTargetRemove(target_id); \r\n	    all_stop();\r\n	}\r\n}','2007-07-15 03:31:28','2007-07-14 18:31:28'),(44,'D5ot4raEFi','llMessageLinked',NULL,'default\r\n{\r\n    state_entry()\r\n    {\r\n        llSay(0, \"Hello, Avatar!\");\r\n    }\r\n\r\n    touch_start(integer total_number)\r\n    {\r\n        vector now_pos = llGetPos();\r\n        list data = [\"MOVETO\", (string)( now_pos + < 10, 5.0, 0.0> ),(string) 2.0 , (string) 3.0 ];\r\n        llMessageLinked( LINK_ROOT , 0, llDumpList2String( data, \"-=-\" ), NULL_KEY );\r\n    }\r\n}\r\n','2007-07-15 03:53:16','2007-07-14 18:53:16'),(45,'BYaKEmtgOI','pet memo',NULL,'â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nâ– ã€€å¯¾è±¡ã¸Noteã‚’æ¸¡ã™ã‚‚ã®ã‚’ã¤ãã‚‹ã€‚\r\n\r\n\r\nã™ã¹ãã“ã¨ã‚’åˆ—æŒ™ã™ã‚‹ã€‚\r\n\r\n	ãƒ»ã¯ã„ã£ã¦ããŸã‚‰ã€\r\n\r\n\r\ndefault\r\n{\r\n    touch_start(integer total_number)\r\n    {\r\n        llSay(0, \"I have a notecard named \" + llGetInventoryName(INVENTORY_NOTECARD, 0) + \" in my contents.\");\r\n        llGiveInventory(llGetOwner(),llGetInventoryName(INVENTORY_NOTECARD, 0));\r\n    }\r\n}\r\n\r\n\r\nå¯¾è±¡ã®Agentã®KeyãŒã‚ã‹ã‚Œã°ã€ã‚ã¨ã¯ã€InventoryNameã‚’ã‚ãŸã™ã€‚\r\n\r\n        llGiveInventory(llGetOwner(),llGetInventoryName(INVENTORY_NOTECARD, 0));\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nâ– ã€€ãƒšãƒƒãƒˆã®ä½œæˆ\r\n\r\n\r\nã€Œå¿…è¦ãªé …ç›®ã€\r\n\r\n	ãƒ»è¶³ã¨å°»å°¾ã‚’æŒ¯ã‚‹\r\n	ãƒ»è¿½è·¡ã™ã‚‹\r\n		ãƒ»å®‰å®šåŒ–ã•ã›ã‚‹\r\n			ãƒ»å§¿å‹¢åˆ¶å¾¡ã®å•é¡ŒãŒå¤§ãã„ã¨æ€ã†ã€‚\r\n		ãƒ»åº§æ¨™ã‚’å¾—ã‚‹æ–¹æ³•\r\n\r\n\r\n\r\nç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã¯ã€\r\n\r\nllSetForce(<0,0,0> * llGetMass(),TRUE);\r\n\r\nã“ã‚Œã§å‹•ã‹ã™ã¨ã„ã‘ãã†ãªæ„Ÿã˜ãŒã™ã‚‹ã€‚\r\n	ãƒ»\r\n	\r\n\r\nMassãŒè³ªé‡ã¨ãªã‚‹ã€‚\r\n\r\nfloat mass = llGetMass(); // mass of this object\r\nfloat gravity = 9.8; // gravity constant\r\nllSetForce(mass * <0,0,gravity>, FALSE); // in global orientation\r\n\r\n\r\n','2007-07-15 11:51:12','2007-07-15 02:51:12'),(46,'429KxTxAdM','flyingpet è§£æž',NULL,'// ï¼•Kï½‡ã®ã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\nfloat heartbeat = 0.5; \r\n// è¡æ’ƒã®è¨­å®š\r\nfloat rot_str = 2;\r\nfloat rot_dmp = 0.5;\r\n\r\n//æ‘©æ“¦\r\nfloat friction = 0.6; \r\n\r\n// zè»¸æ–¹é¢ã¸ã®åŠ›\r\nfloat z_force = 0.2; //check this one\r\n\r\n// ãƒãƒ£ãƒ³ãƒãƒ«\r\ninteger company_channel;\r\n\r\n\r\n//--- ã‚¹ãƒ”ãƒ¼ãƒ‰ ---//\r\nfloat speed;\r\n//--- ç¯„å›² ---//\r\nfloat range;\r\n\r\n//---ã€€ç›®æ¨™å ´æ‰€ ---// \r\nvector new_target;\r\n//--- ç›®æ¨™ID ---//\r\ninteger target_id;\r\n\r\n\r\n//--- å‹•ä½œã‚’ã¨ã‚ã‚‹ã‚ˆã†ã®é–¢æ•°\r\nall_stop()\r\n{\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«ç‰©ç†çš„ãªåŠ›åŠã³å›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªåŠ›ã‚’åŠ ãˆã‚‹ \r\n    // llGetVel : ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®é€Ÿåº¦ã‚’å¾—ã‚‹\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªå›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n\r\n\r\n//--- axis: è»¸ ---//\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n\r\n// å›žè»¢ã«æŒ‡å®šã•ã‚ŒãŸä½ç½®ã§æŒ‡å®šã•ã‚ŒãŸè»¸ã‚’æŒ‡ã•ã›ã¾ã™ã€‚\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        //--- ã‚¿ã‚¤ãƒžãƒ¼ã‚¤ãƒ™ãƒ³ãƒˆã‚’ã‚»ãƒƒãƒˆ ---//\r\n        llSetTimerEvent(heartbeat);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®æµ®åŠ›ã‚’è¨­å®šã™ã‚‹\r\n        llSetBuoyancy(1);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ã‚¹ãƒ†ãƒ¼ã‚¿ã‚¹ï¼ˆç‰©ç†ï¼ãƒ•ã‚¡ãƒ³ãƒˆãƒ ç­‰ï¼‰ã‚’è¨­å®šã™ã‚‹\r\n        llSetStatus(STATUS_ROTATE_X,FALSE);\r\n        llSetStatus(STATUS_ROTATE_Y,FALSE);\r\n        // ãƒ•ã‚¡ãƒ³ãƒˆãƒ å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHANTOM,TRUE);\r\n        // ç‰©ç†å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        // company_channel ã®å ´åˆã®ã¿åå¿œ\r\n        if(num == company_channel)\r\n        {\r\n	    // æ–‡å­—åˆ—ã‚’æŒ‡å®šã—ãŸåŒºåˆ‡ã‚Šæ–‡å­—ã§ãƒªã‚¹ãƒˆã«å¤‰æ›ã™ã‚‹ï¼ˆç©ºç™½ã‚’å«ã‚“ã ãƒªã‚¹ãƒˆã«å¤‰æ›ï¼‰\r\n            list data = llParseStringKeepNulls( str, [\"-=-\"], [] );\r\n            // ãƒªã‚¹ãƒˆã‹ã‚‰æœ€åˆã®ãƒ‡ãƒ¼ã‚¿ã‚’å–å¾—ï¼ˆã“ã®å ´åˆã‚³ãƒžãƒ³ãƒ‰ï¼‰\r\n            string Cmd = llList2String(data,0);\r\n\r\n            if( Cmd == \"MOVETO\" )\r\n            {\r\n                // target ã‚’ã¨ã‚Šã ã™\r\n                new_target = (vector)llList2String(data,1);\r\n		// speed ã‚’å–ã‚Šå‡ºã™\r\n                speed = (float)llList2String(data,2);\r\n		// ç¯„å›²ã‚’å–ã‚Šå‡ºã™\r\n                range = (float)llList2String(data,3);\r\n		// ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®åˆ°é”ç›®æ¨™åœ°ç‚¹ã‚’ã‚­ãƒ£ãƒ³ã‚»ãƒ«ã™ã‚‹\r\n                llTargetRemove(target_id); \r\n		// ç›®æ¨™åˆ°é”åœ°ç‚¹ã‚’å†è¨­å®šã™ã‚‹\r\n                target_id = llTarget(new_target,range);\r\n		// ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«æ°¸ç¶šçš„ãªåŠ›ã‚’åŠ ãˆã‚‹\r\n                llSetForce(<speed,0,0> * llGetMass(),TRUE);\r\n		// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n                //Set up a rotational force towards new_target.\r\n            }\r\n        }\r\n    }\r\n    not_at_target()\r\n    {\r\n	// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n        llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n        vector currentpos = llGetPos();\r\n	// ç¾åœ¨ä½ç½®ãŒç›®æ¨™åœ°ç‚¹ã‚ˆã‚Šã‚‚å¤§ãã„ã°ã‚ã„\r\n        if(currentpos.z > new_target.z)\r\n        {\r\n            //ä¸‹ã’ã‚‹\r\n            llApplyImpulse(<0,0,-z_force> * llGetMass(),FALSE);\r\n        }\r\n        else\r\n        {\r\n            //ä¸Šã’ã‚‹\r\n            llApplyImpulse(<0,0,z_force> * llGetMass(),FALSE);\r\n        }    \r\n    }\r\n\r\n	// ç›®æ¨™ã«åˆ°é”ã—ãŸã‚‰åå¿œ\r\n	at_target(integer tnum, vector target_pos, vector our_location)\r\n	{\r\n	    // åœæ­¢å‡¦ç†\r\n	    all_stop();\r\n	    // ãƒªãƒ³ã‚¯å…ˆã«ç›®çš„åœ°ã«ç€ã„ãŸã“ã¨ã‚’çŸ¥ã‚‰ã›ã‚‹\r\n	    llMessageLinked( LINK_SET, company_channel, \"ATPOS\", \"\" );\r\n	}\r\n\r\n	timer()\r\n	{\r\n	        //Apply some friction \r\n        	llApplyImpulse(-llGetVel() * llGetMass() * friction,FALSE);   \r\n	}\r\n\r\n	on_rez(integer param)\r\n	{\r\n	    llTargetRemove(target_id); \r\n	    all_stop();\r\n	}\r\n}  \r\n\r\n//================================================================================================//\r\nå‘½ä»¤å½¢\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSay(0, \"Hello, Avatar!\");\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n    }\r\n\r\n    touch_start(integer total_number)\r\n    {\r\n        vector now_pos = llGetPos();\r\n        list data = [\"MOVETO\", (string)( now_pos + < 10, 5.0, 0.0> ),(string) 5.0 , (string) 3.0 ];\r\n        llMessageLinked( LINK_ROOT , 0, llDumpList2String( data, \"-=-\" ), NULL_KEY );\r\n    }\r\n    \r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            // --- find owner ---//\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector now_pos = llGetPos();\r\n                list data = [\"MOVETO\", (string)( llDetectedPos(i) ),(string) 5.0 , (string) 3.0 ];\r\n                llMessageLinked( LINK_ROOT , 0, llDumpList2String( data, \"-=-\" ), NULL_KEY );              \r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n','2007-07-15 11:52:28','2007-07-17 01:24:54'),(47,'8s2wUwel8z','å›žè»¢ä½“ã«ã‹ã‚“ã—ã¦',NULL,'è§’åº¦ã®å›žè»¢ã«é–¢ã—ã¦ã¯ã€ã“ã¡ã‚‰ã§ï¼¯ï¼«ãªã®ã§ã€\r\n\r\n\r\n//----------------------------------------------------------------//\r\nfloat ROT_Z = 45.0;\r\n\r\ndefault\r\n{\r\n\r\n    touch_start(integer total_number)\r\n    {\r\n        rotation rot = llGetRot();\r\n        llSay( 0, (string) rot );\r\n        llSetRot(rot * llEuler2Rot(<0,0,ROT_Z>)); \r\n    }\r\n}\r\n//----------------------------------------------------------------//\r\n\r\nã“ã‚Œã‚’ç‰©ç†å±žæ€§ã®ã°ã‚ã„ã©ã†ãªã‚‹ã®ã‹\r\n\r\nã¶ã£ãŸã„ã‚’ç‰©ç†å±žæ€§ã«ã‹ãˆã¦ã‚„ã£ã¦ã¿ã‚‹ã€‚\r\n\r\nç‰©ç†å±žæ€§ã®å ´åˆã€ã“ã‚Œã§ã¯ã†ã”ã‹ãªã„ã®ã§ä¸€æ™‚çš„ã«ã¶ã¤ã‚Šãžãã›ã„ã‚’ãã‚‹æ–¹æ³•ã‚’ã¨ã‚‹\r\n\r\nä¸€å¿œã“ã‚Œã§ã›ã„ã“ã†ã—ã¦ã„ã‚‹ãŒã€æŒ™å‹•ãŒæ°—æŒã¡æ‚ªã„ã€‚\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,FALSE);\r\n        rotation rot = llGetRot();\r\n        llSay( 0, (string) rot );\r\n        llSetRot(llEuler2Rot(<0,0,45>)); \r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------//\r\n\r\n\r\nä¸‹è¨˜ã‚’ä½¿ç”¨ã™ã‚Œã°\r\n\r\nllSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n\r\nã„ã‘ã‚‹ã¯ãšãªã®ã§ã€ã“ã‚Œã§å›žè»¢ä½“ã‚’åˆ¶å¾¡ã™ã‚‹ãƒ†ã‚¹ãƒˆã‚’ã™ã‚‹ã€‚\r\n\r\nllRotLookAtã§ã—ãŸã€‚\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        float  z_rot   = cur_rot.z;\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------//\r\n\r\n\r\nä¸€å¿œã“ã‚Œã§ã€å›žè»¢ä½“ãŒå®‰å®šã™ã‚‹ã“ã¨ã¯å¾—ã¾ã—ãŸã€‚\r\n\r\nä¸‹è¨˜ã§ã“ã¡ã‚‰ã‚’å‘ãã‚ˆã†ã«ã¯ã§ãã‚‹ã‚ˆã†ã«ãªã£ãŸã€‚\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n        //--- get balance ---//\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        float  z_rot   = cur_rot.z;\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n\r\n        //--- look at owner ---//\r\n        integer i;\r\n        for( i = 0; i <  total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector owner_pos = llDetectedPos(i);\r\n                llLookAt( owner_pos, 1.0, 1.0 );\r\n            }    \r\n        }\r\n    }\r\n}\r\n]\r\n\r\n//----------------------------------------------------------------//\r\n\r\nã“ã‚Œã‚’ã€è‡ªå‹•çš„ã«å‘ãã‚ˆã†ã«ã™ã‚‹ã€‚\r\n\r\n\r\npetã®è§’åº¦ãŒãšã‚Œã¦ã‚‹ã®ã§ã€\r\n\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    touch_start(integer total_number)\r\n    {\r\n        rotation rot = llGetRot();\r\n        llSay( 0, \"X:\" + (string) ( rot.x * 180 / PI ) );\r\n        llSay( 0, \"y:\" + (string) ( rot.y * 180 / PI ) );\r\n        llSay( 0, \"z:\" + (string) ( rot.z * 180 / PI ) );\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------//\r\n\r\n\r\nã“ã‚Œã§ã€y + 40 ãŒã‚ã‹ã£ãŸã€‚\r\n\r\n0.6981317007977318\r\n\r\nãƒ©ã‚¸ã‚¢ãƒ³ã«ç›´ã™ã¨ã“ã†ãªã‚‹ã€‚\r\n\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n        //--- get balance ---//\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        float  z_rot   = cur_rot.z + 0.6981317007977318;\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, z_rot>), 0.5, 0.5);\r\n\r\n        //--- look at owner ---//\r\n        integer i;\r\n        for( i = 0; i <  total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector owner_pos = llDetectedPos(i);\r\n                llLookAt( owner_pos, 1.0, 1.0 );\r\n            }    \r\n        }\r\n    }\r\n}\r\n]\r\n\r\n//----------------------------------------------------------------//\r\n\r\nå‚¾ãç†ç”±ã¯åˆ¤æ˜Žã—ãŸã€‚\r\n\r\nownerã®ä½ç½®ã‚’ã¿ã‚ˆã†ã¨ã—ã¦ã„ã‚‹ã‚‰ã ã€‚\r\n\r\n< owner_pos.x , owner_pos.y, pet_pos.z > \r\n\r\nã“ã‚Œã§ã—ã¦ã„ã™ã‚Œã°å‚¾ãã“ã¨ã¯ãªã„ã€‚\r\n\r\n//----------------------------------------------------------------//\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n    touch_start(integer total_number)\r\n    {\r\n        //--- get balance ---//\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, cur_rot.z >), 0.5, 0.5);\r\n        \r\n        //--- look at owner ---//\r\n        integer i;\r\n        for( i = 0; i <  total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector owner_pos = llDetectedPos(i); \r\n                vector pet_pos   = llGetPos();\r\n                llLookAt( < owner_pos.x , owner_pos.y, pet_pos.z >, 1.0, 1.0 );\r\n            }    \r\n        }\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------//\r\n\r\nã‚»ãƒ³ã‚µãƒ¼ç‰ˆã‚’ä½œæˆã™ã‚‹ã€‚\r\n\r\n\r\nã§ããŸãŒã€æ ¹æœ¬çš„ã«çŠ¬ã®å‘ããŒã¡ãŒã†ã€‚\r\n\r\nç›´ã›ã‚‹ã‚‚ã®ãªã‚‰ã€ã‚ã¨ã§é’æœ¨ã•ã‚“ã«ç›´ã—ã¦ã‚‚ã‚‰ã†ã€‚\r\n\r\nã“ã‚Œã«ã€è¿½è·¡ã‚’ä»•è¾¼ã¿ã¾ã™ã€‚\r\n\r\nç‰©ç†å±žæ€§ãªã®ã§ã€åŸºæœ¬çš„ã«ã¯llMoveToTargetã§ç§»å‹•ã—ã¾ã™ã€‚\r\n\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n    }\r\n    \r\n    sensor(integer total_number)\r\n    {\r\n        //--- get balance ---//\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, cur_rot.z >), 0.5, 0.5);\r\n        \r\n        //--- look at owner ---//\r\n        integer i;\r\n        for( i = 0; i <  total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector owner_pos = llDetectedPos(i);\r\n                vector pet_pos   = llGetPos();\r\n                // z + 90 \r\n                llLookAt( < owner_pos.x , owner_pos.y , pet_pos.z  >, 1.0, 1.0 );\r\n            }    \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//----------------------------------------------------------------//\r\n\r\nå‹•çš„ã«åˆ‡ã‚Šæ›¿ãˆã‚‹æ–¹æ³•ã¯ã€ãªã‚“ã¨ã‹ã†ã¾ãã„ã£ãŸã®ã§ã€ \r\n\r\n//----------------------------------------------------------------//\r\nvector NEW_TARGET;\r\nfloat  _MOVE_SECOND = 1.0;\r\nfloat RANGE  = 0.2;\r\ninteger TARGET_ID;\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n    }\r\n    \r\n    sensor(integer total_number)\r\n    {\r\n        //--- get balance ---//\r\n        vector cur_rot = llRot2Euler(llGetRot());\r\n        llRotLookAt(llEuler2Rot(< 0.0, 0.0, cur_rot.z >), 0.5, 0.5);\r\n        \r\n        //--- look at owner ---//\r\n        integer i;\r\n        for( i = 0; i <  total_number; i++)\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                vector owner_pos  = llDetectedPos(i);\r\n                vector pet_pos    = llGetPos();\r\n                NEW_TARGET = < owner_pos.x - 1 , owner_pos.y , pet_pos.z  > ;\r\n                llLookAt( NEW_TARGET , 1.0, 1.0 );\r\n                TARGET_ID = llTarget(NEW_TARGET,RANGE);\r\n                llMoveToTarget( NEW_TARGET ,  _MOVE_SECOND ); \r\n                \r\n                rotation  owner_rot = llDetectedRot(i);\r\n                rotation  pet_rot   = llGetRot();\r\n                \r\n                if(  owner_rot.z != pet_rot.z ) \r\n                {\r\n                    llSetRot( < pet_rot.x, pet_rot.y, owner_rot.z , pet_rot.s > );\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    at_target(integer tnum, vector target_pos, vector our_location)\r\n    {\r\n        llTargetRemove(TARGET_ID);\r\n    }\r\n}\r\n//----------------------------------------------------------------//\r\n\r\nlinked_message \r\nã§ãƒ—ãƒªãƒ ã‚’ãã‚Šãã‚Šã™ã‚‹æ–¹æ³•ã‚’ã¤ãã‚‹ã€‚\r\n\r\nå›žè»¢ã¯ã€ä¸‹è¨˜ã®ã‚ˆã†ã«ã€Œ* DEG_TO_RADã€ã—ã¦ã‚„ã‚‰ãªã„ã¨ã†ã¾ãã„ã‹ãªã„\r\n\r\n//----------------------------------------------------------------//\r\n\r\ndefault\r\n{\r\n  state_entry()\r\n  {\r\n    llSitTarget(<0.0, -0.3, 0.4>, llEuler2Rot(<0.0, 0.0, 270.0> * DEG_TO_RAD));\r\n  }\r\n}\r\n//----------------------------------------------------------------//\r\n\r\næˆåŠŸã—ã¾ã—ãŸã€‚llSetLocalRotã€€ãŒè‚ã€‚ã‚¢ãƒ›ã‚«ã€‚\r\n\r\n\r\n//----------------------------------------------------------------//\r\n\r\ninteger isOpen = FALSE;\r\ndefault\r\n{\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        rotation doorRot = llGetLocalRot();\r\n        llSay( 0, (string) doorRot );\r\n        llSay( 0, (string) isOpen  );\r\n\r\n        if(isOpen==FALSE){\r\n          llSetLocalRot( doorRot * llEuler2Rot(<0,0,5> * DEG_TO_RAD ));\r\n          isOpen = TRUE;\r\n        }else{\r\n          llSetLocalRot( doorRot * llEuler2Rot(<0,0,355> * DEG_TO_RAD));\r\n          isOpen = FALSE;\r\n        }\r\n  }\r\n}\r\n//----------------------------------------------------------------//\r\n\r\n\r\nãªã‚“ã¨ã‹æˆåŠŸã€‚ã‚ã¨ã¯ã€é’æœ¨ã•ã‚“ã«èª¿æ•´ã—ã¦ã‚‚ã‚‰ã†ã ã‘ã§ã™ã€‚\r\n\r\n\r\nâ– ã€€è‡ªå‹•ã§å‹•ãã‚¿ã‚¤ãƒ—\r\n\r\ninteger isOpen = FALSE;\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);        \r\n    }\r\n    \r\n    sensor(integer num)\r\n    {\r\n        rotation doorRot = llGetRot();\r\n        if(isOpen==FALSE){\r\n          llSetRot(doorRot * llEuler2Rot(<0,0,5> * DEG_TO_RAD ));\r\n          isOpen = TRUE;\r\n        }else{\r\n          llSetRot(doorRot * llEuler2Rot(<0,0,-5> * DEG_TO_RAD));\r\n          isOpen = FALSE;\r\n        }\r\n  }\r\n}\r\n\r\nllEuler2Rot(<0.0, 0.0, 270.0> * DEG_TO_RAD)\r\n\r\n\r\nâ–  link_message ã§å‹•ãã‚¿ã‚¤ãƒ—\r\n\r\n\r\n[tail]\r\n\r\n\r\ninteger isAction = FALSE;\r\n\r\ndefault\r\n{\r\n	link_message(integer sender,integer num, string str,key id)    {\r\n		if( str == \"tail\" ) {\r\n		        rotation doorRot = llGetRot();\r\n		        if(isAction==FALSE){\r\n		          llSetRot(doorRot * llEuler2Rot(<0,0,5>));\r\n		          isOpen = TRUE;\r\n		        }else{\r\n		          llSetRot(doorRot * llEuler2Rot(<0,0,-5>));\r\n		          isOpen = FALSE;\r\n		        }\r\n		}\r\n  	}\r\n}\r\n\r\n\r\n[foot]\r\n\r\n\r\ninteger isAction = FALSE;\r\n\r\ndefault\r\n{\r\n	link_message(integer sender,integer num, string str,key id)    {\r\n		if( str == \"foot\" ) {\r\n		        rotation doorRot = llGetRot();\r\n		        if(isAction==FALSE){\r\n		          llSetRot(doorRot * llEuler2Rot(<5,0,0>));\r\n		          isOpen = TRUE;\r\n		        }else{\r\n		          llSetRot(doorRot * llEuler2Rot(<-5,0,0>));\r\n		          isOpen = FALSE;\r\n		        }\r\n		}\r\n  	}\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSay(0, \"Hello, Avatar!\");\r\n    }\r\n\r\n    touch_start(integer total_number)\r\n    {\r\n        llMessageLinked( LINK_ALL_OTHERS , 0, \"tail\" , NULL_KEY );\r\n    }\r\n}\r\n\r\n\r\n\r\ninteger isOpen = FALSE;\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);        \r\n    }\r\n    \r\n    sensor(integer num)\r\n    {\r\n        rotation doorRot = llGetRot();\r\n        if(isOpen==FALSE){\r\n          llSetRot(doorRot * llEuler2Rot(<0,0,5> * DEG_TO_RAD ));\r\n          isOpen = TRUE;\r\n        }else{\r\n          llSetRot(doorRot * llEuler2Rot(<0,0,-5> * DEG_TO_RAD));\r\n          isOpen = FALSE;\r\n        }\r\n  }\r\n}\r\n\r\n\r\n//==============================================================================//\r\n\r\ninteger isAction = FALSE;\r\n\r\ndefault\r\n{\r\n	link_message(integer sender,integer num, string str,key id)    {\r\n		if( str == \"tail\" ) {\r\n		        rotation doorRot = llGetRot();\r\n		        if(isAction==FALSE){\r\n		          llSetRot(doorRot * llEuler2Rot(<0,0,5> * DEG_TO_RAD));\r\n		          isOpen = TRUE;\r\n		        }else{\r\n		          llSetRot(doorRot * llEuler2Rot(<0,0,-5> * DEG_TO_RAD));\r\n		          isOpen = FALSE;\r\n		        }\r\n		}\r\n  	}\r\n}\r\n\r\n//==============================================================================//\r\n\r\n\r\n\r\n             ','2007-07-15 23:04:20','2007-07-16 19:12:11'),(48,'W15oyoMJ1D','pet ',NULL,'// ï¼•Kï½‡ã®ã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\nfloat heartbeat = 0.5; \r\n// è¡æ’ƒã®è¨­å®š\r\nfloat rot_str = 2;\r\nfloat rot_dmp = 0.5;\r\n\r\n//æ‘©æ“¦\r\nfloat friction = 0.6; \r\n\r\n// zè»¸æ–¹é¢ã¸ã®åŠ›\r\nfloat z_force = 0.2; //check this one\r\n\r\n// ãƒãƒ£ãƒ³ãƒãƒ«\r\ninteger company_channel;\r\n\r\n\r\n//--- ã‚¹ãƒ”ãƒ¼ãƒ‰ ---//\r\nfloat speed;\r\n//--- ç¯„å›² ---//\r\nfloat range;\r\n\r\n//---ã€€ç›®æ¨™å ´æ‰€ ---// \r\nvector new_target;\r\n//--- ç›®æ¨™ID ---//\r\ninteger target_id;\r\n\r\n\r\n\r\n//--- å‹•ä½œã‚’ã¨ã‚ã‚‹ã‚ˆã†ã®é–¢æ•°\r\nall_stop()\r\n{\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«ç‰©ç†çš„ãªåŠ›åŠã³å›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªåŠ›ã‚’åŠ ãˆã‚‹ \r\n    // llGetVel : ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®é€Ÿåº¦ã‚’å¾—ã‚‹\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªå›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n\r\n\r\n//--- axis: è»¸ ---//\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n\r\n// å›žè»¢ã«æŒ‡å®šã•ã‚ŒãŸä½ç½®ã§æŒ‡å®šã•ã‚ŒãŸè»¸ã‚’æŒ‡ã•ã›ã¾ã™ã€‚\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        //--- ã‚¿ã‚¤ãƒžãƒ¼ã‚¤ãƒ™ãƒ³ãƒˆã‚’ã‚»ãƒƒãƒˆ ---//\r\n        llSetTimerEvent(heartbeat);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®æµ®åŠ›ã‚’è¨­å®šã™ã‚‹\r\n        llSetBuoyancy(1);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ã‚¹ãƒ†ãƒ¼ã‚¿ã‚¹ï¼ˆç‰©ç†ï¼ãƒ•ã‚¡ãƒ³ãƒˆãƒ ç­‰ï¼‰ã‚’è¨­å®šã™ã‚‹\r\n        llSetStatus(STATUS_ROTATE_X,FALSE);\r\n        llSetStatus(STATUS_ROTATE_Y,FALSE);\r\n        // ãƒ•ã‚¡ãƒ³ãƒˆãƒ å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHANTOM,TRUE);\r\n        // ç‰©ç†å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        // company_channel ã®å ´åˆã®ã¿åå¿œ\r\n        if(num == company_channel)\r\n        {\r\n	    // æ–‡å­—åˆ—ã‚’æŒ‡å®šã—ãŸåŒºåˆ‡ã‚Šæ–‡å­—ã§ãƒªã‚¹ãƒˆã«å¤‰æ›ã™ã‚‹ï¼ˆç©ºç™½ã‚’å«ã‚“ã ãƒªã‚¹ãƒˆã«å¤‰æ›ï¼‰\r\n            list data = llParseStringKeepNulls( str, [\"-=-\"], [] );\r\n            // ãƒªã‚¹ãƒˆã‹ã‚‰æœ€åˆã®ãƒ‡ãƒ¼ã‚¿ã‚’å–å¾—ï¼ˆã“ã®å ´åˆã‚³ãƒžãƒ³ãƒ‰ï¼‰\r\n            string Cmd = llList2String(data,0);\r\n\r\n            if( Cmd == \"MOVETO\" )\r\n            {\r\n                // target ã‚’ã¨ã‚Šã ã™\r\n                new_target = (vector)llList2String(data,1);\r\n		// speed ã‚’å–ã‚Šå‡ºã™\r\n                speed = (float)llList2String(data,2);\r\n		// ç¯„å›²ã‚’å–ã‚Šå‡ºã™\r\n                range = (float)llList2String(data,3);\r\n		// ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®åˆ°é”ç›®æ¨™åœ°ç‚¹ã‚’ã‚­ãƒ£ãƒ³ã‚»ãƒ«ã™ã‚‹\r\n                llTargetRemove(target_id); \r\n		// ç›®æ¨™åˆ°é”åœ°ç‚¹ã‚’å†è¨­å®šã™ã‚‹\r\n                target_id = llTarget(new_target,range);\r\n		// ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«æ°¸ç¶šçš„ãªåŠ›ã‚’åŠ ãˆã‚‹\r\n                llSetForce(<speed,0,0> * llGetMass(),TRUE);\r\n		// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n                //Set up a rotational force towards new_target.\r\n            }\r\n        }\r\n    }\r\n    not_at_target()\r\n    {\r\n	// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n        llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n        vector currentpos = llGetPos();\r\n	// ç¾åœ¨ä½ç½®ãŒç›®æ¨™åœ°ç‚¹ã‚ˆã‚Šã‚‚å¤§ãã„ã°ã‚ã„\r\n        if(currentpos.z > new_target.z)\r\n        {\r\n            //ä¸‹ã’ã‚‹\r\n            llApplyImpulse(<0,0,-z_force> * llGetMass(),FALSE);\r\n        }\r\n        else\r\n        {\r\n            //ä¸Šã’ã‚‹\r\n            llApplyImpulse(<0,0,z_force> * llGetMass(),FALSE);\r\n        }    \r\n    }\r\n\r\n	// ç›®æ¨™ã«åˆ°é”ã—ãŸã‚‰åå¿œ\r\n	at_target(integer tnum, vector target_pos, vector our_location)\r\n	{\r\n	    // åœæ­¢å‡¦ç†\r\n	    all_stop();\r\n	    // ãƒªãƒ³ã‚¯å…ˆã«ç›®çš„åœ°ã«ç€ã„ãŸã“ã¨ã‚’çŸ¥ã‚‰ã›ã‚‹\r\n	    llMessageLinked( LINK_SET, company_channel, \"ATPOS\", \"\" );\r\n	}\r\n\r\n	timer()\r\n	{\r\n	        //Apply some friction \r\n        	llApplyImpulse(-llGetVel() * llGetMass() * friction,FALSE);   \r\n	}\r\n\r\n	on_rez(integer param)\r\n	{\r\n	    llTargetRemove(target_id); \r\n	    all_stop();\r\n	}\r\n} \r\n\r\n\r\n\r\n\r\n//--- ç§»å‹•é€Ÿåº¦\r\nfloat _MOVE_SECOND = 2.0;\r\n\r\n\r\n//--- ç›®æ¨™ä½ç½®\r\nvector  _TARGET_POS;\r\n//--- ç›®æ¨™ï¼©ï¼¤\r\ninteger _TARGET_ID;\r\n//--- è¨±å®¹ç¯„å›²\r\nfloat   _TARGET_MARGIN   = 0.2;\r\n//--- ã‚ªãƒ¼ãƒŠãƒ¼ã®ãƒ¬ãƒ³ã‚¸\r\nfloat   OWNER_R = 10;\r\n//---- ãƒšãƒƒãƒˆã®ãƒ¬ãƒ³ã‚¸\r\nfloat   PET_R   = 5;\r\n\r\nfloat OWNER_RAY = 5.0;\r\nfloat PET_RAY   = 2.0;\r\n\r\ninteger ATTAINMENT_FG = 0;\r\nrotation DEFAULT_ROT;\r\n\r\n\r\n//--- axis: è»¸ ---//\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n\r\n// å›žè»¢ã«æŒ‡å®šã•ã‚ŒãŸä½ç½®ã§æŒ‡å®šã•ã‚ŒãŸè»¸ã‚’æŒ‡ã•ã›ã¾ã™ã€‚\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n\r\n//---- è·é›¢ã‚’ç®—å‡ºã™ã‚‹ãŸã‚ã®ï¼³ï½ƒï½’ï½‰ï½ï½”ï¼ˆåˆ¥ã«ã‚ã‚‹ã®ã§ãã‚Œã‚’ä½¿ã†ï¼‰\r\nfloat distance( vector target_a , vector target_b )\r\n{\r\n    return llSqrt(  ( target_b.x - target_a.x ) * ( target_b.x - target_a.x ) + ( target_b.y - target_a.y ) * ( target_b.y - target_a.y )  ); \r\n} \r\n\r\nall_stop()\r\n{\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«ç‰©ç†çš„ãªåŠ›åŠã³å›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªåŠ›ã‚’åŠ ãˆã‚‹ \r\n    // llGetVel : ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®é€Ÿåº¦ã‚’å¾—ã‚‹\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªå›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n	//--- ç‰©ç†å±žæ€§ã‚’è¿½åŠ \r\n        llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);\r\n	//ã‚ªãƒ¼ãƒŠãƒ¼ãƒ•ãƒ©ã‚°ï¼¯ï¼®\r\n        OWNER_FG = 0;\r\n	// ã‚»ãƒ³ã‚µãƒ¼é–‹å§‹\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 10, PI, 1);\r\n	// ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã®å›žè»¢è»¸ã‚’å¾—ã‚‹\r\n        DEFAULT_ROT = llGetRot();\r\n    }    \r\n    \r\n\r\n    //---- ã›ã‚“ã•ãƒ¼ã™ã‚‹ãœ\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n\r\n        // --- Get Owner Pos ---//\r\n        integer i;\r\n        vector owner_pos;\r\n        for (i = 0; i < total_number; i++)\r\n        {\r\n            // --- find owner ---//\r\n            if( llGetOwner() == llDetectedKey(i) ) {\r\n                //llWhisper(0, llDetectedName(i) + (string) llDetectedPos(i) );\r\n		// ã‚ªãƒ¼ãƒŠãƒ¼ãƒã‚¸ã‚·ãƒ§ãƒ³ã‚’ãˆã‚‹\r\n                owner_pos        = llDetectedPos(i);\r\n		//ãºã£ã¨ã®ãƒã‚¸ã‚·ãƒ§ãƒ³ã‚’ãˆã‚‹\r\n                vector pet_pos   = llGetPos();\r\n		// è§’åº¦ã‚’å¾—ã‚‹\r\n                float kakudo = llAtan2( owner_pos.x - pet_pos.x , owner_pos.y - pet_pos.y );\r\n                //llSay( 0, (string) kakudo);\r\n\r\n		// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n\r\n		/// ä¸€æ™‚çš„ã«å§¿å‹¢åˆ¶å¾¡ã‚’ã™ã‚‹ãŸã‚ã«ç‰©ç†å±žæ€§ã‚’åˆ‡ã‚Šã¾ã™\r\n                //llSetPrimitiveParams([PRIM_PHYSICS, FALSE]);\r\n                //llSetRot( DEFAULT_ROT );    \r\n                //llSetPrimitiveParams([PRIM_PHYSICS, TRUE]);                      \r\n                \r\n                //--- è·é›¢ã‚’å¾—ã‚‹ ---//\r\n                float distance = distance( pet_pos, owner_pos );\r\n                //llSay( 0, (string) distance );\r\n                if( distance < 5.0  ) {\r\n                    ATTAINMENT_FG = 1;\r\n                }\r\n                else {\r\n                    // è·é›¢ã®ç¯„å›²ã«ã‚ªãƒ¼ãƒŠãƒ¼ãŒã„ãªã‘ã‚Œã°ãã£ã¡ã‚’ã‚€ã„ã¦ãã“ã¸ç§»å‹•ã™ã‚‹\r\n                    llLookAt(owner_pos, 5.0, 1.0);\r\n                    _TARGET_ID = llTarget(owner_pos, _TARGET_MARGIN);                   \r\n                    llMoveToTarget(owner_pos , _MOVE_SECOND);\r\n                }        \r\n            }\r\n        }\r\n        \r\n    }\r\n    // \r\n    not_at_target()\r\n    {\r\n        // ç›®æ¨™ã®ç¯„å›²ã«ãŸã©ã‚Šã¤ã„ã¦ã„ã‚Œã°ã€ãªã‚“ã¨ã‹ãªã‚‹\r\n        if(ATTAINMENT_FG) {\r\n            all_stop();\r\n            llTargetRemove(_TARGET_ID);\r\n            llStopMoveToTarget();\r\n            ATTAINMENT_FG = 0;\r\n        }\r\n        //llSay(0, (string) llGetPos() );\r\n    }\r\n}    \r\n                                                                                                          ã“ã®ã»ã†ã»ã†ãŒã€ã‹ãªã‚ŠåŽ³ã—ã„æ°—ãŒã™ã‚‹ã€‚\r\n\r\nã‚€ã—ã‚ã€ã“ã‚Œã‚’è§£æžã—ãŸçµæžœã®ã¶ã¶ã‚“ã‚’ã˜ã‚…ã†ã‚‰ã„ã®ãŠã¶ã˜ã‡ãã¨ã¸\r\nè¿½åŠ ã™ã‚‹æ–¹æ³•ã‚’è€ƒãˆãŸã»ã†ãŒç„¡é›£ãŒããŒã™ã‚‹ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ï¼•Kï½‡ã®ã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\nfloat heartbeat = 0.5; \r\n// è¡æ’ƒã®è¨­å®š\r\nfloat rot_str = 2;\r\nfloat rot_dmp = 0.5;\r\n\r\n//æ‘©æ“¦\r\nfloat friction = 0.6; \r\n\r\n// zè»¸æ–¹é¢ã¸ã®åŠ›\r\nfloat z_force = 0.2; //check this one\r\n\r\n// ãƒãƒ£ãƒ³ãƒãƒ«\r\ninteger company_channel;\r\n\r\n\r\n//--- ã‚¹ãƒ”ãƒ¼ãƒ‰ ---//\r\nfloat speed;\r\n//--- ç¯„å›² ---//\r\nfloat range;\r\n\r\n//---ã€€ç›®æ¨™å ´æ‰€ ---// \r\nvector new_target;\r\n//--- ç›®æ¨™ID ---//\r\ninteger target_id;\r\n\r\n\r\n\r\n//--- å‹•ä½œã‚’ã¨ã‚ã‚‹ã‚ˆã†ã®é–¢æ•°\r\nall_stop()\r\n{\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«ç‰©ç†çš„ãªåŠ›åŠã³å›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªåŠ›ã‚’åŠ ãˆã‚‹ \r\n    // llGetVel : ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®é€Ÿåº¦ã‚’å¾—ã‚‹\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«çž¬é–“çš„ãªå›žè»¢åŠ›ã‚’åŠ ãˆã‚‹\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n\r\n\r\n//--- axis: è»¸ ---//\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n\r\n// å›žè»¢ã«æŒ‡å®šã•ã‚ŒãŸä½ç½®ã§æŒ‡å®šã•ã‚ŒãŸè»¸ã‚’æŒ‡ã•ã›ã¾ã™ã€‚\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        //--- ã‚¿ã‚¤ãƒžãƒ¼ã‚¤ãƒ™ãƒ³ãƒˆã‚’ã‚»ãƒƒãƒˆ ---//\r\n        llSetTimerEvent(heartbeat);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®æµ®åŠ›ã‚’è¨­å®šã™ã‚‹\r\n        llSetBuoyancy(1);\r\n        // ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ã‚¹ãƒ†ãƒ¼ã‚¿ã‚¹ï¼ˆç‰©ç†ï¼ãƒ•ã‚¡ãƒ³ãƒˆãƒ ç­‰ï¼‰ã‚’è¨­å®šã™ã‚‹\r\n        llSetStatus(STATUS_ROTATE_X,FALSE);\r\n        llSetStatus(STATUS_ROTATE_Y,FALSE);\r\n        // ãƒ•ã‚¡ãƒ³ãƒˆãƒ å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHANTOM,TRUE);\r\n        // ç‰©ç†å±žæ€§è¿½åŠ \r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n    }\r\n\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        // company_channel ã®å ´åˆã®ã¿åå¿œ\r\n        if(num == company_channel)\r\n        {\r\n	    // æ–‡å­—åˆ—ã‚’æŒ‡å®šã—ãŸåŒºåˆ‡ã‚Šæ–‡å­—ã§ãƒªã‚¹ãƒˆã«å¤‰æ›ã™ã‚‹ï¼ˆç©ºç™½ã‚’å«ã‚“ã ãƒªã‚¹ãƒˆã«å¤‰æ›ï¼‰\r\n            list data = llParseStringKeepNulls( str, [\"-=-\"], [] );\r\n            // ãƒªã‚¹ãƒˆã‹ã‚‰æœ€åˆã®ãƒ‡ãƒ¼ã‚¿ã‚’å–å¾—ï¼ˆã“ã®å ´åˆã‚³ãƒžãƒ³ãƒ‰ï¼‰\r\n            string Cmd = llList2String(data,0);\r\n\r\n            if( Cmd == \"MOVETO\" )\r\n            {\r\n                // target ã‚’ã¨ã‚Šã ã™\r\n                new_target = (vector)llList2String(data,1);\r\n		// speed ã‚’å–ã‚Šå‡ºã™\r\n                speed = (float)llList2String(data,2);\r\n		// ç¯„å›²ã‚’å–ã‚Šå‡ºã™\r\n                range = (float)llList2String(data,3);\r\n		// ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®åˆ°é”ç›®æ¨™åœ°ç‚¹ã‚’ã‚­ãƒ£ãƒ³ã‚»ãƒ«ã™ã‚‹\r\n                llTargetRemove(target_id); \r\n		// ç›®æ¨™åˆ°é”åœ°ç‚¹ã‚’å†è¨­å®šã™ã‚‹\r\n                target_id = llTarget(new_target,range);\r\n		// ç‰©ç†ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã«æ°¸ç¶šçš„ãªåŠ›ã‚’åŠ ãˆã‚‹\r\n                llSetForce(<speed,0,0> * llGetMass(),TRUE);\r\n		// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n                //Set up a rotational force towards new_target.\r\n            }\r\n        }\r\n    }\r\n    not_at_target()\r\n    {\r\n	// æŒ‡å®šã—ãŸæ–¹å‘ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’å‘ã‘ã‚‹ï¼ˆXæ–¹å‘ãŒæ­£é¢ï¼‰\r\n        llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n        vector currentpos = llGetPos();\r\n	// ç¾åœ¨ä½ç½®ãŒç›®æ¨™åœ°ç‚¹ã‚ˆã‚Šã‚‚å¤§ãã„ã°ã‚ã„\r\n        if(currentpos.z > new_target.z)\r\n        {\r\n            //ä¸‹ã’ã‚‹\r\n            llApplyImpulse(<0,0,-z_force> * llGetMass(),FALSE);\r\n        }\r\n        else\r\n        {\r\n            //ä¸Šã’ã‚‹\r\n            llApplyImpulse(<0,0,z_force> * llGetMass(),FALSE);\r\n        }    \r\n    }\r\n\r\n	// ç›®æ¨™ã«åˆ°é”ã—ãŸã‚‰åå¿œ\r\n	at_target(integer tnum, vector target_pos, vector our_location)\r\n	{\r\n	    // åœæ­¢å‡¦ç†\r\n	    all_stop();\r\n	    // ãƒªãƒ³ã‚¯å…ˆã«ç›®çš„åœ°ã«ç€ã„ãŸã“ã¨ã‚’çŸ¥ã‚‰ã›ã‚‹\r\n	    llMessageLinked( LINK_SET, company_channel, \"ATPOS\", \"\" );\r\n	}\r\n\r\n	timer()\r\n	{\r\n	        //Apply some friction \r\n        	llApplyImpulse(-llGetVel() * llGetMass() * friction,FALSE);   \r\n	}\r\n\r\n	on_rez(integer param)\r\n	{\r\n	    llTargetRemove(target_id); \r\n	    all_stop();\r\n	}\r\n} \r\n\r\n\r\nr\n\r\n','2007-07-15 23:22:20','2007-07-15 14:22:20'),(49,'oH4YHcstom','è¶³ã¨å°»å°¾ã‚’å‹•ã‹ã™','lsl','â– ã€€æœ¬ä½“\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n    }\r\n\r\n    sensor(integer total_number)\r\n    {\r\n        llMessageLinked( LINK_ALL_OTHERS , 0, \"tail\" , NULL_KEY );\r\n        llMessageLinked( LINK_ALL_OTHERS , 0, \"foot\" , NULL_KEY );\r\n    }\r\n}\r\n\r\nâ– ã€€å°»å°¾\r\n\r\ninteger isAction = FALSE;\r\ndefault\r\n{\r\n    link_message(integer sender,integer num, string str,key id)\r\n    {\r\n        if( str == \"tail\" ) {\r\n            rotation tail_rot = llGetLocalRot();\r\n    \r\n            if(isAction==FALSE){\r\n              llSetLocalRot( tail_rot * llEuler2Rot(<0,0,10> * DEG_TO_RAD ));\r\n              isAction = TRUE;\r\n            }else{\r\n              llSetLocalRot( tail_rot * llEuler2Rot(<0,0,350> * DEG_TO_RAD));\r\n              isAction = FALSE;\r\n            }\r\n        }\r\n  }\r\n} ','2007-07-17 12:41:15','2007-07-23 02:11:13'),(50,'tgez1KXkWW','ã‚¢ãƒ‹ãƒ¡ãƒ¼ã‚·ãƒ§ãƒ³ã¤ãçŠ¬',NULL,'string gAnimName = \"sit_ground\";\r\ninteger isSit   = FALSE;\r\n\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llRequestPermissions(llGetOwner(), PERMISSION_TRIGGER_ANIMATION);\r\n        llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n    }\r\n\r\n    touch_start(integer total_number) {\r\n        if (llDetectedKey(0) != llGetOwner())\r\n            return;\r\n        \r\n        if(isSit) {\r\n            llStopAnimation(gAnimName);\r\n            isSit = FALSE;\r\n            return;\r\n        }\r\n        \r\n        integer perm = llGetPermissions();\r\n        \r\n        if (perm & PERMISSION_TRIGGER_ANIMATION) {\r\n            llStartAnimation( gAnimName );\r\n            isSit = TRUE;\r\n        }\r\n        else {\r\n            llRequestPermissions(llGetOwner(), PERMISSION_TRIGGER_ANIMATION);\r\n        }\r\n    }\r\n\r\n    on_rez(integer param)\r\n    {\r\n        llResetScript(); // reset the script as soon as it starts.\r\n    }\r\n\r\n    sensor(integer total_number)\r\n    {\r\n        llMessageLinked( LINK_ALL_OTHERS , 0, \"tail\" , NULL_KEY );\r\n        llMessageLinked( LINK_ALL_OTHERS , 0, \"foot\" , NULL_KEY );\r\n    }\r\n}','2007-07-17 15:03:38','2007-07-17 06:03:39'),(51,'NZefI22aqC','XMLRPCç‰ˆã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼ã‚¹ã‚¤ãƒƒãƒ1å›ž','lsl','//==========================================================================//\r\n// Dialog\r\n//==========================================================================//\r\ninteger DIALOG_CHANNEL = 42; // dialog channel\r\nlist MENU_MAIN = [\"Call\"]; // the main menu\r\n\r\n//==========================================================================//\r\n// XMLRPC Client\r\n//==========================================================================//\r\nstring URL     = \"http://xmlrpc.secondlife.com/cgi-bin/xmlrpc.cgi\";\r\nstring CHANNEL = \"6ea8d6ae-94a8-bbca-8542-282b637449fb\";\r\n\r\nxmlrpc_client(string xml_data)\r\n{\r\n        llHTTPRequest(URL,[HTTP_METHOD, \"POST\",HTTP_MIMETYPE, \"text/xml\"],xml_data );\r\n}\r\n\r\nstring _make_xml(string channel, string sdata, integer idata)\r\n{\r\n    string xml_declaration = \"<?xml version=\'1.0\'?>\";\r\n    string header          = \"<methodCall>\";\r\n    string method          = \"<methodName>llRemoteData</methodName>\";\r\n    string params_start    = \"<params><param><value><struct>\";\r\n    string channel         = \"<member><name>Channel</name><value><string>\"     + channel         + \"</string></value></member>\";\r\n    string int_value       = \"<member><name>IntValue</name><value><int>\"       + (string)idata   + \"</int></value></member>\";\r\n    string string_value    = \"<member><name>StringValue</name><value><string>\" + sdata           + \"</string></value></member>\";\r\n    string params_end      = \"</struct></value></param></params>\";\r\n    string footer          = \"</methodCall>\";\r\n\r\n    return ( xml_declaration + header + method + params_start + channel + int_value + string_value + params_end + footer);\r\n}\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault \r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n    }\r\n                \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"\\nCall Elevator?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n    \r\n            \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            if (message == \"Call\")\r\n                 xmlrpc_client( _make_xml(CHANNEL ,\"Call\", 1) ); \r\n        }          \r\n    }    \r\n}\r\n  ','2007-07-17 17:59:17','2007-07-24 03:49:33'),(52,'VnG2S6U9M7','ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ãƒ¼ã‚¹ã‚¤ãƒƒãƒã€€WebçµŒç”±ç‰ˆ',NULL,'//==========================================================================//\r\n// Dialog\r\n//==========================================================================//\r\ninteger DIALOG_CHANNEL = 42; // dialog channel\r\nlist MENU_MAIN = [\"Call\"]; // the main menu\r\n\r\n//==========================================================================//\r\n// XMLRPC Client\r\n//==========================================================================//\r\nstring CHANNEL    = \"6ea8d6ae-94a8-bbca-8542-282b637449fb\";\r\nstring URL        = \"http://secondbuzz.yamanaka.t2.mfac.jp/client/nomura_cube/subxmlrpc?\";\r\nstring NOMURA_KEY = \"lfXJ9vfd7ulIhHXKhgllmuSy8gVqfZdT\";\r\n\r\n//==========================================================================//\r\n// Main\r\n//==========================================================================//\r\ndefault \r\n{\r\n    state_entry()\r\n    {\r\n        llListen(DIALOG_CHANNEL, \"\", NULL_KEY, \"\"); \r\n    }\r\n                \r\n    touch_start(integer total_number) \r\n    {\r\n        llDialog(llDetectedKey(0), \"\\nCall Elevator?\", MENU_MAIN, DIALOG_CHANNEL); // present dialog on click\r\n    }\r\n    \r\n            \r\n    listen( integer channel, string name, key id, string message )\r\n    {\r\n        llSay(0,message);\r\n        if (llListFindList(MENU_MAIN, [message]) != -1)  // verify dialog choice\r\n        {\r\n            llSay( 0,\"inside\" );\r\n            if (message == \"Call\")\r\n            {\r\n                string query = \"nomura_key=\" + NOMURA_KEY + \"&IntValue=2&StringValue=Call&Channel=\" + CHANNEL ;\r\n                llHTTPRequest( URL + query , [HTTP_METHOD, \"GET\"], \"\");\r\n            }\r\n        }          \r\n    }    \r\n}\r\n\r\n             \r\n ','2007-07-17 18:10:25','2007-07-17 09:10:25'),(53,'6eStMi0Vjc','pet è¿½è·¡','lsl','//Global Constants.  Change these values to tune your movement script.\r\n//These values are set up for a 5kg object.\r\nfloat heartbeat = 0.5;\r\n//How often the friction impulse should be applied\r\n\r\nfloat rot_str = 2;\r\n\r\nfloat rot_dmp = 0.5;\r\n\r\nfloat friction = 0.6;\r\n//  What fraction of the object\'s current velocity should be removed each heartbeat\r\n\r\nfloat z_force = 0.0; //check this one\r\n//The amount of force  used to push the pet up or down.\r\ninteger company_channel;\r\n//Your unique ID.  Used to recognise the correct link message.\r\n\r\n\r\n//Global Variables:\r\nfloat speed;\r\nfloat range;\r\nvector new_target;\r\ninteger target_id;\r\n\r\n//User defined fucntions\r\nall_stop()\r\n{\r\n    //Turn off linear and rotational forces\r\n    llSetForceAndTorque(<0,0,0>,<0,0,0>,TRUE);\r\n    //Stop any movement by applying an impulse of force in the opposite direction\r\n    llApplyImpulse(-llGetVel() * llGetMass(),FALSE);\r\n    // Do the same for any rotational velocity\r\n    llApplyRotationalImpulse(-llGetTorque() * llGetMass(),FALSE);\r\n}\r\n//Code from Wiki\r\n// AXIS_* constants, represent the unit vector 1 unit on the specified axis.\r\nvector AXIS_UP = <0,0,1>;\r\nvector AXIS_LEFT = <0,1,0>;\r\nvector AXIS_FWD = <1,0,0>;\r\n\r\n// getRotToPointAxisAt()\r\n// Gets the rotation to point the specified axis at the specified position.\r\n// @param axis The axis to point. Easiest to just use an AXIS_* constant.\r\n// @param target The target, in region-local coordinates, to point the axis at.\r\n// @return The rotation necessary to point axis at target.\r\n// Created by Ope Rand, modifyed by Christopher Omega\r\nrotation getRotToPointAxisAt(vector axis, vector target) {\r\n    return llGetRot() * llRotBetween(axis * llGetRot(), target - llGetPos());\r\n}\r\n//end of code from Wiki\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n         llSensorRepeat(\"\", llGetOwner(), AGENT, 30, PI, 1);\r\n        llSetTimerEvent(heartbeat);\r\n        //Every half a second, call the timer event to apply some friction.\r\n        llSetBuoyancy(1);\r\n        //Setting the buoyancy to 1 cancels out the gravity.  The object will now float.\r\n        llSetStatus(STATUS_ROTATE_X,FALSE);\r\n        llSetStatus(STATUS_ROTATE_Y,FALSE);\r\n        //The two lines above stop the object from rotating in anything but the z axis.\r\n        llSetStatus(STATUS_PHANTOM,TRUE);\r\n        //Make the object phantom.\r\n        llSetStatus(STATUS_PHYSICS,TRUE);\r\n        //Finally, set the Physics flag on, so the object is now subject to forces, inertia and all the other dynamic features.\r\n    }\r\n    \r\n\r\n    sensor(integer total_number) // total_number is the number of avatars detected.\r\n    {\r\n        integer i;\r\n        for( i = 0; i< total_number; i++ )\r\n        {\r\n            if( llGetOwner() == llDetectedKey(i) ) \r\n            {\r\n                new_target = llDetectedPos(i);\r\n                speed = 5;\r\n                range = 2;\r\n                llTargetRemove(target_id); \r\n                target_id = llTarget(new_target,range);\r\n                llSetForce(<speed,0,0> * llGetMass(),TRUE);\r\n                llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n            }\r\n        }\r\n \r\n    }\r\n    not_at_target()\r\n    {\r\n        llRotLookAt(getRotToPointAxisAt(AXIS_FWD,new_target), rot_str, rot_dmp);\r\n        vector currentpos = llGetPos();\r\n        if(currentpos.z > new_target.z)\r\n        {\r\n            //little push downwards\r\n            llApplyImpulse(<0,0,-z_force> * llGetMass(),FALSE);\r\n        }\r\n        else\r\n        {\r\n            //little upwards\r\n            llApplyImpulse(<0,0,z_force> * llGetMass(),FALSE);\r\n        }    \r\n    }\r\nat_target(integer tnum, vector target_pos, vector our_location)\r\n{\r\n    all_stop();\r\n    llMessageLinked( LINK_SET, company_channel, \"ATPOS\", \"\" );\r\n}\r\ntimer()\r\n    {\r\n        //Apply some friction \r\n        llApplyImpulse(-llGetVel() * llGetMass() * friction,FALSE);   \r\n    }\r\non_rez(integer param)\r\n{\r\n    llTargetRemove(target_id); \r\n    all_stop();\r\n}\r\n}\r\n\r\n ','2007-07-18 03:15:15','2007-07-23 02:10:56'),(54,'mBFmhHKU96','avator ã®è¶³å…ƒã®é«˜ã•ã‚’å¾—ã‚‹',NULL,'default\r\n{\r\n\r\n\r\n    touch_start(integer total_number)\r\n    {\r\n        integer i;\r\n        for( i = 0; i < total_number ; i++ )\r\n        {\r\n            if(llGetOwner() == llDetectedKey(i) )\r\n            {\r\n                vector agent_size = llGetAgentSize(llGetOwner());\r\n                float  ground_z   = llGround(<0,0,0>);\r\n                vector owner_pos  = llDetectedPos(i);\r\n                llSay( 0,\"AGENT_SIZE\"   +  (string) agent_size.z );\r\n                llSay( 0, \"GROUND_SIZE\" +  (string) ground_z );\r\n                llSay( 0, \"OWNER_SIZE\"  +  (string) owner_pos.z );\r\n                \r\n                float agent_foot = owner_pos.z - ( agent_size.z / 2.0 );\r\n                \r\n                llSay( 0 , (string) agent_foot );\r\n                        \r\n            }   \r\n        }\r\n    }\r\n}\r\n','2007-07-18 15:04:34','2007-07-18 06:04:34'),(55,'sCcsMksmQE','Web::Scriper ã®ãƒ†ã‚¹ãƒˆ',NULL,'  1 #!/usr/local/bin/perl\r\n  2 use strict;\r\n  3 use warnings;\r\n  4 use FindBin::libs;\r\n  5\r\n  6 use URI;\r\n  7 use Web::Scraper;\r\n  8 use Encode;\r\n  9 use List::MoreUtils qw/uniq/;\r\n 10\r\n 11 my $links = scraper {\r\n 12     process \'ul.list-01 > li\', \'li[]\' => \'TEXT\';\r\n 13     result qw/li/;\r\n 14 }->scrape(URI->new(shift));\r\n 15\r\n 16 print encode(\'utf8\', $_), \"\\n\" for uniq @$links;\r\n','2007-07-21 01:29:33','2007-07-20 16:29:33'),(56,'iqKqHBmKRI','mod_perl ç’°å¢ƒå¤‰æ•°','mod_perl','ç’°å¢ƒå¤‰æ•°ã¸çµ„ã¿è¾¼ã‚€æ–¹æ³•ã¨ã—ã¦ã“ã‚“ãªæ–¹æ³•ãŒã‚ã‚‹ã€‚\r\n\r\n        PerlSetEnv PERL5LIB /home/httpd/perl\r\n        PerlSetEnv PERL5LIB /home/httpd/perl:/home/httpd/mymodules\r\n\r\n\r\nã‚ã¨ã¯ã€startup.plã€€ã§ã‚„ã‚‹ã»ã†ã»ã†ã‚‚ãã‚“ã–ã„ã™ã‚‹ã€‚\r\n\r\näº‹å‰ã«çµ„ã¿è¾¼ã‚€ã“ã¨ã«ã‚ˆã‚Šã ã„ã¶ã¾ã—ã«ãªã‚‹ã¨æ€ã‚ã‚Œã‚‹ã€‚\r\n\r\n        startup.pl\r\n        ----------\r\n        use lib qw(/home/httpd/perl /home/httpd/mymodules);\r\n        1;\r\n\r\n      and load the startup file from the configuration file by:\r\n\r\n        PerlRequire /path/to/startup.pl\r\n\r\n ','2007-07-21 04:10:36','2007-07-22 20:55:16'),(57,'GQYkavUsL7','Flex clickHandler ','flex','<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<mx:Application \r\n    xmlns:mx=\"http://www.adobe.com/2006/mxml\" \r\n    width=\"300\" height=\"200\"\r\n    horizontalAlign=\"center\" verticalAlign=\"middle\" \r\n    viewSourceURL=\"src/HandlingEventsEventHandler/index.html\"\r\n\r\n>\r\n    <mx:Script>\r\n        <![CDATA[\r\n            import flash.events.MouseEvent;\r\n        \r\n            private function clickHandler ( event:MouseEvent ):void\r\n            {\r\n                myLabel.text = \"Hello, World!\";\r\n            }\r\n        ]]>\r\n    </mx:Script>\r\n\r\n    \r\n    <mx:Panel \r\n        title=\"My Application\" horizontalAlign=\"center\"\r\n        paddingTop=\"10\" paddingBottom=\"10\" paddingLeft=\"10\" paddingRight=\"10\" \r\n    >\r\n\r\n        <mx:Label id=\"myLabel\" width=\"180\" fontWeight=\"bold\" fontSize=\"24\"/>\r\n        <mx:Button id=\"myButton\" label=\"Click Me!\" click=\"clickHandler(event);\" />\r\n\r\n    </mx:Panel>\r\n</mx:Application> ','2007-07-21 05:16:15','2007-07-22 20:54:58'),(58,'32adGq6A2R','HTML::TagCloud::Extended','cpan','    use HTML::TagCloud::Extended;\r\n\r\n    my $cloud = HTML::TagCloud::Extended->new();\r\n    $cloud->add($tag1, $url1, $count1, $timestamp1);\r\n    $cloud->add($tag2, $url2, $count2, $timestamp2);\r\n    $cloud->add($tag3, $url3, $count3, $timestamp3);\r\n\r\n    my $html = $cloud->html_and_css( {\r\n        order_by => \'count_desc\',\r\n        limit    => 20,\r\n    } );\r\n\r\n    print $html;  ','2007-07-23 04:43:32','2007-07-22 20:24:11'),(59,'Id5tbhm9ad','element.hide','javascript','<script>\r\nfunction disp_change2(target) {\r\n    if (target != \"\") {\r\n        var target_id = target + \'_form\' ;\r\n        var elemnet_ids  =  [\'cost_form\', \'close_form\', \'limit_form\', \'click_unique_form\', \'accept_genre_form\', \'action_incentive_form\'] ;\r\n        elemnet_ids.each( function( element_id ) {\r\n            if( target_id == element_id ) {\r\n                $( element_id ).show();\r\n            }\r\n            else {\r\n                Element.hide( element_id );\r\n            }\r\n        });\r\n    }\r\n}\r\n</script>\r\n ','2007-07-24 11:40:45','2007-07-24 02:42:38'),(60,'NRGgAXT4mq','æ›œæ—¥ã«ã‚ˆã‚‹å‡¦ç†','perl','use strict;\r\nuse warnings;\r\nuse MF::DateTime;\r\n\r\n\r\nmy %en = (\r\n    1 => \'Sun\',\r\n    2 => \'Mon\',\r\n    3 => \'Thu\',\r\n);\r\n\r\nmy $count;\r\nmy $sum;\r\nfor my $date ( MF::DateTime->new( year => 2007, month => 06 )->month_list ) {\r\n    $sum++;\r\n    print $date->ymd . \" +1 \" . $sum . \"\\n\";\r\n    if( $date->day_of_week == 4 ) {\r\n        print $date->ymd . \"(æœ¨æ›œ)\\n\";\r\n        print $sum.\"\\n\";\r\n        $sum = 0 ;\r\n    }\r\n}\r\n','2007-07-24 14:31:13','2007-07-24 05:31:13'),(61,'pUzg0UKrC0','ãƒ†ã‚­ã‚¹ãƒˆçµ±è¨ˆ','perl','% mecab\r\nã™ã‚‚ã‚‚ã‚‚ã‚‚ã‚‚ã‚‚ã‚‚ã‚‚ã®ã†ã¡\r\nã™ã‚‚ã‚‚  åè©ž,ä¸€èˆ¬,*,*,*,*,ã™ã‚‚ã‚‚,ã‚¹ãƒ¢ãƒ¢,ã‚¹ãƒ¢ãƒ¢\r\nã‚‚      åŠ©è©ž,ä¿‚åŠ©è©ž,*,*,*,*,ã‚‚,ãƒ¢,ãƒ¢\r\nã‚‚ã‚‚    åè©ž,ä¸€èˆ¬,*,*,*,*,ã‚‚ã‚‚,ãƒ¢ãƒ¢,ãƒ¢ãƒ¢\r\nã‚‚      åŠ©è©ž,ä¿‚åŠ©è©ž,*,*,*,*,ã‚‚,ãƒ¢,ãƒ¢\r\nã‚‚ã‚‚    åè©ž,ä¸€èˆ¬,*,*,*,*,ã‚‚ã‚‚,ãƒ¢ãƒ¢,ãƒ¢ãƒ¢\r\nã®      åŠ©è©ž,é€£ä½“åŒ–,*,*,*,*,ã®,ãƒŽ,ãƒŽ\r\nã†ã¡    åè©ž,éžè‡ªç«‹,å‰¯è©žå¯èƒ½,*,*,*,ã†ã¡,ã‚¦ãƒ,ã‚¦ãƒ\r\nEOS\r\n\r\nMeCabã®çµæžœãŒã“ã‚“ãªæ„Ÿã˜ã§å–ã‚Œã‚‹ã®ã§ã€ã€Œåè©žã€ä¸€èˆ¬ã€ã‚’å¯¾è±¡ã«ã—ã¦\r\né›†è¨ˆã•ã›ã‚‹æ–¹æ³•ã§ã„ã“ã†ã¨æ€ã†ã€‚\r\n\r\n\r\n\r\n','2007-07-24 15:14:16','2007-07-24 06:14:16'),(62,'uJRZhNhwGZ','ã‚¨ãƒ¬ãƒ™ãƒ¼ã‚¿ã®æ–°åž‹èª¿æŸ»','lsl','mitsukoshi\r\n\r\n\r\n\r\nã‚ã¨ã€å‹•ç”»ã®ã‚¯ãƒªãƒƒã‚¯ã§ã®åˆ‡ã‚Šæ›¿ãˆã‚’èª¿æŸ»ã€‚','2007-07-24 20:39:10','2007-07-24 11:39:10'),(63,'2hSdLwXB4B','æ›œæ—¥æŒ‡å®šã§ï¼‘é€±é–“ã®æœ€çµ‚æ—¥ã‚’ã¨ã‚‹','perl','use strict;\r\nuse warnings;\r\nuse MF::DateTime;\r\nuse DateTime::Event::Recurrence;\r\nuse Data::Dumper;\r\n\r\n# -------------------------------------------------------------------------\r\n# ä¸Žãˆã‚‰ã‚ŒãŸæ—¥ä»˜ã®ä¸­ã§ã®ãã®é€±ã®æœ€çµ‚æ—¥ã‚’æ±‚ã‚ã‚‹ã“ã¨ãŒå‡ºæ¥ã‚‹ã®ã§\r\n#\r\n# -------------------------------------------------------------------------\r\nsub get_last_day {\r\n    my ( $datetime , $start_day_of_week ) = @_;\r\n\r\n    my $last_week  = $datetime->clone->subtract( weeks => 1 );\r\n    my $start_date = shift @{[ grep { $_->day_of_week == $start_day_of_week } DateTime::Event::Recurrence->daily->as_list( start => $last_week, end => $datetime ) ]};\r\n    return  $start_date->clone->add( days => 6 );\r\n}\r\n\r\n\r\nmy $last_date = &get_last_day( MF::DateTime->now , 4 );\r\n\r\nwarn $last_date->ymd;\r\n\r\n\r\n\r\n__END__\r\n\r\n\r\nãƒ»start_date ã¸é–‹å§‹æ—¥ã‚’ã¨ã‚‹ã€‚\r\nãƒ»é–‹å§‹æ—¥ã‹ã‚‰ï¼‘é€±é–“ã•ã‹ã®ã¼ã‚Šã€day_of_week ã®ã€€ï¼”ã‚’æŽ¢ã™\r\nãƒ»ãã“ã‚’ã‚¹ã‚¿ãƒ¼ãƒˆã¨ã—ã¦æœ€çµ‚æ—¥ã‚’è¿”ã™ã€‚\r\n','2007-07-25 12:01:17','2007-07-25 03:01:17'),(64,'wXAbtFMq2d','ã€Žè¨€èªžå‡¦ç†æŠ€è¡“ã®æ·±åŒ–ã¨ç†è«–ãƒ»å¿œç”¨ã®æ–°å±•é–‹ã€','Symposium','[Japanese message only] \r\n\r\nï¼ˆé‡è¤‡ã—ã¦å—ã‘å–ã‚‰ã‚ŒãŸæ–¹ã¯ã”å®¹èµ¦ä¸‹ã•ã„ï¼‰ \r\n\r\n******************************************************* \r\nã€€ã€€ã€€ã€Žè¨€èªžå‡¦ç†æŠ€è¡“ã®æ·±åŒ–ã¨ç†è«–ãƒ»å¿œç”¨ã®æ–°å±•é–‹ã€ \r\nã€€ã€€ã€€ã€€ç§‘ç ”ãƒ»åˆåŒã‚·ãƒ³ãƒã‚¸ã‚¦ãƒ ã®ã”æ¡ˆå†… \r\n******************************************************* \r\n\r\nè‡ªç„¶è¨€èªžå‡¦ç†é–¢ä¿‚ã®ç§‘å­¦ç ”ç©¶è²»ãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆä»£è¡¨è€…ï¼˜åãŒåˆåŒã§ã€ \r\nä¸‹è¨˜ã®é€šã‚Šã€ã‚·ãƒ³ãƒã‚¸ã‚¦ãƒ ã‚’é–‹å‚¬è‡´ã—ã¾ã™ã®ã§ã”æ¡ˆå†…è‡´ã—ã¾ã™ã€‚ \r\n\r\nãœã²ã”å‚åŠ ä¸‹ã•ã„ã¾ã™ã‚ˆã†ãŠé¡˜ã„ç”³ã—ä¸Šã’ã¾ã™ã€‚ \r\n\r\n\r\nã€Žè¨€èªžå‡¦ç†æŠ€è¡“ã®æ·±åŒ–ã¨ç†è«–ãƒ»å¿œç”¨ã®æ–°å±•é–‹ã€ \r\nã€€ç§‘ç ”ãƒ»åˆåŒã‚·ãƒ³ãƒã‚¸ã‚¦ãƒ  \r\nhttp://panflute.p.u-tokyo.ac.jp/nlpsympo/ \r\n\r\næ—¥æ™‚ï¼šï¼’ï¼ï¼ï¼–å¹´ï¼™æœˆï¼’ï¼—æ—¥ï¼ˆæœ¨ï¼‰ï¼‘ï¼ï¼šï¼ï¼ï½žï¼‘ï¼˜ï¼šï¼ï¼ \r\nä¼šå ´ï¼šæ±äº¬å¤§å­¦æœ¬éƒ·ã‚­ãƒ£ãƒ³ãƒ‘ã‚¹ \r\nã€€ã€€ã€€å·¥å­¦éƒ¨ï¼’å·é¤¨ã€€ï¼’ï¼”ï¼‘è¬›ç¾©å®¤ \r\nã€€ã€€ã€€ã€’113-0033ã€€æ±äº¬éƒ½æ–‡äº¬åŒºæœ¬éƒ·ï¼—ï¼ï¼“ï¼ï¼‘ \r\nå‚åŠ è²»ï¼šç„¡æ–™ \r\nå‚åŠ ç”³è¾¼ï¼šã§ãã‚‹ã ã‘ä¸‹è¨˜ï¼µï¼²ï¼¬ã‹ã‚‰äº‹å‰ç™»éŒ²ã‚’ãŠé¡˜ã„ã„ãŸã—ã¾ã™ã€‚ \r\nhttp://palenque.p.u-tokyo.ac.jp/nlpsympo/register.cgi \r\nä¸»å‚¬ï¼šã€Žè¨€èªžå‡¦ç†æŠ€è¡“ã®æ·±åŒ–ã¨ç†è«–ãƒ»å¿œç”¨ã®æ–°å±•é–‹ã€ç§‘ç ”ãƒ»åˆåŒã‚· \r\nã€€ã€€ã€€ãƒ³ãƒã‚¸ã‚¦ãƒ å®Ÿè¡Œå§”å“¡ä¼šï¼ˆå§”å“¡é•·ï¼šå½±æµ¦å³¡ãƒ»å¹¹äº‹ï¼šä¹¾å¥å¤ªéƒŽï¼‰ \r\n\r\n\r\nãƒ—ãƒ­ã‚°ãƒ©ãƒ  \r\n\r\n10:00-10:10 ä¸»å‚¬è€…æŒ¨æ‹¶ï¼ˆä¹¾å¥å¤ªéƒŽï¼‰ \r\n10:10-10:50 è—¤äº•æ•¦ï¼ˆç­‘æ³¢å¤§ï¼‰ \r\nã€€ã€€ä¸å‡ä¸€ãªæƒ…å ±ã®å†æ§‹æˆã«ã‚ˆã‚‹ãƒžãƒ«ãƒãƒ¡ãƒ‡ã‚£ã‚¢ç™¾ç§‘äº‹å…¸ã‚³ãƒ³ãƒ†ãƒ³ãƒ„ \r\nã€€ã€€ã®æ§‹ç¯‰ã¨è©•ä¾¡ \r\n10:50-11:30 ä¸­å·è£•å¿—ï¼ˆæ±å¤§ï¼‰ \r\n   Webãƒ†ã‚­ã‚¹ãƒˆã‹ã‚‰ã®çŸ¥è­˜æŠ½å‡ºæ”¯æ´ã‚·ã‚¹ãƒ†ãƒ ã«é–¢ã™ã‚‹ç ”ç©¶ \r\n11:30-13:00 æ˜¼ä¼‘ã¿ \r\n13:00-13:40 é³¥æ¾¤å¥å¤ªéƒŽï¼ˆJAISTï¼‰ \r\n   æ¤œç´¢è¦æ±‚ã®å…·ä½“åŒ–ã‚’æ”¯æ´ã™ã‚‹å·¨å¤§ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã®è‡ªå‹•ç”Ÿæˆ \r\n13:40-14:20 ä¹¾å¥å¤ªéƒŽï¼ˆNAISTï¼‰ \r\nã€€ã€€èªžå½™æ„å‘³è«–ã«åŸºã¥ãè¨€ã„æ›ãˆè¨ˆç®—æ©Ÿæ§‹ã®å·¥å­¦çš„å®Ÿç¾ã¨è¨€ã„æ›ãˆçŸ¥ \r\nã€€ã€€è­˜ç²å¾—ã¸ã®å¿œç”¨ \r\n14:20-15:00 ä½è—¤ç†å²ï¼ˆåå¤§ï¼‰ \r\nã€€ã€€å††æ»‘ãªæƒ…å ±ä¼é”ã‚’æ”¯æ´ã™ã‚‹è¨€èªžè¦æ ¼ã¨è¨€èªžå¤‰æ›æŠ€è¡“ \r\n15:00-15:20 ä¼‘æ†© \r\n15:20-16:00 å¥¥æ‘å­¦ï¼ˆæ±å·¥å¤§ï¼‰ \r\nã€€ã€€ãƒ†ã‚­ã‚¹ãƒˆã®è‡ªå‹•è©•ä¾¡ã‚·ã‚¹ãƒ†ãƒ ã®é–‹ç™º \r\n16:00-16:40 æ²³åŽŸé”ä¹Ÿï¼ˆäº¬å¤§ï¼‰ \r\nã€€ã€€è©±ã—è¨€è‘‰éŸ³å£°ã‚³ãƒŸãƒ¥ãƒ‹ã‚±ãƒ¼ã‚·ãƒ§ãƒ³ã®æ§‹é€ ã®æŠ½å‡ºã¨è¦–è¦šåŒ– \r\n16:40-17:20 å½±æµ¦å³¡ï¼ˆæ±å¤§ï¼‰ \r\nã€€ã€€ç¿»è¨³è€…ã‚’æ”¯æ´ã™ã‚‹ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å¤šè¨€èªžãƒ¬ãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ãƒ»ãƒ„ãƒ¼ãƒ«ã®æ§‹ç¯‰ \r\n17:20-18:00 ç·åˆè¨Žè«–: \r\n   è¨€èªžå‡¦ç†æŠ€è¡“ã®æ·±åŒ–ã¨ç†è«–ãƒ»å¿œç”¨ã®æ–°å±•é–‹ \r\n\r\n\r\nä¸»æ—¨ \r\n\r\næ¯Žå¹´ï¼“æœˆã«è¡Œã‚ã‚Œã‚‹è¨€èªžå‡¦ç†å­¦ä¼šã®å¹´æ¬¡å¤§ä¼šã¯ã€ã“ã“æ•°å¹´ã€éžå¸¸ã«å¤š \r\nãã®ç™ºè¡¨ãŒãªã•ã‚Œã€ã¾ãŸã€å¤šãã®ç ”ç©¶è€…ãŒé›†ã¾ã‚‹ä¸€å¤§ã‚¤ãƒ™ãƒ³ãƒˆã¨ãªã£ \r\nã¦ã„ã¾ã™ã€‚ã—ã‹ã—ãªãŒã‚‰ã€ã“ã®è¨€èªžå‡¦ç†å­¦ä¼šå¹´æ¬¡å¤§ä¼šã‚’å§‹ã‚ã€è‡ªç„¶è¨€ \r\nèªžå‡¦ç†é–¢ä¿‚ç ”ç©¶ä¼šã§ã¯æŠ€è¡“çš„ãªæˆæžœç™ºè¡¨ãŒä¸­å¿ƒã§ã™ã€‚ãã‚Œã«å¯¾ã—ã¦ã€ \r\nç§ãŸã¡ã¯ã€Œã“ã†ã„ã†ã“ã¨ã‚’ã—ãŸã„ã€‚ã“ã†ã„ã†ç ”ç©¶ã‚’é€²ã‚ã¦ã„ã‚‹ã€ã¨ã„ \r\nã†ç›®æ¨™ã‚„è¨ˆç”»ã‚’è©±ã—è­°è«–ã™ã‚‹æ©Ÿä¼šã‚‚ã‚ã£ãŸã»ã†ãŒã‚ˆã„ã®ã§ã¯ãªã„ã‹ã¨ \r\nè€ƒãˆã¦ãã¾ã—ãŸã€‚ \r\n\r\nã¾ãŸã€ã‚ã‚‹ç¨‹åº¦å¹´é½¢ãŒã„ãã¨ã€å…±åŒã§ç ”ç©¶ã‚’ã—ã¦ã„ã‚‹å­¦ç”Ÿã‚„è‹¥æ‰‹ã«ç ” \r\nç©¶ç™ºè¡¨ã‚’ã‚†ãšã‚‹ã“ã¨ãŒå¢—ãˆã€ã‚ªãƒ¼ãƒ—ãƒ³ãªä¼šåˆã§ã€ç ”ç©¶ä»£è¡¨è€…ãŒç ”ç©¶å†… \r\nå®¹ã«ã¤ã„ã¦è©±ã™æ©Ÿä¼šãŒå°‘ãªããªã‚Šã¾ã™ã€‚ãã®çµæžœã€ç ”ç©¶ã®ã­ã‚‰ã„ç­‰ãŒ \r\nååˆ†ã«ä¼ã‚ã‚‰ãªã„ã“ã¨ã‚‚å°‘ãªãã‚ã‚Šã¾ã›ã‚“ã€‚ã—ãŸãŒã£ã¦ã€ç§ãŸã¡ã¯ã€ \r\nãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã®ç ”ç©¶ä»£è¡¨è€…ãŒè‡ªã‚‰ã®ç ”ç©¶è¨ˆç”»ã‚„å†…å®¹ã«ã¤ã„ã¦ã€ã‚‚ã£ã¨ \r\næƒ…å ±ç™ºä¿¡ã—ã€è­°è«–ã‚’ã—ã¦ã‚‚ã‚ˆã„ã®ã§ã¯ã¯ãªã„ã‹ã¨è€ƒãˆã¾ã™ã€‚ \r\n\r\nã“ã®ã‚ˆã†ãªä¸»æ—¨ã®ã‚‚ã¨ã€æ˜¨å¹´åº¦ã€ï¼“ã¤ã®ç§‘ç ”ä»£è¡¨è€…ãŒåˆåŒã§ã€Žèªžå½™è³‡ \r\næºã®æ·±åŒ–ã¨ï¼®ï¼¬ï¼°æ–°æ™‚ä»£ã€ç§‘ç ”ãƒ»åˆåŒã‚·ãƒ³ãƒã‚¸ã‚¦ãƒ ã‚’é–‹å‚¬ã—ã¾ã—ãŸã€‚ \r\nãã®æˆåŠŸã‚’å—ã‘ã€æœ¬å¹´åº¦ã¯ã€ï¼˜ã¤ã®ç§‘ç ”ãƒ»ç ”ç©¶ä»£è¡¨è€…ãŒåˆåŒã§ã‚·ãƒ³ãƒ \r\nã‚¸ã‚¦ãƒ ã‚’é–‹å‚¬ã™ã‚‹ã“ã¨ã¨ãªã‚Šã¾ã—ãŸã€‚ \r\n\r\nã¿ãªã•ã¾ã®å¾¡å‚åŠ ã‚’ãŠå¾…ã¡ã—ã¦ã„ã¾ã™ã€‚ \r\n\r\n','2007-07-25 14:06:57','2007-07-25 05:06:58'),(65,'IxHV81i8Ra','é€±ã®æœ€çµ‚æ—¥ã‚’ãƒªã‚¹ãƒˆã§ãˆã‚‹','perl','é…åˆ—ã‚’å—ã‘å–ã‚‹ã€é€±ã®ç¯„å›²ã‚’åˆ‡ã‚‹ã€‚\r\n\r\nå—ã‘å–ã£ãŸç¯„å›²ã§ä¸€ç•ªå¤§ãã„æ—¥ä»˜ã¸åˆè¨ˆå€¤ã‚’å…¥ã‚Œã‚‹ã€‚\r\n\r\nã¾ãšã€ãã®é€±ã®é–‹å§‹ã®æ—¥ã‚’å¾—ã‚‹ã€‚ãã‚Œã‚’å…ƒã«çµ‚äº†æ—¥ã‚’å¾—ã‚‹ã€‚\r\n\r\n\r\nnow_check_week = last_date ã¨ã—ã¦ãŠã\r\n\r\nã“ã‚Œã¯ã€now_date ãŒ last_date ã‚ˆã‚Šå¤§ãããªã£ãŸã‚‰æ›´æ–°ã•ã‚Œã‚‹ã€‚\r\n\r\n\r\n\r\nif( ! $last_date || $date > $last_date ) {\r\n   $last_date = æ›´æ–°ãƒ¡ã‚½ãƒƒãƒ‰ \r\n}\r\n\r\nif( $last_date == $now_date)  {\r\n   # å‡¦ç†\r\n   \r\n}\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nback up\r\n\r\nuse strict;\r\nuse warnings;\r\nuse MF::DateTime;\r\nuse DateTime::Event::Recurrence;\r\nuse Data::Dumper;\r\n\r\n# -------------------------------------------------------------------------\r\n# ä¸Žãˆã‚‰ã‚ŒãŸæ—¥ä»˜ã®ä¸­ã§ã®ãã®é€±ã®æœ€çµ‚æ—¥ã‚’æ±‚ã‚ã‚‹ã“ã¨ãŒå‡ºæ¥ã‚‹ã®ã§\r\n#\r\n# -------------------------------------------------------------------------\r\nsub get_last_day {\r\n    my ( $datetime , $start_day_of_week ) = @_;\r\n\r\n    my $last_week  = $datetime->clone->subtract( weeks => 1 );\r\n    my $start_date = shift @{[ grep { $_->day_of_week == $start_day_of_week } DateTime::Event::Recurrence->daily->as_list( start => $last_week, end => $datetime ) ]};\r\n    return  $start_date->clone->add( days => 6 );\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ãƒ†ã‚¹ãƒˆãƒ‡ãƒ¼ã‚¿ã®åˆæœŸåŒ–\r\n#\r\n# -------------------------------------------------------------------------\r\nmy @dates;\r\nwhile( my $date = <DATA> ) {\r\n    chomp($date);\r\n    push @dates , MF::DateTime->strptime( $date, \"%Y-%m-%d\");\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ãƒ†ã‚¹ãƒˆ\r\n#\r\n# -------------------------------------------------------------------------\r\nmy $count      = 0;\r\nmy $sum        = 0;\r\nmy $last_date;\r\nmy $dates_size = scalar @dates -1 ;\r\nmy $day_of_week = 4;\r\nfor my $date ( @dates ) {\r\n\r\n    $sum += $count;\r\n\r\n    if( ! $last_date || $date > $last_date ) {\r\n        $last_date = get_last_day( $date, $day_of_week );\r\n    }\r\n\r\n    if( $date->day_of_week != $day_of_week and  $dates[$count + 1] and $dates[$count + 1] > $last_date ) {\r\n        print $date->ymd . \"\\t$count\\n\";\r\n        $sum = 0;\r\n    }\r\n    elsif( $dates_size == $count ) {\r\n        print $date->ymd . \"\\t$count\\n\";\r\n    }\r\n    else {\r\n        print $date->ymd . \"\\t\\n\";\r\n    }\r\n    $count++;\r\n}\r\n\r\n__END__\r\n2007-05-02\r\n2007-06-02\r\n2007-06-03\r\n2007-06-04\r\n2007-06-05\r\n2007-06-06\r\n2007-06-07\r\n2007-06-08\r\n2007-06-09\r\n2007-06-10\r\n2007-06-11\r\n2007-06-12\r\n2007-06-13\r\n2007-06-14\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\nä¸€è¦§ã®ä¸­ã§ï¼‘é€±é–“ã®æœ€çµ‚æ—¥ã‚’ã¨ã£ã¦ã€è¿”ã™ãƒ¡ã‚½ãƒƒãƒ‰ã‚’ä½œã£ãŸã»ã†ãŒç„¡é›£ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-07-25 16:54:44','2007-07-25 07:54:44'),(66,'MeXuKS0cOM','ã©ã®é€±ã«ä½ç½®ã™ã‚‹ã‹ã‚’ãƒžãƒƒãƒ”ãƒ³ã‚°ã™ã‚‹æ–¹æ³•','perl','use strict;\r\nuse warnings;\r\nuse MF::DateTime;\r\nuse DateTime::Event::Recurrence;\r\nuse Data::Dumper;\r\nuse List::Util qw/first/;\r\n\r\n# -------------------------------------------------------------------------\r\n# æœ€åˆã®æ—¥ã«ã¡ã‚’å¾—ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nsub get_start_date {\r\n    my ( $datetime , $start_day_of_week ) = @_;\r\n\r\n    my $last_week  = $datetime->clone->subtract( weeks => 1 );\r\n    my $start_date = shift @{[ grep { $_->day_of_week == $start_day_of_week } DateTime::Event::Recurrence->daily->as_list( start => $last_week, end => $datetime ) ]};\r\n\r\n    return $start_date;\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ãƒ†ã‚¹ãƒˆãƒ‡ãƒ¼ã‚¿ã®åˆæœŸåŒ–\r\n#\r\n# -------------------------------------------------------------------------\r\nmy @dates;\r\nwhile( my $date = <DATA> ) {\r\n    chomp($date);\r\n    push @dates , MF::DateTime->strptime( $date, \"%Y-%m-%d\");\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# æœ€åˆã¨æœ€å¾Œã®ãƒ‡ãƒ¼ã‚¿ã‚’ã¨ã£ã¦ä¸€è¦§è¡¨ã‚’ä½œæˆã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\n# start_date ã®æ±‚ã‚æ–¹ã¯ã€ä¾‹ã®ã•ã‹ã®ã¼ã‚‹æ–¹æ³•ã‚’ã¨ã‚‹:w\r\nmy $start_date = get_start_date( $dates[0], 4 );\r\nmy $end_date   = $dates[ scalar(@dates) - 1 ];\r\n#my $end_date   = MF::DateTime->last_day_of_month( year => $dates[ scalar(@dates) - 1 ]->year, month => $dates[ scalar(@dates) - 1 ]->month , day => 1 );\r\n\r\nwarn $start_date;\r\nwarn $end_date;\r\n\r\n\r\n# -------------------------------------------------------------------------\r\n# æ—¥ä»˜ã®Mapã‚’ä½œæˆã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nmy @split_dates;\r\nfor my $date (  DateTime::Event::Recurrence->daily->as_list( start => $start_date , end => $end_date ) ) {\r\n\r\n    next if( !@split_dates &&  $date->day_of_week == 3);\r\n    if( $date->day_of_week =~ /^(3|4)$/ ) {\r\n        push @split_dates , $date;\r\n        warn $date->ymd . \"\\t\". $date->day_of_week . \"\\n\";\r\n    }\r\n}\r\n\r\nmy @spans;\r\nfor( my $i = 0 ; $i < scalar @split_dates; $i++ ) {\r\n    if(  $split_dates[$i]->day_of_week == 4) {\r\n        push @spans , {\r\n            start => $split_dates[$i],\r\n            end   => ( $split_dates[$i+1] ) ?  $split_dates[$i+1] : $end_date,\r\n        }\r\n    }\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ã©ã®ç¯„å›²ã«ä½ç½®ã™ã‚‹ã‹ã‚’ãƒžãƒƒãƒ”ãƒ³ã‚°ã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nmy %result;\r\nfor my $date (@dates) {\r\n    for my $span ( @spans ) {\r\n        if(  $span->{start} <= $date and  $date <= $span->{end} ) {\r\n            $result{$span->{end}} .= $date;\r\n            last\r\n        }\r\n    }\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# çµæžœã‚’è¡¨ç¤ºã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nfor my $date (@dates) {\r\n    if( defined $result{$date} ) {\r\n        print \"SUM DATE:\" . $date .\"\\t\" . $result{$date} . \"\\n\";\r\n    }\r\n}\r\n\r\n\r\n__END__\r\n2007-05-02\r\n2007-06-02\r\n2007-06-03\r\n2007-06-04\r\n2007-06-05\r\n2007-06-06\r\n2007-06-07\r\n2007-06-08\r\n2007-06-09\r\n2007-06-10\r\n2007-06-11\r\n2007-06-12\r\n2007-06-13\r\n2007-06-14\r\n ','2007-07-27 16:31:26','2007-07-27 07:40:41'),(67,'ZGFGTP7POh','<< æ¼”ç®—å­ã€€','ruby','  1 lines  = []\r\n  2\r\n  3 hoge = \"hoge\"\r\n  4\r\n  5 lines << hoge\r\n  6\r\n  7 p lines\r\n\r\n\r\n[\"hoge\"]\r\n\r\n\r\n\r\nã“ã‚Œã¯ã€é…åˆ—ã«è¿½åŠ ã—ã¦ã„ã‚‹è¨˜æ³•ã€‚\r\n\r\npush @lines, $hoge;\r\n\r\n\r\nã“ã‚Œã¨ãŠã‚ã‚“ã˜ã€‚\r\n\r\n','2007-07-30 13:25:05','2007-07-30 04:25:05'),(68,'9jDOKfF1Ze','uniq ruby','ruby','\r\nArray#uniq! ã¨ã„ã†ç ´å£Šçš„ãªãƒ¡ã‚½ãƒƒãƒ‰ã€‚\r\n\r\né…åˆ—ã‚’ç ´å£Šçš„ã«ãƒ¦ãƒ‹ãƒ¼ã‚¯ã«ã™ã‚‹ã€‚\r\n\r\n\r\na = [30,20,50,30,10,10,40,50]\r\np a.uniq #=> [30, 20, 50, 10, 40]\r\n\r\na = [\"/tmp\",\"/home/\",\"/etc\",\"/tmp\"]\r\na.uniq! #=> [\"/tmp\", \"/home\", \"/etc\"]\r\n\r\n','2007-07-30 13:33:39','2007-07-30 04:33:39'),(69,'t8SX65MP36','hoge[1,2]','ruby','  1 hoge = \"hoge\"\r\n  2\r\n  3 p hoge[0,2]\r\n~\r\n\r\nçµæžœã¯ ho\r\n\r\n\r\nperl ã§ã„ã† substr\r\n\r\n','2007-07-30 16:33:07','2007-07-30 07:33:07'),(70,'KtYVmIDIlA','node','ruby ','  1 node = {}\r\n  2\r\n  3 a = \"hoge\"\r\n  4\r\n  5 node = node[a]\r\n  6\r\n  7 p node\r\n\r\n\r\nãƒãƒƒã‚·ãƒ¥ã«ä½•ã‹å…¥ã£ã¦ã‚‹ã¨ãã ã‘ã€åå¿œã™ã‚‹ã€‚\r\nã ã‹ã‚‰ã€æ®»ã®ã‚’ã‚„ã¤ã‚’ãƒã‚§ãƒƒã‚¯ã—ã¦ã„ã‚‹ã‚ã‘ã ã€‚\r\n\r\n\r\n  1 def longest_prefix_subword(str)\r\n  2     node = {}\r\n  3     result = nil\r\n  4     idx = 0\r\n  5     str.each_byte do |b|\r\n  6         #result = str[0,idx] if node.key?(:terminate)\r\n  7         #return result unless node.key?(b)\r\n  8         node = node[b]\r\n  9         idx += 1\r\n 10     end\r\n 11 p node\r\n 12     result = str if node.key?(:terminate)\r\n 13     result\r\n 14 end\r\n 15\r\n 16\r\n 17 str = \"Hello World\"\r\n 18\r\n 19 p longest_prefix_subword(str)\r\n\r\n\r\nå®Ÿéš›ã«è©¦ã—ã¦ã¿ãŸçµæžœã€ã©ã†ã‚‚ã“ã®è¨˜æ³•ã¯ nodeã¸ã€€{ b => b } ã‚’è¿½åŠ ã—ã¦ã„ã‚‹ã‚ˆã†ã«è¦‹å—ã‘ã‚‰ã‚Œã‚‹ã€‚\r\n\r\n','2007-07-30 16:53:25','2007-07-30 07:53:25'),(71,'JX1Shnhvgx','KTPTåˆ‡ã‚Šæ›¿ãˆ','works','â– ã€€åˆå‰ï¼æ™‚ã«\r\n\r\n	ãƒ»ã‚µãƒ¼ãƒãƒ¼ã®ã‚¢ã‚¯ã‚»ã‚¹ã‚’åœæ­¢ã•ã›ã‚‹ã€‚\r\n		ãƒ»perlbalã®å¤‰æ›´\r\n	ãƒ»\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nä¸‹è¨˜ã®ï¼’ã‚µã‚¤ãƒˆã‚’åœæ­¢ã•ã›ã‚‹ã€‚\r\n\r\nps ax|grep perlbal|awk \'{print $1}\'| xargs kill ; /usr/bin/perlbal --daemon\r\n\r\n# -------------------------------------------------------------------------\r\n# ãƒ‰ãƒ¡ã‚¤ãƒ³ã”ã¨ã®è¨­å®š\r\n#\r\n# -------------------------------------------------------------------------\r\nCREATE SERVICE zktpt\r\n    SET role            = reverse_proxy\r\n    SET pool            = maintenance_pool\r\n    #SET pool            = ktptz_pool\r\nENABLE zktpt\r\n\r\nCREATE SERVICE ktpt_oem\r\n    SET role            = reverse_proxy\r\n    SET pool            = maintenance_pool\r\n    #SET pool            = ktpt_oem_pool\r\nENABLE ktpt_oem\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\n# action fix\r\n/usr/local/mf/zeny/script/cron/action_fix.pl --db-name=ktptz\r\n/usr/local/mf/zeny/script/cron/action_fix.pl --db-name=ktpt_oem\r\n\r\n# ranking\r\n/usr/local/mf/zeny/script/cron/ranking.pl --db-name=ktptz     --site-name=ktptz       --campaign_id=6\r\n/usr/local/mf/zeny/script/cron/ranking.pl --db-name=ktpt_oem  --site-name=point_ex    --campaign_id=20\r\n\r\n# æ›é‡‘\r\n/usr/local/mf/zeny/script/maintenance/exchange.pl --db-name=ktptz    --site-name=ktptz  --campaign_id=6\r\n/usr/local/mf/zeny/script/maintenance/exchange.pl --db-name=ktpt_oem --site-name=point_ex    --campaign_id=20\r\n\r\n\r\n# è³žé‡‘\r\n/usr/local/mf/zeny/script/maintenance/prize.pl --db-name=ktpt_oem --site-name=point_ex --campaign_id=20 --cond=/usr/local/mf/zeny/script/maintenance/prize/p_ex.yaml\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-08-01 00:42:58','2007-07-31 15:42:58'),(72,'l7oyC6PXgz','uta ã‚«ã‚¦ãƒ³ãƒˆ','works','use strict;\r\nuse lib qw( /usr/local/mf/site_perl );\r\nuse UtaKami::Data::Melop;\r\n\r\n# -------------------------------------------------------------------------\r\n# Uta ã®æ›²æ•°ã‚’ã‚«ã‚¦ãƒ³ãƒˆã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\n\r\nmy $delete_words = join( \'|\',\r\n    (\r\n        \'ï½žTrance Mixï½ž\',\r\n        \'ï½žç€ï½¶ï¾Šï¾žï½¥ï½µï½½ï½½ï¾’ï½¶ï½¯ï¾„ï½ž\',\r\n        \'ï½žï½¼ï¾žï½¬ï½½ï¾žï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\',\r\n        \'ï½žã¾ã‚‹ã”ã¨ç€ï½¶ï¾Šï¾žï½ž\',\r\n        \'ï½žï½±ï½¶ï¾ï¾Ÿï¾—å”„ã„ã ã—ï½ž\',\r\n        \'ï½žï½±ï½¶ï¾ï¾Ÿï¾—ï½¥å”„ã„å‡ºã—ï½ž\',\r\n        \'ï½žR&B Remixï½ž\',\r\n        \'ï½žä¾Jazz Remixï½ž\',\r\n        \'ï½žCountry Remixï½ž\',\r\n        \'ï½žæœªçŸ¥ã¨ã®é­é‡Remixï½ž\',\r\n        \'ï½žPunky Punch Remixï½ž\',\r\n        \'ï½žãŠè‰²æ°—ã‚€ã‚“ã‚€ã‚“Remixï½ž\',\r\n        \"ï½žHiphop Remixï½ž\",\r\n        \"ï½žï¾‹ï¾Ÿï¾ï¾‹ï¾Ÿï¾Remixï½ž\",\r\n        \"ï½žReggae Remixï½ž\",\r\n        \'ï½žæœ€å¼·ã®JAZZï¾„ï¾˜ï½µ+@ Remixï½ž\',\r\n        \"ï½žå¸¸å¤ã®ï½¸ï¾˜ï½½ï¾ï½½ Remixï½ž\",\r\n        \"ï½žç€ï½¶ï¾Šï¾žãƒ»ï½µï½½ï½½ï¾’ï½¶ï½¯ï¾„ï½ž\",\r\n        \"ï½žç€ï½¶ï¾Šï¾žï½¥ï½²ï¾ï¾„ï¾›ï½ž\",\r\n        \"ï½žï¾›ï¾ï½¸ï¾žï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žï¾›ï¾ï½¸ï¾žï½¥ï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žï¾›ï¾ï½¸ï¾žãƒ»ï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žï¾šï½¹ï¾žï½´ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½±ï½ºï½°ï½½ï¾ƒï½¨ï½¯ï½¸ï½·ï¾žï¾€ï½°ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾‹ï¾Ÿï½±ï¾‰ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žå’Œé¢¨ Remixï½ž\",\r\n        \"ï½žã¾ã‚‹ã”ã¨ï½¥ï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ï½¥ï½µï½½ï½½ï¾’ï½¶ï½¯ï¾„ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ãƒ»å”„ã„ã ã—ï½ž\",\r\n        \"ï½žExclusive Remixï½ž\",\r\n        \"ï½ž18ç¦ï½´ï¾›ï½½Remixï½ž\",\r\n        \"ï½žè¶…ï¾˜ï½±ï¾™ï½µï¾™ï½ºï¾žï½°ï¾™ï½ž\",\r\n        \"ï½žï¾›ï¾ï½¸ï¾žï½¥ç€ï½¶ï¾Šï¾žï½ž\",\r\n        \"ï½žæœ€å¼·ã®JAZZï¾„ï¾˜ï½µ+@ Remixï½ž\",\r\n        \"ï½žæ‹ã™ã‚‹ï¾Šï¾†ï½¶ï¾ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ãƒ»å”„ã„ã ã—ï½ž\",\r\n        \"ï½žæ˜”ã®æ­Œè¬¡æ›²ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žç€ï½¶ï¾Šï¾žï½ž\",\r\n        \"ï½žï½µï¾™ï½ºï¾žï½°ï¾™ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾Žï¾žï½²ï½½ï¾ï½ªï¾ï½¼ï¾žï½ž\",\r\n        \"ï½žRemixï½ž\",\r\n        \"ï½žRock Remixï½ž\",\r\n        \"ï½žã¾ã‚‹ã”ã¨ï½±ï½¶ï¾ï¾Ÿï¾—ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ï½¥å”„ã„ã ã—ï½ž\",\r\n        \"ï½žï½±ï½¶ï¾ï¾Ÿï¾—ãƒ»ï½µï½½ï½½ï¾’ï½¶ï½¯ï¾„ï½ž\",\r\n        \"ï½žç€ï½¶ï¾Šï¾žãƒ»ï½²ï¾ï¾„ï¾›ï½ž\",\r\n        \"ï½žï¾›ï¾ï½¸ï¾žç€ï½¶ï¾Šï¾žï½ž\",\r\n        \"ï½žï¾œï½²ï¾Šï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žPiano Remixï½ž\",\r\n        \"ï½žHipHop Remixï½ž\",\r\n        \"ï½žTrance Remixï½ž\",\r\n        \"ï½žéŸ³ç—´ï½ž\",\r\n        \'ï½žï½µï¾™ï½ºï¾žï½°ï¾™ï½ž\',\r\n        \"ï½ž\'06ï½³ï¾žï½§ï½°ï½¼ï¾žï½®ï¾\",\r\n    )\r\n);\r\n\r\nmy $itr = UtaKami::Data::Contents->retrieve_from_sql(\r\n    q{\r\n        type = \'uta\'             AND\r\n        genre NOT LIKE \'%moe%\'   AND\r\n        genre NOT LIKE \'%intro%\'\r\n    }\r\n);\r\n\r\n\r\nmy %melody;\r\nwhile( ( my $contents = $itr->next)  ) {\r\n    my $title = $contents->title;\r\n    $title =~ s/($delete_words|\\(ï½µï¾™ï½ºï¾žï½°ï¾™\\)|\\(euro a.c remix\\)|\\(Remix\\)|\\(MOVIE ver.\\)|\\(ï½¼ï½®ï½°ï¾„\\))//;\r\n    $title =~ s/ï¾„ï¾œï½²ï¾—ï½²ï¾„ï½žç€ï½¶ï¾Šï¾ž/ï¾„ï¾œï½²ï¾—ï½²ï¾„/;\r\n    $melody{$title}++;\r\n}\r\n\r\nfor my $key ( keys %melody ) {\r\n    if( $key ) {\r\n        warn $key;\r\n        print $key . \"\\n\";\r\n    }\r\n}\r\n\r\nprint scalar( keys %melody ) . \"å›ž\\n\";\r\n','2007-08-01 12:52:53','2007-08-01 03:52:53'),(73,'Dpfhxr8Hyw','melo ã‚«ã‚¦ãƒ³ãƒˆ','works','use strict;\r\nuse lib qw( /usr/local/mf/site_perl );\r\nuse UtaKami::Data::Melop;\r\n\r\n# -------------------------------------------------------------------------\r\n# melody ã®æ›²æ•°ã‚’ã‚«ã‚¦ãƒ³ãƒˆã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\n\r\nmy $delete_words = join( \'|\',\r\n    (\r\n        \'ï½ž2å€é€Ÿï½ž\',\r\n        \'ï½žTrance Remixï½ž\',\r\n        \'Remix Versionï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\',\r\n        \'ï½žï¾•ï½°ï¾›remixï½ž2å€é€Ÿï½ž\',\r\n        \'ï½žï¾•ï½°ï¾›remixï½ž4å€é€Ÿï½ž\',\r\n        \'ï½žï¾•ï½°ï¾›remixï½žï½½ï¾›ï½°ï¾ƒï¾ï¾Žï¾Ÿï½ž\',\r\n        \'ï½žTrance Remixï½ž\',\r\n        \'ï½žPiano Remixï½ž\',\r\n        \'ï½žRock Remixï½ž\',\r\n        \'ï½žHipHop Remixï½ž\',\r\n        \'ï½žTrance Remixï½ž\',\r\n        \"ï½ž\'06ï½³ï¾žï½§ï½°ï½¼ï¾žï½®ï¾ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\",\r\n        \'ï½ž4å€é€Ÿï½ž\',\r\n        \'ï½žã“ã¡äº€ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\',\r\n        \"ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\",\r\n        \"ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\",\r\n        \"ï½žæ¥µï¾’ï¾›ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾šï½¹ï¾žï½´ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½½ï½°ï¾Šï¾Ÿï½°ï¾„ï¾—ï¾ï½½Remixï½ž\",\r\n        \"ï½žR&Bï½¿ï½³ï¾™Remixï½ž\",\r\n        \"ï½žï¾„ï¾žæ¼”æ­ŒRemixï½ž\",\r\n        \"ï½žï¾Šï½²ï¾Šï¾Ÿï½°ï¾•ï½°ï¾›ï¾‹ï¾žï½°ï¾„Remixï½ž\",\r\n        \"ï½žå­ç‰›ã‚’ã®ã›ã¦ï½žï¾‰ï¾˜ï¾‰ï¾˜ï¾•ï½°ï¾›ï¾‹ï¾žï½°ï¾„Remix\",\r\n        \"ï½žï¾„ï¾—ï¾ï½½remixï½ž\",\r\n        \"ï½žã—ã£ã¨ã‚Šï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žæ˜”ã®æ­Œè¬¡æ›²ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾‹ï¾Ÿï½±ï¾‰ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½¼ï¾žï½¬ï½½ï¾žï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½½ï½¶ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žR&BRemixï½ž\",\r\n        \"ï½žï½²ï¾€ï¾€ï¾€ï¾€REMIXæ¥µï¾’ï¾›ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½²ï¾€ï¾€ï¾€ï¾€REMIXï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žTrance Remixï½ž\",\r\n        \"ï½žReggae Remixï½ž\",\r\n        \"ï½žRock Remixï½ž\",\r\n        \"ï½žï½µï¾™ï½ºï¾žï½°ï¾™ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï¾€ï¾žï½»ï¾’ï¾›ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\",\r\n        \"ï½žï½¼ï½®ï½°ï¾„ï½ž\",\r\n        \"ï½ž\'06ï½³ï¾žï½§ï½°ï½¼ï¾žï½®ï¾\",\r\n        \"ï½žï½½ï¾›ï½°ï¾ƒï¾ï¾Žï¾Ÿï½ž\",\r\n    )\r\n);\r\n\r\nmy $itr = UtaKami::Data::Contents->retrieve_from_sql(\r\n    q{\r\n        type = \'melody\' AND\r\n        genre NOT LIKE \'%kmelo%\'\r\n    }\r\n);\r\n\r\n\r\nmy %melody;\r\nwhile( ( my $contents = $itr->next)  ) {\r\n    my $title = $contents->title;\r\n    $title =~ s/ã€Œæƒ‘æ˜Ÿã€ã‚ˆã‚Šæœ¨æ˜ŸRemixï½žæ¥µï¾’ï¾›ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž/ã€Œæƒ‘æ˜Ÿã€ã‚ˆã‚Šæœ¨æ˜Ÿ/;\r\n    $title =~ s/($delete_words|\\(ï½µï¾™ï½ºï¾žï½°ï¾™\\)|\\(euro a.c remix\\)|\\(Remix\\)|\\(MOVIE ver.\\)|\\(ï½¼ï½®ï½°ï¾„\\))//;\r\n    $title =~ s/ï½´ï¾šï½¸ï¾„ï¾˜ï½¶ï¾™ï¾Šï¾Ÿï¾šï½°ï¾„ï¾žï½žTrance Remixï½ž/ï½´ï¾šï½¸ï¾„ï¾˜ï½¶ï¾™ï¾Šï¾Ÿï¾šï½°ï¾„ï¾ž/;\r\n    $melody{$title}++;\r\n}\r\n\r\nfor my $key ( keys %melody ) {\r\n    if( $key ) {\r\n        warn $key;\r\n        print $key . \"\\n\";\r\n    }\r\n}\r\n\r\n\r\nprint scalar( keys %melody ) . \"å›ž\\n\";\r\n\r\n\r\n\r\n\r\n','2007-08-01 12:54:15','2007-08-01 03:54:15'),(74,'oelC36lcqi','MySQL ãƒ¬ãƒ—ãƒªã‚±ãƒ¼ã‚·ãƒ§ãƒ³','MySQL','ä¸‹è¨˜ã§ç¢ºèª\r\n\r\n> SHOW SLAVE STATUS \\G\r\n\r\nLast_Errorã‚’ç¢ºèªã—ãŸã‚‰ä¸‹è¨˜ã§å†é–‹ã•ã›ã‚‹ã€‚\r\n\r\n> SET GROBAL SQL_SLAVE_SKIP_COUNTER=1;\r\n> SLAVE START;\r\n\r\n\r\n\r\np159 ã€Œç°ãƒ‘ãƒ•ã‚©ãƒ¼ãƒžãƒ³ã‚¹SQLã€','2007-08-01 14:36:46','2007-08-01 05:36:46'),(75,'BVi1mNOvmR','RENAME TABLE','MySQL','ãƒ†ãƒ¼ãƒ–ãƒ«ã®ãƒ¬ãƒ—ãƒªã‚±ãƒ¼ã‚·ãƒ§ãƒ³ã‚’ã‚„ã‚Šã¾ã™ã€‚\r\n\r\nï¼‘ï¼Žã‚‚ã¨ã®ãƒ†ãƒ¼ãƒ–ãƒ«ã‚’æ–°ã—ã„ãƒ†ãƒ¼ãƒ–ãƒ«ã¸ renameã—ã¾ã™ã€‚\r\n\r\nRENAME TABLE click_log TO click_log_2007_008;  \r\n\r\nï¼’ï¼Žæ–°ã—ã„ãƒ†ãƒ¼ãƒ–ãƒ«ã‚’ä½œæˆã—ã¾ã™ã€‚\r\n\r\nCREATE TABLE `click_log` (\r\n  `id` int(10) unsigned NOT NULL auto_increment,\r\n  `date` date NOT NULL default \'0000-00-00\',\r\n  `session_id` varchar(10) default NULL,\r\n  `carrier` enum(\'I\',\'E\',\'V\') NOT NULL default \'I\',\r\n  `client_id` int(10) unsigned NOT NULL default \'0\',\r\n  `ad_id` int(10) unsigned NOT NULL default \'0\',\r\n  `host_id` int(10) unsigned NOT NULL default \'0\',\r\n  `host_site_id` int(10) unsigned NOT NULL default \'0\',\r\n  `host_unique_id` varchar(255) default NULL,\r\n  `mobile_id` varchar(255) default NULL,\r\n  `dup_fg` tinyint(4) NOT NULL default \'0\',\r\n  `click_gross` decimal(10,2) unsigned NOT NULL default \'0.00\',\r\n  `click_net` decimal(10,2) unsigned NOT NULL default \'0.00\',\r\n  `click_date` datetime NOT NULL default \'0000-00-00 00:00:00\',\r\n  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,\r\n  PRIMARY KEY  (`id`),\r\n  UNIQUE KEY `uniq_rid` (`session_id`),\r\n  KEY `ad_id` (`ad_id`,`click_date`,`mobile_id`),\r\n  KEY `click_dup_check` (`ad_id`,`date`,`mobile_id`)\r\n);  \r\n\r\n\r\nï¼“ï¼Žä»–ã®DBã¸ã‚‚DBåã‚’æŒ‡å®šã™ã‚‹ã¨RENAMEãƒ†ãƒ¼ãƒ–ãƒ«ã§ã‚³ãƒ”ãƒ¼ã§ãã¾ã™ã€‚\r\n\r\nRENAME TABLE click_log_2007_002 TO aduky_old_log.click_log_2007_002;\r\n\r\n ','2007-08-01 14:43:17','2007-08-01 08:02:55'),(76,'vPIVtWy8Wn','JOIN DATE SQL','SQL','ï¼‘ï¼Žã¨ã‚Šã‚ãˆãšã€æŒ‡å®šã—ãŸç¯„å›²ã®ã‚„ã¤ã¯å–ã‚ŒãŸ\r\n\r\n\r\nSELECT * FROM member WHERE DATE_FORMAT(\'2007-04-24\', \'%Y-%m-%d\') <= regist_date AND (delete_date IS NULL OR  DATE_FORMAT(\'2007-04-24\', \'%Y-%m-%d\') < delete_date  );\r\n\r\n\r\nSELECT \r\n   \r\n\r\n\r\n','2007-08-01 20:09:13','2007-08-01 11:09:13'),(77,'uEy8xKeBal','æ©Ÿç¨®æƒ…å ±æ›´æ–°','works','UtaConfig ã«ã‚ã‚‹ utaconfig/script/agent.sh ã‚’ 052ã§å®Ÿè¡Œã›ã‚ˆã€‚','2007-08-03 15:42:10','2007-08-03 06:42:10'),(78,'Fk27HCmLAB','JSON ã«ã‚ˆã‚‹ãƒ‡ãƒ¼ã‚¿å–å¾—','perl','use strict;\r\nuse warnings;\r\n\r\nuse Data::Dumper;\r\nuse URI;\r\nuse LWP::UserAgent;\r\nuse JSON::Syck;\r\n\r\nmy $host  = \"enquete.yamanaka.t2.mfac.jp\";\r\nmy $path  = \"/json/enquete/get\";\r\n\r\nmy %hash  = (\r\n    enquete_rid => \'1eSer6lvgX\',\r\n);\r\n\r\nmy $query = join( \'&\', map { \"@{[$_]}=@{[$hash{$_}]}\" } keys %hash );\r\nmy $ua = LWP::UserAgent->new;\r\nmy $url = \"http://\".$host.$path .\"?\". $query ;\r\n\r\nmy $response  = $ua->get( $url );\r\n\r\nif ($response->is_success) {\r\n    my $data = JSON::Syck::Load($response->content);\r\n    warn Dumper $data;\r\n}\r\nelse {\r\n    die $response->status_line;\r\n}\r\n','2007-08-03 18:57:51','2007-08-03 09:57:51'),(79,'erGjnrbqfV','ã‚³ãƒ¼ã‚¹åºƒå‘Šã«ã¤ã„ã¦','works','ã€€åºƒå‘Šã®ã€Œä¾¡æ ¼è¨­å®šã®å¤‰æ›´ã€ã‹ã‚‰ã¯å¤‰æ›´ã™ã‚‹ã“ã¨ãŒã§ããªã„ã€‚ã“ã“ã®ä»•æ§˜ã‚’è¦‹ã¦ã„ã‚‹é™ã‚Šã‚³ãƒ¼ã‚¹åºƒå‘Šã¯grossã‚’è¨­å®šã™ã‚‹ã“ã¨ãŒå‡ºæ¥ãªã„ã€‚\r\n\r\nåºƒå‘Šä¸€è¦§ã®è©²å½“åºƒå‘Šã®\r\n\r\nã€Œã‚³ãƒ¼ã‚¹ä¸€è¦§ã€\r\n\r\n\r\n ','2007-08-06 13:08:42','2007-08-06 04:32:35'),(80,'1SmuJyC22l','ãƒ­ãƒ¼ã‚«ãƒ«DNS','works','12:40:19 takefumi   > xxx.localã£ã¦ã„ã†ã®ãŒã€è¨­å®šã•ã‚Œã¦ã„ã‚‹é¢¨å‘³ãªã®ã§ã€ãã‚Œã«ä¹—ã£ã‹ã£ã¦ smtp.local ã£ã¦ã®ã‚’ã¤ãã‚Šã¾ã—ãŸï¼œIDCãƒ­ãƒ¼ãƒ«DNS\r\n12:40:19 takefumi   > mf109ã«è¨­å®šã•ã‚Œã¦ã„ã¾ã™ã€‚DNSã®ç§»è¡Œæ™‚ï¼ˆã‚ã‚‹ã®ã‹ï¼Ÿï¼‰åå‰å«ã‚ã¦ã‚µãƒ¼ãƒã®ã‚ã‚Šæ–¹ã‚’è€ƒãˆç›´ã—ã¾ã™ãŒã€å–ã‚Šæ€¥ãŽã“ã‚Œã§ã€å…¨ã‚µãƒ¼ãƒè¨­å®šã—ã¾ã™ã€‚\r\n12:40:19 takefumi   > ãªã®ã§ã€gj034ãŒã¶ã£å£Šã‚ŒãŸã¨ãã«ã¯ã€mf109ã®DNSã‚‚ç›´ã™ã“ã¨ã‚’å¿˜ã‚Œãªã„ã‚ˆã†ã«ã—ã¦ãã ã•ã„ã¾ã›ãƒ¼ã€‚\r\n12:40:19 takefumi   > ï¼žé–‹ç™ºALL','2007-08-07 12:41:26','2007-08-07 03:41:26'),(81,'9SNW94fior','EnqueteOEM','works','package AniTen::Command::Enquete;\r\n# -------------------------------------------------------------------------\r\n# ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆOEMæ©Ÿèƒ½ã‚’ä½¿ã„ã¾ã™ã€‚\r\n#\r\n# -------------------------------------------------------------------------\r\nuse strict;\r\nuse warnings;\r\nuse base qw/AniTen::Command/;\r\n\r\nuse URI;\r\nuse URI::Escape;\r\nuse JSON::Syck;\r\nuse Data::Dumper;\r\nuse LWP::UserAgent;\r\n\r\nsub _agent {\r\n    my $self = shift;\r\n\r\n    return LWP::UserAgent->new( agent => \"aniten @{[ __PACKAGE__ ]}\" );\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®è³ªå•äº‹é …ã‚’å¾—ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nsub get {\r\n    my $self = shift;\r\n\r\n    # -------------------------------------------------------------------------\r\n    # ãƒªã‚¯ã‚¨ã‚¹ãƒˆã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\n    # -------------------------------------------------------------------------\r\n    my $uri  = URI->new;\r\n    {\r\n        $uri->scheme(\'http\');\r\n        $uri->host( $self->config->enquete->{host} );\r\n        $uri->path( $self->config->enquete->{path}->{get} );\r\n        $uri->query_form(\r\n            enquete_rid => $self->{enquete_rid},\r\n        );\r\n    }\r\n\r\n    # -------------------------------------------------------------------------\r\n    # ãƒªã‚¯ã‚¨ã‚¹ãƒˆã™ã‚‹ãœ\r\n    # -------------------------------------------------------------------------\r\n    my $ua = $self->_agent;\r\n    my $response  = $ua->get( $uri->as_string );\r\n\r\n    if ($response->is_success) {\r\n        my $data = JSON::Syck::Load($response->content);\r\n        return $data;\r\n    }\r\n    else {\r\n        die $response->status_line;\r\n    }\r\n}\r\n\r\n# -------------------------------------------------------------------------\r\n# ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®çµæžœã‚’é€ä¿¡ã™ã‚‹\r\n#\r\n# -------------------------------------------------------------------------\r\nsub send {\r\n    my $self = shift;\r\n\r\n    # -------------------------------------------------------------------------\r\n    # ãƒªã‚¯ã‚¨ã‚¹ãƒˆã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\n    # -------------------------------------------------------------------------\r\n    my $uri  = URI->new;\r\n    {\r\n        $uri->scheme(\'http\');\r\n        $uri->host( $self->config->enquete->{host} );\r\n        $uri->path( $self->config->enquete->{path}->{answer} );\r\n        $uri->query_form(\r\n            enquete_rid => $self->{enquete_rid},\r\n            dev_token   => $self->config->enquete->{dev_token},\r\n            unique_key  => $self->{unique_key},\r\n        );\r\n    }\r\n    # -------------------------------------------------------------------------\r\n    # ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®å›žç­” queryç”Ÿæˆ\r\n    # -------------------------------------------------------------------------\r\n    my $query = {};\r\n    while ( my ( $enquete_item_rid, $answer ) = each %{$self->{answer}} ) {\r\n        $query->{\"enquete_answer_detail.$enquete_item_rid\"} = $answer;\r\n    }\r\n\r\n    my $ua = $self->_agent;\r\n    my $res = $ua->post( $uri->as_string, $query );\r\n\r\n    unless( $res->is_success ) {\r\n        $self->mfwarn(\"Enquete post failed\". %{$query} );\r\n    }\r\n    else {\r\n        warn $res->content;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-08-07 17:09:37','2007-08-07 08:09:37'),(82,'ZlUPEei8LI','memcache','works','[yamanaka@gj053.mfac.jp]$ telnet 192.168.200.126 11211\r\nTrying 192.168.200.126...\r\nConnected to 192.168.200.126.\r\nEscape character is \'^]\'.\r\nget Zeny_register_L8RCeL5SiW\r\nEND\r\nstats\r\nSTAT pid 1606\r\nSTAT uptime 30969045\r\nSTAT time 1186484748\r\nSTAT version 1.1.12\r\nSTAT rusage_user 349.952799\r\nSTAT rusage_system 745.413679\r\nSTAT curr_items 14708\r\nSTAT total_items 7154503\r\nSTAT bytes 1957890\r\nSTAT curr_connections 158\r\nSTAT total_connections 681898\r\nSTAT connection_structures 290\r\nSTAT cmd_get 23606854\r\nSTAT cmd_set 7154503\r\nSTAT get_hits 23425200\r\nSTAT get_misses 181654\r\nSTAT bytes_read 2186304326\r\nSTAT bytes_written 3549878967\r\nSTAT limit_maxbytes 67108864\r\nEND\r\nquit\r\n\r\n\r\nhttp://d.hatena.ne.jp/zankey/20070713','2007-08-07 20:05:02','2007-08-07 11:05:02'),(83,'230tKOAoEv','ã‚ã‚“ã‘ãƒ¼ã¨ã“ã†ã‚‚ã','works','sub enquete_params {\r\n    my $class = shift;\r\n\r\n    return (\r\n        { name => \'sound_quality\',    title  => \"éŸ³è³ªãŒæ‚ªã„\"              },\r\n        { name => \'search_difficult\', title  => \'æ›²ãŒæŽ¢ã—ã¥ã‚‰ã„\'          },\r\n        { name => \'no_music\',         title  => \'æ¬²ã—ã„æ›²ãŒãªã„\'          },\r\n        { name => \'hate_design\',      title  => \'ã‚µã‚¤ãƒˆã®ãƒ‡ã‚¶ã‚¤ãƒ³ãŒå«Œã„\'  },\r\n        { name => \'small_corner\',     title  => \'ã‚³ãƒ¼ãƒŠãƒ¼ãŒå°‘ãªã„\'        },\r\n        { name => \'re_entry\',         title  => \'é€€ä¼šå¾Œï½¤å†åº¦å…¥ä¼šã™ã‚‹äºˆå®š\' },\r\n        { name => \'others\',           title  => \'ãã®ä»–ã€€ã”æ„è¦‹ï½¥ã”è¦æœ›\'   },\r\n    );\r\n}\r\n\r\næ›¸ãæ›ãˆã®éš›ã®SQL\r\n\r\n\r\nSELECT\r\n    COUNT(sound_quality)     AS sound_quality,\r\n    COUNT(search_difficult)  AS search_difficult ,\r\n    COUNT(no_music)          AS no_music ,\r\n    COUNT(hate_design)       AS hate_design,\r\n    COUNT(small_corner)      AS small_corner ,\r\n    COUNT(re_entry)          AS re_entry ,\r\n    COUNT(etc)               AS etc\r\nFROM\r\n    enquete\r\nWHERE\r\n    DATE_FORMAT(timestamp, \'%Y-%m-%d\') = \'2007-08-08\'\r\n','2007-08-07 21:37:13','2007-08-08 08:36:56'),(84,'qXBi8wHTyy','ç”»åƒå½¢å¼å¤‰æ›','shell','ImageMagic\r\n\r\nconvert input.jpg output.png','2007-08-09 17:35:15','2007-08-09 08:35:15'),(85,'thEF9MMHbe','ãã‚ã‚ã‚ã¯ã‚“ã¦ã„','works','use strict;\r\nuse UtaKami::Data::Melop;\r\n\r\nmy $uid = $ARGV[0] || 19300 ;\r\n\r\nmy $contents = UtaKami::Data::Contents->retrieve( $uid );\r\nmy $name     = \'KC2A\';#\'SH33\';\r\n\r\nmy $is_kiwa       = ( $contents->genre =~ /kiwa/ ) ? 1 : 0 ;\r\nmy $is_kiwa_agent = UtaKami::Data::Agent->search(\r\n        type => \'ez40\',\r\n        name => $name,\r\n)->first ? 1 : 0,\r\n\r\n\r\nwarn $is_kiwa;\r\nwarn $is_kiwa_agent;\r\n\r\nif( $is_kiwa == 1 and $is_kiwa_agent == 0) {\r\n    print \"æ¥µã‚ã‚ã§ä¸”ã¤æ¥µã‚ã‚å¯¾å¿œæ©Ÿç¨®ã˜ã‚ƒãªã„ã®ã§DLã§ããªã„ã‚ˆ\\n\";\r\n}\r\n~\r\n','2007-08-14 12:46:50','2007-08-14 03:46:50'),(86,'XRuzFNaGSd','ç€ãƒ¡ãƒ­DLå¾Œã®é·ç§»ãŒãŠã‹ã—ã„','works','http://www.au.kddi.com/ezfactory/tec/tag/09.html\r\n\r\n<a task=\"gosub\" .....> \r\n\r\nã§ãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ã‚’ã†ã¾ãæŒ‡å®šã—ãªã„ã¨ okã‚’ãŠã—ã¦ã‚‚å¤‰ãªé¢¨ã«ãªã‚‹ã€‚','2007-08-14 17:02:46','2007-08-14 08:02:46'),(87,'knvUCnCeMh','Template Toolkit','perl','use strict;\r\nuse warnings;\r\n\r\nuse Template;\r\n\r\nmy $data = join(\"\",<DATA>);\r\nmy $template = Template->new({});\r\n$template->process(\r\n    \\$data,\r\n    {\r\n        hoge => [qw/1 2 3 4/],\r\n    }\r\n) || die;\r\n\r\n__END__\r\n[%- FOR v IN hoge %]\r\n[[% v %]][% loop.count %]\r\n[%- END %]\r\n~\r\n~\r\n~\r\n~\r\n~\r\n~\r\n','2007-08-15 09:44:43','2007-08-15 00:44:43'),(88,'eJIaSVip8p','Lingua::JA::Romaji','perl','use strict;\r\nuse warnings;\r\nuse Lingua::JA::Romaji qw/kanatoromaji/;\r\n\r\nmy $kana = \"ã‹ãª\";\r\n\r\nprint  kanatoromaji($kana);\r\n\r\n','2007-08-15 10:06:31','2007-08-15 01:06:31'),(89,'wPy3eZDyzA','artistä¸€è¦§ã®ãƒ†ã‚¹ãƒˆ','works','>>\r\npackage JukeBox::Script::Hoge;\r\nuse strict;\r\nuse warnings;\r\nuse base \'JukeBox::Script\';\r\n\r\nuse Lingua::JA::Romaji qw/romajitokana kanatoromaji/;\r\nuse Data::Dumper;\r\n\r\nsub run {\r\n    my ($self,) = @_;\r\n\r\n    my $artist = $self->model_slave(\'Artist\')->search({},{\'order_by\' => \'me.name_kana ASC\'});\r\n\r\n    warn Dumper    {\r\n            data => [\r\n                map {\r\n                    +{\r\n                        rid         => $_->rid,\r\n                        name        => $_->name,\r\n                        name_kana   => $_->name_kana,\r\n                        name_romaji => kanatoromaji($_->name_kana) || undef,\r\n                        description => $_->description,\r\n                    }\r\n                } $artist->all\r\n            ]\r\n        };\r\n}\r\n\r\npackage main;\r\n\r\nJukeBox::Script::Hoge->new->run;\r\n\r\n1;\r\n<< ','2007-08-15 11:15:56','2007-08-19 11:55:20'),(90,'590sszepuf','Form.serialize','javascript','Form.serializeã€€ã£ã¦ãªã‚“ã˜ã‚ƒã‚‰ã»ã„ã¨æ€ã£ãŸã‚‰ã€\r\nãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ç”Ÿæˆã—ã¦ãã‚Œã‚‹å›ã ã£ãŸã®ã­ã€‚\r\n\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<title>ãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ã‚’æŒ‡å®šã™ã‚‹</title>\r\n<script type=\"text/javascript\" src=\"prototype.js\"></script>\r\n<script type=\"text/javascript\"><!--\r\nfunction loadUrlFile()\r\n{\r\nnew Ajax.Request(\"curl.rb\", {\r\nmethod: \'get\',\r\nparameters: Form.serialize(\"ajaxForm\"),\r\nonComplete: displayData });\r\n}\r\nfunction displayData(httpObj)\r\n{\r\n$(\"result\").innerHTML = httpObj.responseText;\r\n}\r\n// --></script>\r\n</head>\r\n<body>\r\n<h1>ãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ã‚’æŒ‡å®šã™ã‚‹</h1>\r\n<form id=\"ajaxForm\">\r\n<input type=\"text\" value=\"http://www.openspc2.org/\" name=\"sURL\" size=\"40\"><br>\r\n<input type=\"button\" value=\"ãƒ•ã‚¡ã‚¤ãƒ«ã‚’èª­ã¿è¾¼ã¿è¡¨ç¤ºã™ã‚‹\" onClick=\"loadUrlFile()\"><br>\r\n</form>\r\n<div id=\"result\"></div>\r\n</body>\r\n</html>','2007-08-15 13:00:23','2007-08-15 04:00:23'),(91,'Cil1f3389d','decotan èª¿æŸ»','works','use strict;\r\nuse warnings;\r\n\r\nuse DBI;\r\nuse Data::Dumper;\r\nuse MF::DateTime;\r\nuse YAML::Syck;\r\nuse MF::LogOpen;\r\nuse MF::LogParser;\r\nuse URI;\r\nuse CGI;\r\nuse Text::CSV_XS;\r\nuse List::Util qw/sum/;\r\n\r\nmy @servers               = qw/141 142 183 184 185 186/;\r\nmy $log_filename_template = \'/var/log/apache/combined_log/%Y/%Y_%m/%Y_%m%d/combined.%Y_%m%d.log.gj<<HOST>>\';\r\n\r\nsub run {\r\n    my $date = shift;\r\n\r\n    my $dbh  = DBI->connect(\"dbi:mysql:phoenix_decotan;hostname=192.168.200.102;mysql_read_default_file=/etc/mysql/my.cnf;\",\"mf\",\"k4Dhl2e\");\r\n\r\n\r\n    my $result;\r\n    for my $host ( @servers ) {\r\n        ( my $fname = $date->strftime( $log_filename_template ))\r\n            =~ s/<<HOST>>/sprintf \'%03d\', $host/e;\r\n\r\n        my $file = MF::LogOpen->open_log($fname);\r\n        while (my $line = <$file>) {\r\n\r\n            next unless $line =~ /^decotan\\.jp/;\r\n            my $log = MF::LogParser->parse($line);\r\n            next if( $log->{referer} eq \'-\'  );\r\n            if( my $path = URI->new( $log->{file} )->path ) {\r\n\r\n                # -------------------------------------------------------------------------\r\n                # ä¼šå“¡ã¨éžä¼šå“¡ãƒ¦ãƒ‹ãƒ¼ã‚¯æ•°GET\r\n                # -------------------------------------------------------------------------\r\n                if( $path =~ m{/decomail/synthesis/} ) {\r\n\r\n                    # referer ãŒ / ãªã‚‰TOPã‹ã‚‰ãã¨ã®ã“ã¨\r\n                    my $referer_path = URI->new( $log->{referer} )->path;\r\n                    if( $referer_path eq \'/\' ) {\r\n                        my $sth = $dbh->prepare( \"SELECT * FROM member WHERE mobile_id = ? \");\r\n                        $sth->execute($log->{subno});\r\n                        # ä¼šå“¡ã¨éžä¼šå“¡ãƒ¦ãƒ‹ãƒ¼ã‚¯æ•°ã‚’Getã™ã‚‹ãœ\r\n                        if( my $member = $sth->fetchrow_hashref ) {;\r\n                            $result->{member}->{$member->{mobile_id}}++;\r\n                        }\r\n                        else {\r\n                            $result->{not_member}->{$log->{subno}}++;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                # -------------------------------------------------------------------------\r\n                # ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰æ•°GET\r\n                # -------------------------------------------------------------------------\r\n                if( $path eq \'/decomail/synthesis/download\' ) {\r\n                    my $content_rid = CGI->new( $log->{file} )->param( \'content_rid\' );\r\n                    $result->{down}->{$log->{subno}}->{$content_rid}++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    # -------------------------------------------------------------------------\r\n    #ã€€çµæžœã‚’ã ã™ãœ\r\n    # -------------------------------------------------------------------------\r\n    my $csv = Text::CSV_XS->new({binary => 1 });\r\n\r\n    $csv->combine(\r\n        $date->ymd,\r\n        scalar( keys %{$result->{member}} )     || 0,\r\n        scalar( keys %{$result->{not_member}} ) || 0,\r\n        sum( map { scalar( keys %{$result->{down}->{$_}} ) } keys %{$result->{down}}  )  || 0 ,\r\n    );\r\n\r\n    print $csv->string.\"\\n\";\r\n}\r\n\r\nmy $csv = Text::CSV_XS->new({binary => 1 });\r\n\r\n$csv->combine(\r\n    qw/\r\n        æ—¥ä»˜\r\n        ä¼šå“¡ãƒ¦ãƒ‹ãƒ¼ã‚¯\r\n        éžä¼šå“¡ãƒ¦ãƒ‹ãƒ¼ã‚¯\r\n        DLæ•°\r\n    /\r\n);\r\nprint $csv->string.\"\\n\";\r\n\r\nfor my $day ( MF::DateTime->new( year => 2007 , month => 7 )->month_list ) {\r\n    &run( $day );\r\n}\r\n\r\n1;\r\n\r\n\r\n\r\n\r\n\r\n','2007-08-16 15:08:53','2007-08-16 06:08:53'),(92,'4Og7gx6iQh','sixamo.rb','äººå·¥ç„¡èƒ½','UTF8ã«å¯¾å¿œã•ã›ãªã„ã¨å‹•ã‹ãªã„ã®ã§ã€ \r\n\r\nKCODE = \'UTF8\'ã«ã—ã¦ã„ã™ã‚‹ã€‚\r\n\r\n>>\r\n  1 #!/usr/bin/env ruby\r\n  2 #\r\n  3 # sixamo.rb\r\n  4 # $Id: sixamo.rb,v 1.52 2007/03/05 08:31:23 hori Exp hori $\r\n  5 #\r\n  6\r\n  7 $KCODE = \'UTF8\'\r\n<<\r\n\r\n\r\nä¿å­˜ã•ã‚Œã‚‹ãƒ†ã‚­ã‚¹ãƒˆã¯ã“ã‚“ãªæ„Ÿã˜ã«å˜èªžãŒè¡Œã”ã¨ã«ãŠã„ã¦ã‚ã‚‹ã€‚\r\n\r\n>>\r\n  1 ã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\n  2 ã¦ã™ã¨ã ã‚ˆ\r\n  3 ã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\n  4 OhYear\r\n  5 ãˆãˆãˆãˆãˆãˆãˆ\r\n  6 ãŠã®ã‚Œ\r\n  7 æ”¯ç¤¾ã‚‚ã®ãã›ã«\r\n  8 ä»Šç•œç”Ÿ\r\n  9 ã»ã’\r\n 10 test\r\n 11 aaa\r\n 12 ä½•ã§ã‚„å¹´\r\n 13 ã¦ã™ã¨\r\n 14 ãªã‚“ã§ã™ã¨\r\n 15 ã¬ã‚\r\n 16 ã‚‚ã†ã‚„\r\n 17 ã€€\r\n 18 test\r\n<<\r\n\r\n\r\nã“ã‚Œã¯ã€èµ·å‹•æ™‚ã« Dictionaryã‚¯ãƒ©ã‚¹ã«ã‚ˆã£ã¦èª­ã¿è¾¼ã¾ã‚Œã‚‹ã€‚\r\n\r\n>>\r\n307     class Dictionary\r\n308\r\n309         TEXT_FILENAME = \'sixamo.txt\'\r\n310         DIC_FILENAME = \'sixamo.dic\'\r\n311\r\n312         def Dictionary.load(dirname)\r\n313             dic = Dictionary.new(dirname)\r\n314             dic.load_text\r\n315             dic.load_dictionary\r\n316             dic\r\n317         end\r\n<<\r\n\r\nå®Ÿéš›ã®èª­ã¿è¾¼ã¿éƒ¨åˆ†ã¯ã“ã¡ã‚‰\r\n\r\n>>\r\n333         def load_text\r\n334             return unless File.readable?(@text_filename)\r\n335\r\n336             File.open(@text_filename) do |fp|\r\n337                 fp.each do |line|\r\n338                     line.chomp!\r\n339                     @text << line\r\n340                 end\r\n341             end\r\n342         end\r\n<<\r\n\r\n@textã¯ Arrayã¨ã—ã¦åˆæœŸåŒ–ã•ã‚Œã¦ã„ã‚‹ã®ã§\r\n\r\n>>\r\n328             @text = []\r\n\r\n@text << line\r\n<<\r\n\r\nã¯é…åˆ—ã¸è¡Œã‚’è¿½åŠ ã—ã¦ã„ã‚‹ä½œæ¥­ã§ã‚ã‚‹ã€‚\r\n\r\nSixamoã®å‹•ä½œã¯åŸºæœ¬çš„ã«ã¯ã€ä¸‹è¨˜ãŒã™ã¹ã¦\r\n\r\n\r\n>>\r\n828         sixamo = Sixamo.new(ARGV[0] || \"data\")\r\n829         str = ARGV[1]\r\n830\r\n831         str = sixamo.talk(str)\r\n832         puts str\r\n<<\r\n\r\ndef talk ã§ã¯ã€å¼•æ•°ãŒç„¡ã‘ã‚Œã°ã€æœ€è¿‘ã®ï¼‘ï¼å˜èªžã‚’å¾—ã¦ãã“ã‹ã‚‰ã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã‚’ç”Ÿæˆã—ã‚ˆã†ã¨ã—ã¦ã„ã‚‹ã€‚\r\n\r\n>>\r\n227             if str\r\n228                 keywords = @dic.split_into_keywords(str)\r\n229             else\r\n230                 text = @dic.text\r\n231                 latest_text = if text.size < 10 then text else text[-10..-1] end\r\n232 $stderr.print \"#{latest_text}\\n\"\r\n233                 keywords = Hash.new(0)\r\n234                 latest_text.each do |str|\r\n235                     keywords.each { |k,v| keywords[k] *= 0.5 }\r\n236                     @dic.split_into_keywords(str).each { |k,v| keywords[k] += v }\r\n237                 end\r\n238             end\r\n<<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       ','2007-08-18 00:27:52','2007-08-19 12:27:15'),(93,'iQJ1Hut9LB','ãƒ¡ãƒ¼ãƒ«ã®é€ä¿¡','mail','echo \"hoge \" | mail -e -a \'From: hiroyuki@hiroyuki.niflheimr.org\' -s \'aaaaaaa\' hiroyuki','2007-08-19 19:31:04','2007-08-19 10:31:04'),(94,'hpVIyRMUc8','Text::Hatena','perl','ãƒ—ãƒ¬æ°—æ³¡ã«å¯¾å¿œã—ã¦ã¿ãŸã€‚\r\n\r\n>||\r\n<div class=\"section\">\r\n\r\n<blockquote>\r\n<p>    print \"hoge\";</p>\r\n\r\n</blockquote>\r\n\r\n</div>\r\n||< ','2007-08-19 20:57:37','2007-08-19 12:18:31'),(95,'dmafEITG0n','html_filter','perl ','\r\nã“ã‚“ã ã‘ã‹ã‚ˆã€‚\r\n\r\n\r\n>>\r\nsub html_filter {\r\n    my $text = shift;\r\n    for ($text) {\r\n        s/&/&amp;/g;\r\n        s/</&lt;/g;\r\n        s/>/&gt;/g;\r\n        s/\"/&quot;/g;\r\n    }\r\n    return $text;\r\n}\r\n<<','2007-08-19 21:22:19','2007-08-19 12:22:19'),(96,'PDKsjfb6UB','load_text','sixamo.rb','\r\n@text ã«ã¯æŒ‡å®šã•ã‚ŒãŸãƒ†ã‚­ã‚¹ãƒˆã®ãƒ‡ãƒ¼ã‚¿ãŒä¸¸ã€…å…¥ã£ã¦ã„ã‚‹ã€‚\r\n\r\n>>\r\n332         def load_text\r\n333             return unless File.readable?(@text_filename)\r\n334\r\n335             File.open(@text_filename) do |fp|\r\n336                 fp.each do |line|\r\n337                     line.chomp!\r\n338                     @text << line\r\n339                 end\r\n340             end\r\n341         end\r\n<<','2007-08-20 00:02:37','2007-08-19 15:02:37'),(97,'uPGevuHm7W','ruby é…åˆ—','ruby','\r\né…åˆ—ã®ç”Ÿæˆ\r\n>>\r\n  3 ary =  %W/ 1 2 3 4 5 6 7 8 9 /\r\n  4\r\n  5 puts ary[0,5]\r\n<<\r\n\r\n>>\r\n[i,n] \r\n<<\r\n\r\nç¯„å›²ã‚’æŒ‡å®šã™ã‚‹æ–¹æ³•ã€‚\r\n','2007-08-20 01:12:11','2007-08-19 16:12:11'),(98,'izNcE7ZHEI','è¾žæ›¸èª­ã¿è¾¼ã¿è§£æž','sixamo.rb','\r\n@dic ã®æ§‹é€ ãŒã—ã‚ŠãŸã„ã€‚\r\n\r\n>>\r\n> 295             source = lines.collect do |k,v|\r\n> 296                 @dic.text[k,5]\r\n> 297             end.sort_by{ rand }.flatten.compact.uniq\r\n<<\r\n\r\n\r\nã“ã‚“ãªæ„Ÿã˜ã§èª­ã¿è¾¼ã‚“ã§ã„ã‚‹ã®ã§ã€\r\n\r\n>>\r\n> 221         def initialize(dirname)\r\n> 222             @dic = Dictionary.load(dirname)\r\n> 223         end\r\n<<\r\n\r\nèª­ã¿è¾¼ã¿ã¯ã“ã‚“ãªæ„Ÿã˜ã§è¡Œã‚ã‚Œã¦ã„ã‚‹ã€‚\r\n\r\n>>\r\n> 311         def Dictionary.load(dirname)\r\n> 312             dic = Dictionary.new(dirname)\r\n> 313             dic.load_text\r\n> 314             dic.load_dictionary\r\n> 315             dic\r\n> 316         end\r\n<<\r\n\r\nnewã—ã¦ã‚‹ã®ã§ã€ã“ã‚“ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚’ä½œã£ã¦ã„ã‚‹ã€‚\r\n\r\n>>\r\n> 319         def initialize(dirname=nil)\r\n> 320             @occur = {}\r\n> 321             @rel = {}\r\n> 322             @trie = Trie.new\r\n> 323\r\n> 324             @dirname = dirname\r\n> 325             @text_filename = \"#{@dirname}/#{TEXT_FILENAME}\"\r\n> 326             @dic_filename  = \"#{@dirname}/#{DIC_FILENAME}\"\r\n> 327             @text = []\r\n> 328\r\n> 329             @line_num = 0\r\n> 330         end\r\n<<\r\n\r\ndictionaryãŒç„¡ã„ã¨ã„ã†å‰æã§ã‚‚å‹•ãã€‚\r\n\r\nã“ã‚ŒãŒç„¡ã„çŠ¶æ…‹ã§å‹•ãã‚ˆã†ã«ã—ã¦ã¿ã‚‹ã€‚\r\n\r\n\r\n\r\n@dic.text ã«ä¼šè©±ãƒ­ã‚°ã®ãƒ‡ãƒ¼ã‚¿ãŒå…¨éƒ¨å…¥ã£ã¦ã„ã‚‹ã€‚\r\n\r\n\r\nï¼‘ï¼å€‹ã®ä¹±æ•°ã‚’ç”Ÿæˆã—ã¦ã€ãŠã„ã¦ã€ãã‚Œã‚’\r\n\r\n>>\r\n@dic.text[k,5] \r\n<<\r\n\r\nã¨ã™ã‚‹ã“ã¨ã§ï¼•å€‹ã¥ã¤å–å¾—ã§ãã‚‹ã‚ˆã†ã«ã™ã‚‹ã€‚\r\n\r\n>>\r\n> 295             source = lines.collect do |k,v|\r\n> 296 STDERR.puts \"k : #{k} \"\r\n> 297 STDERR.puts \"@dic.txt #{@dic.text[k,5]}\"\r\n> 298                 @dic.text[k,5]\r\n> 299             end.sort_by{ rand }.flatten.compact.uniq\r\n<<\r\n\r\n>>\r\n\r\n> k : 38\r\n> @dic.txt ã¯ã‚ã†ãªã‚“ã§ã‚„ã­ã‚“ãŠã‹ã—ã„ãªã»ã’ã»ã’\r\n> k : 33\r\n> @dic.txt é›Œæ ªãŒã‚“ã°ã‚‹ãªã‚“ã§ã ãƒ¼ã“ã‚“ã«ã¡ã‚ãªã‚“ã§ã‚„ã­ã‚“\r\n> k : 61\r\n> @dic.txt ã¦ã™ãŠhogeã¦ã™ã¨ã‚ã‚ã‚ã‚ã¦ã™ã¨\r\n> k : 74\r\n> @dic.txt ã†ã”ã‹ã—ã¦ãªã‚“ã ã‹ãªã‚\r\n> k : 44\r\n> @dic.txt ã¬ã†ãƒ¼ã¬ï¼ŸãŠãƒ¼ã„ã»ã’ã‚ã‚ã‚\r\n> k : 20\r\n> @dic.txt ã¸ãˆã‚€ããƒ¼testtestã“ã‚ŒãŒè‹¥ã•ã‹\r\n> k : 16\r\n> @dic.txt ã€€testtestaaaã¸ãˆ\r\n> ã‚ã‚ã‚ã‚ã‚ã‚\r\n<<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-08-20 01:13:45','2007-08-19 16:13:45'),(99,'yJQXabj1IR','TT ãƒ•ã‚£ãƒ«ã‚¿ãƒ¼ã®æŒ™å‹•','perl','ã«ã»ã‚“ã”ã‚“ã®å ´åˆã€æ©Ÿèƒ½ä¸å…¨ã®ãŠã‹ã—ãªãƒ•ã‚£ãƒ«ã‚¿ãƒ¼ã‚’é€šã™ã¨ãŠã‹ã—ããªã‚‹ã€‚','2007-08-20 19:11:38','2007-08-20 10:11:38'),(100,'tuXJSXqnwE','Sledge template option','perl','\r\nè¨­å®šã‚’è¿½åŠ ã—ãŸã„ãªã‚‰ add_option ã§ã¤ã„ã‹ã—ã‚ã€‚\r\n\r\nsee\r\n\r\nSledge::Template\r\n\r\n>>\r\nsub set_option {\r\n    my $self = shift;\r\n    while (my($key, $val) = splice @_, 0, 2) {\r\n        $self->{_options}->{$key} = $val;\r\n    }\r\n}\r\n\r\nsub add_option {\r\n    my $self = shift;\r\n    while (my($key, $val) = splice @_, 0, 2) {\r\n        if (! exists $self->{_options}->{$key}) {\r\n            $self->{_options}->{$key} = $val;\r\n        }\r\n        elsif (ref $self->{_options}->{$key} eq \'HASH\') {\r\n            $self->{_options}->{$key} = {%{$self->{_options}->{$key}}, %{$val}};\r\n        }\r\n        elsif (ref $self->{_options}->{$key} eq \'ARRAY\') {\r\n            push @{$self->{_options}->{$key}}, $val;\r\n        }\r\n        else {\r\n            $self->{_options}->{$key} = [ $self->{_options}->{$key}, $val ];\r\n        }\r\n    }\r\n}\r\n<<','2007-08-21 10:19:26','2007-08-21 01:19:26'),(101,'193TaaodaA','æ—¥ä»˜ã§ã®ã‚«ã‚¦ãƒ³ãƒˆã€€datetime','MySQL','\r\næ—¥ä»˜ã§ã®ã‚«ã‚¦ãƒ³ãƒˆã€€datetime\r\n\r\n>>\r\nSELECT DATE_FORMAT( created_on , \"%Y-%m-%d\") AS date, COUNT(*)  FROM request GROUP BY date;\r\n<<','2007-08-21 12:15:15','2007-08-21 03:15:15'),(102,'0ooxVAb37T','aniten ç§»è¡Œ','works','\r\n\r\n\r\n>>\r\nuse AniTen::Data::Feature;\r\nuse MF::DateTime;\r\n\r\nfor my $v (@{$data}) {\r\n    AniTen::Data::Feature->create(\r\n        {\r\n            title        => $v->{title},\r\n            top_text     => $v->{title},\r\n            body         => $v->{title},\r\n            contents_uid => join( \',\' , split(/ /, $v->{contents} ) ) ,\r\n            order_num    => 0,\r\n            start_time   => 0,\r\n            end_time     => 24,\r\n            wday         => \'All\',\r\n            regist_date  => MF::DateTime->now->ymd,\r\n        }\r\n    );\r\n}\r\n<<\r\n','2007-08-21 17:58:02','2007-08-21 08:58:02'),(103,'akQTq97IiO','è§£æž','sixamo.rb','ãƒ†ã‚­ã‚¹ãƒˆï¼š\r\n\r\nsixiamo.rb ã¯åŸºæœ¬çš„ã«è¾žæ›¸ãŒãªãã¦ã‚‚å‹•ãã‚ˆã†ã«è¨­è¨ˆã•ã‚Œã¦ã„ã‚‹ã€‚\r\n\r\n\r\nèµ·å‹•éƒ¨åˆ†ï¼š\r\n\r\n\r\n810         while (str = Readline.readline(\"> \", true))\r\n811             break if /^(exit|quit)?$/.match(str)\r\n812\r\n813             if opt[:m]\r\n814                 sixamo.memorize(str)\r\n815                 res = sixamo.talk\r\n816             else\r\n817                 res = sixamo.talk(str)\r\n818             end\r\n819\r\n820             puts res\r\n821         end\r\n\r\n\r\nè¨˜æ†¶éƒ¨åˆ†ï¼š\r\n\r\n263         def memorize(lines)\r\n264             @dic.store_text(lines)\r\n265             if @dic.learn_from_text\r\n266                 @dic.save_dictionary\r\n267             end\r\n268         end\r\n\r\n\r\nãƒ†ã‚­ã‚¹ãƒˆä¿å­˜ï¼š\r\n\r\ngsub(/\\s+/, \' \')ï¼šé€£ç¶šã™ã‚‹ç©ºç™½ã‚’ã²ã¨ã¤ã®ç©ºç™½ã«å¤‰æ›ã€‚\r\ntrip            ï¼šæ–‡å­—åˆ—ã®å…ˆé ­ã¨æœ«å°¾ã®ç©ºç™½æ–‡å­—(\\r \\n \\t \\f \\v åŠè§’ã‚¹ãƒšãƒ¼ã‚¹)ã‚’å‰Šé™¤\r\n\r\n456         def store_text(lines)\r\n457             ary = []\r\n458             lines.each do |line|\r\n459                 ary << line.gsub(/\\s+/, \' \').strip\r\n460             end\r\n461\r\n462             ary.each do |line|\r\n463                 @text << line\r\n464             end\r\n465\r\n466             File.open(@text_filename, \'a\') do |fp|\r\n467                 ary.each do |line|\r\n468                     line.chomp!\r\n469\r\n470                     fp.puts line\r\n471                 end\r\n472             end\r\n473         end\r\n\r\n\r\nã“ã‚Œã€ãƒ—ãƒ­ã‚°ãƒ¬ã‚¹ãƒãƒ¼ã ã‚ˆã­ï¼š\r\n\r\n\r\n403         WindowSize = 500\r\n404         def learn_from_text(progress=nil)\r\n405\r\n406             modified = false\r\n407\r\n408             read_size = 0\r\n409             buf_prev = []\r\n410             end_flag = false\r\n411             idx = @line_num\r\n412\r\n413             while true\r\n414                 buf = []\r\n415\r\n416                 if progress # progressãŒOnãªã‚‰barã‚’å‡ºã™\r\n417                     idx2 = read_size/WindowSize * WindowSize\r\n418\r\n419                     if idx2 % 100_000 == 0\r\n420                         STDERR.printf \"\\n%5dk \", idx2/1000\r\n421                     elsif idx2 % 20_000 == 0\r\n422                         STDERR.print \"*\"\r\n423                     elsif idx2 % 2_000 == 0\r\n424                         STDERR.print \".\"\r\n425                     end\r\n426                 end\r\n427\r\n428                 tmp = read_size\r\n429                 while tmp/WindowSize == read_size/WindowSize\r\n430                     if idx >= @text.size\r\n431                         end_flag = true\r\n432                         break\r\n433                     end\r\n434                     buf << @text[idx]\r\n435                     tmp += @text[idx].size\r\n436                     idx += 1\r\n437                 end\r\n438                 read_size = tmp\r\n439\r\n440                 break if end_flag\r\n441\r\n442                 if buf_prev.size > 0\r\n443                     learn(buf_prev+buf, @line_num)\r\n444                     modified = true\r\n445\r\n446                     @line_num += buf_prev.size\r\n447                 end\r\n448\r\n449                 buf_prev = buf\r\n450             end\r\n451             STDERR.print \"\\n\" if progress\r\n452\r\n453             modified\r\n454         end\r\n\r\næ¯Žå›žå‘¼ã³å‡ºã•ã‚Œã¦ã„ã‚‹ talk ãŒã“ã‚Œã€‚\r\n\r\n225         def talk(str=nil,weight={})\r\n226             if str\r\n227                 keywords = @dic.split_into_keywords(str) # è©±ã—ã‹ã‘ã‚‰ã‚ŒãŸã‚‰ã“ã“ãŒèµ·å‹•\r\n228             else\r\n229                 text = @dic.text\r\n230                 latest_text = if text.size < 10 then text else text[-10..-1] end\r\n231                 keywords = Hash.new(0)\r\n232                 latest_text.each do |str|\r\n233                     keywords.each { |k,v| keywords[k] *= 0.5 }\r\n234                     @dic.split_into_keywords(str).each { |k,v| keywords[k] += v }\r\n235                 end\r\n236             end\r\n237\r\n238             weight.keys.each do |kw|\r\n239                 if keywords.key?(kw)\r\n240                     if weight[kw] == 0\r\n241                         keywords.delete(kw)\r\n242                     else\r\n243                         keywords[kw] *= weight[kw]\r\n244                     end\r\n245                 end\r\n246             end\r\n\r\n\r\nkeywordsã‚’ç”Ÿæˆã—ã¦ã„ã‚‹ã¨ã“ã‚ãŒã“ã¡ã‚‰ï¼š\r\n\r\n506         def split_into_keywords(str)\r\n507             result = Hash.new(0)\r\n508             terms = split_into_terms(str)\r\n509\r\n510             terms.each do |w|\r\n511                 result[w] += self.weight(w)\r\n512             end\r\n513\r\n514             result\r\n515         end\r\n\r\nå˜èªžåˆ†å‰²ï¼š\r\n\r\n517         def split_into_terms(str,num=nil)\r\n518             @trie.split_into_terms(str,num)\r\n519         end\r\n\r\næœ¬ä½“ã¯ã“ã¡ã‚‰ï¼š\r\n\r\n725         def split_into_terms(str,num=nil)\r\n726             result = []\r\n727\r\n728             return result unless str\r\n729             # æ–‡å­—ã‚µã‚¤ã‚ºãŒï¼ã‚ˆã‚Šå¤§ãã \r\n730             while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n731                 prefix = longest_prefix_subword(str)\r\n732                 if prefix\r\n733                     result << prefix\r\n734                     str = str[prefix.size..-1]\r\n735                 else\r\n736                     chr = /./m.match(str)[0]\r\n737                     result << chr if num\r\n738                     str = Regexp.last_match.post_match\r\n739                 end\r\n740             end\r\n741\r\n742             result\r\n743         end\r\n\r\n\r\n745         def longest_prefix_subword(str)\r\n746             node = @root\r\n747             result = nil\r\n748             idx = 0\r\n749             str.each_byte do |b|\r\n750                 result = str[0,idx] if node.key?(:terminate)\r\n751                 return result unless node.key?(b)\r\n752                 node = node[b]\r\n753                 idx += 1\r\n754             end\r\n755\r\n756             result = str if node.key?(:terminate)\r\n757             result\r\n758         end\r\n\r\n\r\n\r\n\r\n\r\n\r\nã“ã¡ã‚‰ãŒä¼šè©±ç”Ÿæˆè©²å½“éƒ¨åˆ†\r\n\r\n\r\n270         def message_markov(keywords)\r\n271             lines = []\r\n272             if keywords.size > 0\r\n273\r\n274                 if keywords.size > 10\r\n275                     keywords.sort_by{|k,v| -v}[10..-1].each do |k,v|\r\n276                         keywords.delete(k)\r\n277                     end\r\n278                 end\r\n279                 sum = keywords.values.sum\r\n280                 if sum > 0\r\n281                     keywords.each { |k,v| keywords[k] = v/sum }\r\n282                 end\r\n283\r\n284                 keywords.keys.collect do |kw|\r\n285                     ary = @dic.lines(kw).sort_by{ rand }\r\n286                     ary[0,10].each do |idx|\r\n287                         lines << idx\r\n288                     end\r\n289                 end.flatten\r\n290             end\r\n291\r\n292             10.times { lines << rand(@dic.text.size) }\r\n293             lines.uniq!\r\n294\r\n295             source = lines.collect do |k,v|\r\n296 STDERR.puts \"k : #{k} \"\r\n297 STDERR.puts \"@dic.txt #{@dic.text[k,5]}\"\r\n298                 @dic.text[k,5]\r\n299             end.sort_by{ rand }.flatten.compact.uniq\r\n300\r\n301             msg = Util.markov(source, keywords, @dic.trie)\r\n302             msg = Util.message_normalize(msg)\r\n303             msg\r\n304         end\r\n305     end\r\n\r\n@root ã¤ã¾ã‚Šã€nodeã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ã“ã‚“ãªæ„Ÿã˜\r\n\r\n\r\n{116=>{101=>{115=>{116=>{:terminate=>true}}}}, 227=>{129=>{170=>{227=>{130=>{147=>{227=>{129=>{160=>{:terminate=>true}, 167=>{227=>{130=>{132=>{227=>{129=>{173=>{227=>{130=>{147=>{:terminate=>true}}}}}}}}}}}}}}}}, 132=>{227=>{129=>{159=>{227=>{129=>{132=>{:terminate=>true}}}}}}}, 187=>{227=>{129=>{146=>{:terminate=>true}}}}, 138=>{227=>{131=>{188=>{227=>{129=>{132=>{:terminate=>true}}}}}}}, 166=>{227=>{129=>{153=>{227=>{129=>{168=>{:terminate=>true}}}}}}}, 172=>{227=>{129=>{130=>{:terminate=>true}}}}, 134=>{227=>{129=>{148=>{227=>{129=>{139=>{227=>{129=>{151=>{227=>{129=>{166=>{:terminate=>true}}}}}}}}}}}}}, 146=>{227=>{130=>{147=>{:terminate=>true}}}}, 130=>{227=>{129=>{130=>{227=>{129=>{130=>{227=>{129=>{130=>{:terminate=>true}}}}}}}}}}, 136=>{227=>{129=>{136=>{227=>{129=>{136=>{:terminate=>true}}}}}}}, 169=>{227=>{129=>{134=>{227=>{129=>{148=>{:terminate=>true}}}}}}}, 147=>{227=>{130=>{147=>{:terminate=>true}}}}, 175=>{227=>{130=>{141=>{:terminate=>true}}}}}}, 239=>{189=>{147=>{239=>{189=>{132=>{:terminate=>true}}}}}}, 97=>{97=>{97=>{:terminate=>true}}}}\r\n\r\n\r\n\r\nSTR:ã”å‚ç…§ãªã‚“ã§ã™ã¨\r\nSTR:å‚ç…§ãªã‚“ã§ã™ã¨\r\nSTR:ç…§ãªã‚“ã§ã™ã¨\r\nSTR:ãªã‚“ã§ã™ã¨\r\nSTR:ã‚“ã§ã™ã¨\r\nSTR:ã§ã™ã¨\r\nSTR:ã™ã¨\r\nSTR:ã¨\r\nSTR:ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã‚‹ã®ã‹ï¼Ÿ\r\nSTR:ã®ã‹ï¼Ÿ\r\nSTR:ã‹ï¼Ÿ\r\nSTR:ï¼Ÿ\r\nSTR:ã©ã†ã”å‚ç…§ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã†ã”å‚ç…§ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã”å‚ç…§ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:å‚ç…§ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ç…§ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ãªã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã‚“ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã‹ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã§ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ãã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã¾ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ã™ãªã»ã’ã‚“ã»ã’\r\nSTR:ãªã»ã’ã‚“ã»ã’\r\nSTR:ã»ã’ã‚“ã»ã’\r\nSTR:ã‚“ã»ã’\r\nSTR:ã»ã’\r\nRESULT:ã»ã’\r\n ','2007-08-22 08:41:46','2007-08-22 15:28:59'),(104,'TmnWuI8PHf','æ”¾é€ä¸­ã‚¢ãƒ‹ãƒ¡ã®è‡ªå‹•åŒ–æ¡ˆ','works','ã€Œæ”¾é€ä¸­ã‚¢ãƒ‹ãƒ¡ã®è‡ªå‹•åŒ–æ¡ˆã€\r\n\r\nãƒ»ã€Œhttp://cal.syoboi.jp/rank2ã€ã“ã¡ã‚‰ã‹ã‚‰ãƒ‡ãƒ¼ã‚¿ã‚’ã¨ã£ã¦ãã‚‹ã€‚\r\n\r\nãƒ»ç¾åœ¨æ”¾é€ä¸­ã®ã‚¢ãƒ‹ãƒ¡ãƒªã‚¹ãƒˆã‚’ä½œã‚‹ã€‚\r\n\r\nãƒ»ãƒªã‚¹ãƒˆã‚’æ›œæ—¥ã”ã¨ã«ã‚ã‘ã‚‹ã€‚\r\n\r\nãƒ»ãƒªã‚¹ãƒˆã‚’å…ƒã«æ¤œç´¢ã‚’ã‹ã‘ã¦\r\n\r\n ','2007-08-29 17:47:08','2007-08-29 08:47:32'),(105,'Oo5RVtOEM5','ä¸€æ›²ã¥ã¤ã ã›ã¨ã‹ã„ã†ç„¡èŒ¶ãªå¯¾å¿œã®ã‹ã‘ã‚‰','works','# -------------------------------------------------------------------------\r\n# å¤§å¥½è©• TVï½±ï¾†ï¾’ï½¿ï¾ï½¸\r\n#\r\n# -------------------------------------------------------------------------\r\nsub dispatch_pickup_tv_list {\r\n    my $self = shift;\r\n\r\n    # æ›œæ—¥ã”ã¨ã«1æ›²ã¥ã¤ã ã›ã¨ã®ã“ã¨ã§ã™ã€‚\r\n    my @pick_up_tv_list = AniTen::Data::Feature->search( place => \'pickup_tv\', delete_fg => 0 ,  { order_by => \'order_num ASC\'} );\r\n    for my $pick_up_tv (@pick_up_tv_list ) {\r\n        ( $pick_up_tv->{first_contents} , )  = shuffle $pick_up_tv->contents_list;\r\n    }\r\n\r\n    $self->tmpl->param(\r\n        pick_up_tv_list => \\@pick_up_tv_list ,\r\n    );\r\n}\r\n','2007-08-31 12:27:35','2007-08-31 03:27:35'),(106,'F45G4Qv5xp','ãƒ‰ãƒ©ãƒžã®è‡ªå‹•æ›´æ–°','works','perl webscraper.pl http://dramanews.net/20073.html\r\n\r\n>>\r\n  1 #!/usr/local/bin/perl\r\n  2 use strict;\r\n  3 use warnings;\r\n  4 use FindBin::libs;\r\n  5\r\n  6 use URI;\r\n  7 use Web::Scraper;\r\n  8 use Encode;\r\n  9 use List::MoreUtils qw/uniq/;\r\n 10\r\n 11 my $links = scraper {\r\n 12     process \'td\', \'td[]\' => \'TEXT\';\r\n 13     result qw/td/;\r\n 14 }->scrape(URI->new(shift));\r\n 15\r\n 16 for my $v (  uniq @$links ) {\r\n 17     my $v_utf8 = encode(\'utf8\', $v);\r\n 18     if( $v_utf8 =~ /^(æœˆ|ç«|æ°´|æœ¨|é‡‘|åœŸ|æ—¥)\\d{1,2}$/ ) {\r\n 19         unless($v_utf8 =~ /^\\d$/) {\r\n 20             print $v_utf8 .  \"\\n\";\r\n 21         }\r\n 22     }\r\n 23 }\r\n<<','2007-08-31 13:05:25','2007-08-31 04:05:25'),(107,'5xLE9u9z7W','map collect ã„ã£ã—ã‚‡ã˜ã‚ƒã‚“','ruby','  1\r\n  2 node = { \'hoge\' => \'aaaaa\' }\r\n  3 str  = \'\'\r\n  4 node.map do |k,v|\r\n  5     puts v\r\n  6 end\r\n  7\r\n  8 p node\r\n  9\r\n 10 node.collect do |k,v|\r\n 11     puts v\r\n 12 end\r\n 13\r\n 14 p node\r\n','2007-09-01 12:57:58','2007-09-01 03:57:58'),(108,'e0y5JKKHtc','sixamo.dic ã®ä¸­èº«','sixamo.rb','ã¤ã„ã«ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚’æ‰‹ã«å…¥ã‚ŒãŸã€‚\r\n\r\nã—ã‹ã—ã€ãªã‚“ã˜ã‚ƒã“ã‚Šã‚ƒãƒ¼\r\n\r\n>>\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n  7 ã¬ã‚    1   28  14,80,90\r\n  8 ã¯ã‚    0   22  38,85\r\n  9 ã„ãŸã„  0   21  26,87\r\n 10 aaa 1   40  10,19\r\n 11 ã“ã‚“    1   40  2,36\r\n 12 ãŠãƒ¼ã„  1   40  43,46\r\n 13 ã©ã†ã”  1   13  81,82\r\n 14 ãªã‚“ã   1   30  70,75\r\n 15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n 16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n 17 ã’ã‚“    0   20  0\r\n 18 ï½“ï½„    1   40  30\r\n 19 ãˆãˆãˆ  1   40  4\r\n<< \r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\nè¾žæ›¸ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ä¸‹è¨˜ã¨ãªã‚‹ã€‚\r\n\r\n\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n  7 ã¬ã‚    1   28  14,80,90\r\n  8 ã¯ã‚    0   22  38,85\r\n  9 ã„ãŸã„  0   21  26,87\r\n 10 aaa 1   40  10,19\r\n 11 ã“ã‚“    1   40  2,36\r\n 12 ãŠãƒ¼ã„  1   40  43,46\r\n 13 ã©ã†ã”  1   13  81,82\r\n 14 ãªã‚“ã   1   30  70,75\r\n 15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n 16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n 17 ã’ã‚“    0   20  0\r\n 18 ï½“ï½„    1   40  30\r\n 19 ãˆãˆãˆ  1   40  4\r\n\r\n\r\nåˆæœŸåŒ–ã—ãŸã¨ãã«ãƒ­ãƒ¼ãƒ‰ã—ã¦ã„ã‚‹ã€‚\r\n\r\n\r\n> 314         def Dictionary.load(dirname)\r\n> 315             dic = Dictionary.new(dirname)\r\n> 316             dic.load_text\r\n> 317             dic.load_dictionary\r\n> 318             dic\r\n> 319         end\r\n\r\n\r\nå•é¡Œã¯ã€load_dictionary ã®ã»ã†ã§\r\n\r\n\r\næœ€åˆã«ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã®èª­ã¿è¾¼ã¿ãŒã‹ã®ã†ã‹ã©ã†ã‹ã‚’åˆ¤å®šã€‚\r\n\r\ndictionary_fileã‚’èª­ã¿è¾¼ã¿ã€\r\n\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n\r\n\r\n\r\nã“ã“ã§ã‚„ã£ã¦ã‚‹ã®ã¯ã€$self->{line_num} , ã«lineã®æ•°ã‚’ã„ã‚Œã¦ã€\r\n\r\n\r\n\r\n\r\n> 346         def load_dictionary\r\n> 347             return unless File.readable?(@dic_filename)\r\n> 348             File.open(@dic_filename) do |fp|\r\n> 349\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n> 362\r\n> 363                 GC.disable\r\n> 364\r\n\r\n\r\n\r\nword , num , sum occur ãŒè¾žæ›¸ã‹ã‚‰ã¨ã‚‹ã“ã¨ãŒã§ãã‚‹\r\n\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n\r\nã“ã†ã—ã¦ã¿ã‚‹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒã¯ã£ãã‚Šã™ã‚‹ãŒã€\r\n\r\n\r\n> 365                 # body\r\n> 366                 fp.each do |line|\r\n> 367                     line.chomp!\r\n> 368                     word, num, sum, occur = line.split(/\\t/)\r\n> 369                     if occur\r\n> 370                         @occur[word] = occur.split(/,/).collect { |l| l.to_i }\r\n> 371                         add_term(word)\r\n> 372                         @rel[word] = Hash.new(0)\r\n> 373                         @rel[word][:num] = num.to_i\r\n> 374                         @rel[word][:sum] = sum.to_i\r\n> 375\r\n> 376                     end\r\n> 377                 end\r\n> 378\r\n> 379                 GC.enable\r\n> 380                 GC.start\r\n> 381\r\n> 382             end\r\n> 383         end\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-09-01 12:59:16','2007-09-02 17:15:15'),(109,'SU674A1P0u','match ','ruby','\r\n>>\r\n  2 str = \'hoge\'\r\n  3 chr = /./m.match(str)[0]\r\n  4 p chr\r\n<<\r\n\r\nçµæžœã“ã‚“ãªã‚“\r\n\r\n>>\r\nh\r\n<<','2007-09-01 13:26:46','2007-09-01 04:26:46'),(110,'VNn3Mhppw7','MFToolsã®æ—¥ä»˜å–å¾—','works','use strict;\r\nuse MF::DateTime;\r\nuse DateTime::Event::Recurrence;\r\nuse MFTools::Config;\r\n\r\nmy @remote_logs;\r\nfor my $day (\r\n    DateTime::Event::Recurrence->daily->as_list(\r\n        start => MF::DateTime->yesterday->clone->subtract( weeks => 1 ),\r\n        end   => MF::DateTime->yesterday,\r\n    )\r\n) {\r\n    for my $ip ( @MFTools::Config::REMOTE_LOG_IP ) {\r\n        $ip =~ /^(\\S+)\\.(\\S+)\\.(\\S+)\\.(\\S+)$/;\r\n        my $gj_ip = sprintf(\"gj%03d\", $4);\r\n\r\n        # MFToolsã®æ§‹é€ ä¸Šã©ã†ã—ã‚ˆã†ã‚‚ãªã„ã®ã§ç›´ã«æ›¸ãã‚ˆæœªæ¥ã®ä¸–ç•Œã§è§£æ±ºã—ã¦ãã ã•ã„ã€‚\r\n        push @remote_logs,  $day->strftime( \"/var/log/apache/combined_log/%Y/%Y_%m/%Y_%m%d/combined.%Y_%m%d.log.$gj_ip\" );\r\n    }\r\n}\r\n\r\nuse Data::Dumper;\r\n\r\nwarn Dumper \\@remote_logs;\r\n','2007-09-03 12:09:51','2007-09-03 03:09:51'),(111,'hZBSLTZajb','$/','perl','\r\nãƒ•ã‚¡ã‚¤ãƒ«ã‚’ä¸€åº¦ã«èª­ã¿è¾¼ã‚€å ´åˆã«ä½¿ã†\r\n\r\n\r\n>>\r\n$/ ã®ä½¿ã„æ–¹$/ ã‚’æœªå®šç¾©å€¤ã«ã™ã‚‹ã¨ã€ãƒ•ã‚¡ã‚¤ãƒ«ã®å†…å®¹ã‚’ä¸€åº¦ã«èª­ã¿è¾¼ã‚€ã“ã¨ãŒã§ãã¾ã™ã€‚\r\n\r\n\r\nundef $/;\r\nopen FILEHANDLE, \"read.txt\";\r\n$text = <FILEHANDLE>; # ã™ã¹ã¦ã®è¡Œã‚’ $text ã«ä»£å…¥ \r\n<<','2007-09-04 10:17:19','2007-09-04 01:17:19'),(112,'3PNlamaga7','uri match','perl','\r\nãªã‚“ã¤ãƒ¼ã‹ã€ã†ã¾ãã„ã‹ã‚“\r\n\r\n>>\r\nuse strict;\r\nuse warnings;\r\nuse Test::Base;\r\n\r\nplan tests => 1*blocks;\r\nfilters({ input => [qw/chomp/], expected => [qw/chomp/] });\r\n\r\nrun {\r\n    my $block = shift;\r\n\r\n    my $tr = \'false\';\r\n    if(  $block->input =~  m{^/present/\\?tr=(\\S+?)$} ) {\r\n        $tr = $1;\r\n    }\r\n\r\n    is(  $tr , $block->expected ,$block->expected ) ;\r\n};\r\n\r\n__END__\r\n===\r\n--- input\r\n/present/?tr=test\r\n--- expected\r\ntest\r\n===\r\n--- input\r\n/present/?tr=test-aaaaa\r\n--- expected\r\ntest-aaaaa\r\n===\r\n--- input\r\n/present/?sid=hoge&tr=test-aaaaa\r\n--- expected\r\nfalse\r\n\r\n<<','2007-09-04 12:57:22','2007-09-04 03:57:22'),(113,'PB069COv3Z','è§£æžï¼’','sixiamo','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\nè¾žæ›¸ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ä¸‹è¨˜ã¨ãªã‚‹ã€‚\r\n\r\n\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n  7 ã¬ã‚    1   28  14,80,90\r\n  8 ã¯ã‚    0   22  38,85\r\n  9 ã„ãŸã„  0   21  26,87\r\n 10 aaa 1   40  10,19\r\n 11 ã“ã‚“    1   40  2,36\r\n 12 ãŠãƒ¼ã„  1   40  43,46\r\n 13 ã©ã†ã”  1   13  81,82\r\n 14 ãªã‚“ã   1   30  70,75\r\n 15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n 16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n 17 ã’ã‚“    0   20  0\r\n 18 ï½“ï½„    1   40  30\r\n 19 ãˆãˆãˆ  1   40  4\r\n\r\n\r\nåˆæœŸåŒ–ã—ãŸã¨ãã«ãƒ­ãƒ¼ãƒ‰ã—ã¦ã„ã‚‹ã€‚\r\n\r\n\r\n> 314         def Dictionary.load(dirname)\r\n> 315             dic = Dictionary.new(dirname)\r\n> 316             dic.load_text\r\n> 317             dic.load_dictionary\r\n> 318             dic\r\n> 319         end\r\n\r\n\r\nå•é¡Œã¯ã€load_dictionary ã®ã»ã†ã§\r\n\r\n\r\næœ€åˆã«ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã®èª­ã¿è¾¼ã¿ãŒã‹ã®ã†ã‹ã©ã†ã‹ã‚’åˆ¤å®šã€‚\r\n\r\ndictionary_fileã‚’èª­ã¿è¾¼ã¿ã€\r\n\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n\r\n\r\n\r\nã“ã“ã§ã‚„ã£ã¦ã‚‹ã®ã¯ã€$self->{line_num} , ã«lineã®æ•°ã‚’ã„ã‚Œã¦ã€\r\n\r\n\r\n\r\n\r\n> 346         def load_dictionary\r\n> 347             return unless File.readable?(@dic_filename)\r\n> 348             File.open(@dic_filename) do |fp|\r\n> 349\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n> 362\r\n> 363                 GC.disable\r\n> 364\r\n\r\n\r\n\r\nword , num , sum occur ãŒè¾žæ›¸ã‹ã‚‰ã¨ã‚‹ã“ã¨ãŒã§ãã‚‹\r\n\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n\r\nã“ã†ã—ã¦ã¿ã‚‹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒã¯ã£ãã‚Šã™ã‚‹ãŒã€\r\n\r\n\r\n> 365                 # body\r\n> 366                 fp.each do |line|\r\n> 367                     line.chomp!\r\n> 368                     word, num, sum, occur = line.split(/\\t/)\r\n> 369                     if occur\r\n> 370                         @occur[word] = occur.split(/,/).collect { |l| l.to_i }\r\n> 371                         add_term(word)\r\n> 372                         @rel[word] = Hash.new(0)\r\n> 373                         @rel[word][:num] = num.to_i\r\n> 374                         @rel[word][:sum] = sum.to_i\r\n> 375\r\n> 376                     end\r\n> 377                 end\r\n> 378\r\n> 379                 GC.enable\r\n> 380                 GC.start\r\n> 381\r\n> 382             end\r\n> 383         end\r\n\r\n\r\nload_dictionaryã§dicã«ã‚ã‚‹ãƒ‡ãƒ¼ã‚¿ã‚’\r\n\r\n@occur\r\n@rel\r\n\r\nã®ï¼’ç®‡æ‰€ã¸å–ã‚Šè¾¼ã‚“ã§ã„ã‚‹ã€‚\r\n\r\n\r\nã¡ãªã¿ã«ã€@occurã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯perlã§ç½®ãæ›ãˆã‚‹ã¨\r\n\r\n> [\r\n> 	ãƒ†ã‚¹ãƒˆ => [11,22],\r\n> ]\r\n\r\nã“ã‚“ãªæ„Ÿã˜ã«ãªã‚‹ã€‚\r\n\r\n\r\nã“ã®ãªã‹ã§ã€å‘¼ã‚“ã§ã„ã‚‹ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Œadd_termã€\r\n\r\n\r\n> 596         def add_term(str)\r\n> 597             @occur[str] = [] unless @occur.key?(str)\r\n> 598             @trie.add(str)\r\n> 599             @rel[str] = Hash.new(0) unless @rel.key?(str)\r\n> 600         end\r\n\r\næ–‡å­—é€šã‚Šã€å˜èªžã®è¿½åŠ ã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\nå¼•æ•°ã®å˜èªžãŒ @occurã«å­˜åœ¨ã—ãªã‘ã‚Œã°ã€@occurã«ã‹ã‚‰ã®é…åˆ—ã‚’å…¥ã‚Œã‚‹ã€‚\r\n\r\nãªãœã‹ã¤ã„ã§ã«\r\n\r\n@trie.addã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\n> 692         def add(str)\r\n> 693             node = @root\r\n> 694             str.each_byte do |b|\r\n> 695                 node[b] = {} unless node.key?(b)\r\n> 696                 node = node[b]\r\n> 697             end\r\n> 698             node[:terminate] = true\r\n> 699         end\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ','2007-09-05 09:10:21','2007-09-05 00:10:21'),(114,'IV1gZsp3Rd','@root ã®ä¸­èº«','ruby','\r\n\r\n\r\n>>\r\n  3 class Hoge\r\n  4     def initialize(ary=nil)\r\n  5         @root = {}\r\n  6     end\r\n  7\r\n  8     def add(str)\r\n  9         node = @root\r\n 10         str.each_byte do | b |\r\n 11             node[b] = {} unless node.key?(b)\r\n 12             node = node[b]\r\n 13         end\r\n 14         node[:terminate] = true\r\n 15     end\r\n 16\r\n 17     def show\r\n 18         p @root\r\n 19     end\r\n 20 end\r\n 21\r\n 22\r\n 23 hoge = Hoge.new\r\n 24\r\n 25 %W/test hoge tester/.each { |str|\r\n 26     p str\r\n 27     hoge.add(str)\r\n 28     hoge.show\r\n 29 }\r\n<<\r\n\r\n\r\n>>\r\n\"test\"\r\n{116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\n\"hoge\"\r\n{104=>{111=>{103=>{101=>{:terminate=>true}}}}, 116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\n\"tester\"\r\n{104=>{111=>{103=>{101=>{:terminate=>true}}}}, 116=>{101=>{115=>{116=>{:terminate=>true, 101=>{114=>{:terminate=>true}}}}}}}\r\n<<\r\n','2007-09-06 22:57:58','2007-09-06 13:57:58'),(115,'L6czDRE9QE','è§£æž','ruby','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\nè¾žæ›¸ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ä¸‹è¨˜ã¨ãªã‚‹ã€‚\r\n\r\n\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n  7 ã¬ã‚    1   28  14,80,90\r\n  8 ã¯ã‚    0   22  38,85\r\n  9 ã„ãŸã„  0   21  26,87\r\n 10 aaa 1   40  10,19\r\n 11 ã“ã‚“    1   40  2,36\r\n 12 ãŠãƒ¼ã„  1   40  43,46\r\n 13 ã©ã†ã”  1   13  81,82\r\n 14 ãªã‚“ã   1   30  70,75\r\n 15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n 16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n 17 ã’ã‚“    0   20  0\r\n 18 ï½“ï½„    1   40  30\r\n 19 ãˆãˆãˆ  1   40  4\r\n\r\n\r\nåˆæœŸåŒ–ã—ãŸã¨ãã«ãƒ­ãƒ¼ãƒ‰ã—ã¦ã„ã‚‹ã€‚\r\n\r\n\r\n> 314         def Dictionary.load(dirname)\r\n> 315             dic = Dictionary.new(dirname)\r\n> 316             dic.load_text\r\n> 317             dic.load_dictionary\r\n> 318             dic\r\n> 319         end\r\n\r\n\r\nå•é¡Œã¯ã€load_dictionary ã®ã»ã†ã§\r\n\r\n\r\næœ€åˆã«ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã®èª­ã¿è¾¼ã¿ãŒã‹ã®ã†ã‹ã©ã†ã‹ã‚’åˆ¤å®šã€‚\r\n\r\ndictionary_fileã‚’èª­ã¿è¾¼ã¿ã€\r\n\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n\r\n\r\n\r\nã“ã“ã§ã‚„ã£ã¦ã‚‹ã®ã¯ã€$self->{line_num} , ã«lineã®æ•°ã‚’ã„ã‚Œã¦ã€\r\n\r\n\r\n\r\n\r\n> 346         def load_dictionary\r\n> 347             return unless File.readable?(@dic_filename)\r\n> 348             File.open(@dic_filename) do |fp|\r\n> 349\r\n> 350                 # header\r\n> 351                 fp.each do |line|\r\n> 352                     line.chomp!\r\n> 353                     case line\r\n> 354                     when /^$/\r\n> 355                         break\r\n> 356                     when /line_num:\\s*(.*)\\s*$/i\r\n> 357                         @line_num = $1.to_i\r\n> 358                     else\r\n> 359                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n> 360                     end\r\n> 361                 end\r\n> 362\r\n> 363                 GC.disable\r\n> 364\r\n\r\n\r\n\r\nword , num , sum occur ãŒè¾žæ›¸ã‹ã‚‰ã¨ã‚‹ã“ã¨ãŒã§ãã‚‹\r\n\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n\r\nã“ã†ã—ã¦ã¿ã‚‹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒã¯ã£ãã‚Šã™ã‚‹ãŒã€\r\n\r\n\r\n> 365                 # body\r\n> 366                 fp.each do |line|\r\n> 367                     line.chomp!\r\n> 368                     word, num, sum, occur = line.split(/\\t/)\r\n> 369                     if occur\r\n> 370                         @occur[word] = occur.split(/,/).collect { |l| l.to_i }\r\n> 371                         add_term(word)\r\n> 372                         @rel[word] = Hash.new(0)\r\n> 373                         @rel[word][:num] = num.to_i\r\n> 374                         @rel[word][:sum] = sum.to_i\r\n> 375\r\n> 376                     end\r\n> 377                 end\r\n> 378\r\n> 379                 GC.enable\r\n> 380                 GC.start\r\n> 381\r\n> 382             end\r\n> 383         end\r\n\r\n\r\nload_dictionaryã§dicã«ã‚ã‚‹ãƒ‡ãƒ¼ã‚¿ã‚’\r\n\r\n@occur\r\n@rel\r\n\r\nã®ï¼’ç®‡æ‰€ã¸å–ã‚Šè¾¼ã‚“ã§ã„ã‚‹ã€‚\r\n\r\n\r\nã¡ãªã¿ã«ã€@occurã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯perlã§ç½®ãæ›ãˆã‚‹ã¨\r\n\r\n> [\r\n> 	ãƒ†ã‚¹ãƒˆ => [11,22],\r\n> ]\r\n\r\nã“ã‚“ãªæ„Ÿã˜ã«ãªã‚‹ã€‚\r\n\r\n\r\nã“ã®ãªã‹ã§ã€å‘¼ã‚“ã§ã„ã‚‹ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Œadd_termã€\r\n\r\n\r\n> 596         def add_term(str)\r\n> 597             @occur[str] = [] unless @occur.key?(str)\r\n> 598             @trie.add(str)\r\n> 599             @rel[str] = Hash.new(0) unless @rel.key?(str)\r\n> 600         end\r\n\r\næ–‡å­—é€šã‚Šã€å˜èªžã®è¿½åŠ ã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\nå¼•æ•°ã®å˜èªžãŒ @occurã«å­˜åœ¨ã—ãªã‘ã‚Œã°ã€@occurã«ã‹ã‚‰ã®é…åˆ—ã‚’å…¥ã‚Œã‚‹ã€‚\r\n\r\nãªãœã‹ã¤ã„ã§ã«\r\n\r\n@trie.addã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\n> 692         def add(str)\r\n> 693             node = @root\r\n> 694             str.each_byte do |b|\r\n> 695                 node[b] = {} unless node.key?(b)\r\n> 696                 node = node[b]\r\n> 697             end\r\n> 698             node[:terminate] = true\r\n> 699         end\r\n\r\n\r\n@root ã«ä½•ãŒå…¥ã£ã¦ã„ã‚‹ã‹ã‚’çŸ¥ã‚‰ãªã„ã¨ã ã‚ã€‚\r\n\r\nåŸºæœ¬çš„ã«ã¯ã€HashãŒå…¥ã£ã¦ã„ã‚‹ãŒã€ã‚ˆãã‚ã‹ã‚‰ã‚“	\r\n\r\n> for $x (map ord, split //, $s) \r\n\r\nruby ã® \r\n\r\n\r\nnode = node[b]\r\n\r\n\r\nãŒperlã®ä½•ã«ã‚ãŸã‚‹ã®ã‹ï¼Ÿ\r\n\r\n\r\nã“ã‚Œã¯ãã‚‚ãã‚‚ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒ\r\n\r\n> {\r\n> 	116=>{101=>{115=>{116=>{:terminate=>true}}}}, \r\n> 	227=>{129=>{170=>{227=>{130=>{147=>{227=>{129=>{160=>{:terminate=>true}}}}}}}, \r\n> 	132=>{227=>{129=>{159=>{227=>{129=>{132=>{:terminate=>true}}}}}}}, \r\n> 	187=>{227=>{129=>{146=>{:terminate=>true}}}}, \r\n> 	138=>{227=>{131=>{188=>{227=>{129=>{132=>{:terminate=>true}}}}}}}, \r\n> 	166=>{227=>{129=>{153=>{227=>{129=>{168=>{:terminate=>true}}}}}}}, \r\n> 	172=>{227=>{129=>{130=>{:terminate=>true}}}}, \r\n> 	130=>{227=>{129=>{130=>{227=>{129=>{130=>{227=>{129=>{130=>{:terminate=>true}}}}}}}}}}, \r\n> 	169=>{227=>{129=>{134=>{227=>{129=>{148=>{:terminate=>true}}}}}}}, \r\n> 	147=>{227=>{130=>{147=>{:terminate=>true}}}}, \r\n> 	175=>{227=>{130=>{141=>{:terminate=>true}}}}}}, 97=>{97=>{97=>{:terminate=>true}}}\r\n> }\r\n\r\nã“ã†ã„ã†çŠ¶æ…‹ã®ã‚‚ã®ã‚’æ‰±ã†ã“ã¨ãŒå‰æã§ã€\r\n\r\n\r\nã‚­ãƒ¼ã®æ–‡å­—ãŒå­˜åœ¨ã—ãªã„å ´åˆ\r\n\r\n10 => {} ã‚’ãƒŽãƒ¼ãƒ‰ã¸è¿½åŠ ã—ã¦ã„ãã€‚\r\n\r\næ–‡å­—åˆ— test ãŒä¸‹è¨˜ã®ã‚ˆã†ã«\r\n\r\n> 116=>{101=>{115=>{116=>{:terminate=>true}}}}\r\n\r\nè¿½åŠ ã•ã‚Œã¦ã„ã‚‹ã€‚\r\n\r\n> \"test\"\r\n> {116=>{101=>{115=>{116=>{:terminate=>true}}}}, 227=>{129=>{187=>{227=>{129=>{146=>{:terminate=>true}}}}, 166=>{227=>{129=>{153=>{227=>{129=>{168=>{:terminate=>true}}}}}}}, 130=>{227=>{129=>{130=>{227=>{129=>{13\r\n> 0=>{227=>{129=>{130=>{:terminate=>true}}}}}}}}}}}}}\r\n\r\nã¤ã¾ã‚Šã€@rootã¯sixamo.dicã«ã‚ã‚‹å˜èªžã‚’ä¿æŒã—ã¦ã„ã‚‹ã€‚\r\n\r\nãã—ã¦ã€addã«ã‚ˆã£ã¦ï¼‘è¡Œã¥ã¤è¿½åŠ ã—ã¦ã„ã‚‹ã€‚\r\n\r\n\r\n> \"test\"\r\n> {116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\n> \"hoge\"\r\n> {104=>{111=>{103=>{101=>{:terminate=>true}}}}, 116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\n> \"tester\"\r\n> {104=>{111=>{103=>{101=>{:terminate=>true}}}}, 116=>{101=>{115=>{116=>{:terminate=>true, 101=>{114=>{:terminate=>true}}}}}}}\r\n\r\nå˜èªžã¯é¡žä¼¼ã—ã¦ã„ã‚Œã°ã€åˆ†å²ã™ã‚‹ã‚ˆã†ãªå½¢ã§ä¿å­˜ã™ã‚‹ã€‚\r\n\r\nã“ã‚Œã‚’ perl ã§å®Ÿè¡Œã™ã‚Œã°\r\n\r\n\r\n','2007-09-07 00:02:51','2007-09-06 15:02:51'),(116,'vTOoDspgc1','Hashã®é€£çµãƒŽãƒ¼ãƒ‰ã®æœ€å¾Œã®ã‚¢ãƒ‰ãƒ¬ã‚¹ã‚’è¿”ã™','perl','\r\n\r\nHashã®é€£çµãƒŽãƒ¼ãƒ‰ã®æœ€å¾Œã®ã‚¢ãƒ‰ãƒ¬ã‚¹ã‚’è¿”ã™\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3\r\n  4 use List::Util qw/first/;\r\n  5 use Data::Dumper;\r\n  6\r\n  7 sub last_value {\r\n  8     my $str = shift;\r\n  9\r\n 10     while(1) {\r\n 11         if( ref $str ) {\r\n 12             if(  ( grep { \':terminate\' eq $_ } keys %$str ) > 0 ) {\r\n 13                 return $str;\r\n 14             }\r\n 15             else {\r\n 16                 ($str,) = values %$str;\r\n 17             }\r\n 18         }\r\n 19     }\r\n 20 }\r\n 21\r\n 22 my $hoge = { hoge => { hoge => { hoge => { \':terminate\' => \'true\' }}} } ;\r\n 23\r\n 24 warn Dumper $hoge;\r\n 25\r\n 26 warn Dumper last_value($hoge);\r\n||<\r\n\r\nçµæžœ\r\n\r\n>>\r\n$VAR1 = {\r\n          \'hoge\' => {\r\n                      \'hoge\' => {\r\n                                  \'hoge\' => {\r\n                                              \':terminate\' => \'true\'\r\n                                            }\r\n                                }\r\n                    }\r\n        };\r\n$VAR1 = {\r\n          \':terminate\' => \'true\'\r\n        };\r\n<<\r\n','2007-09-10 01:05:27','2007-09-09 16:05:27'),(117,'0UlznzrUYe','syslogè§£æž','perl','package SysLogAnalysis;\r\nuse strict;\r\nuse warnings;\r\nuse base qw/Class::Accessor::Fast/;\r\n\r\nuse IO::File;\r\nuse MF::DateTime;\r\n\r\nmy $syslog_file = \'/home/yamanaka/local/test/syslog\';\r\n\r\nsub run {\r\n    my $self = shift;\r\n\r\n    my $fh = IO::File->new( $syslog_file, \"r\" ) or die;\r\n\r\n    my @result;\r\n    while(my $line = $fh->getline ) {\r\n        chomp($line);\r\n        $line =~ m{^(\\S+)\\s(\\S+)\\s(\\S+)\\s(\\S+)\\s(\\S+)\\s(\\S+)\\s(.*)?};\r\n        my $time     = $3;\r\n        my $hostname = $4;\r\n        my $pgname   = $5;\r\n        my $user     = $6;\r\n        my $cmd      = $7;\r\n\r\n        if( $time ) {\r\n            eval{\r\n                my $datetime = MF::DateTime->strptime( \"@{[MF::DateTime->now->ymd]} $time\" , \"%Y-%m-%d %H:%M:%S\" );\r\n                warn $datetime , $cmd;\r\n            };\r\n            if($@) {\r\n                next;\r\n            }\r\n        }\r\n    }\r\n}\r\n','2007-09-11 16:59:21','2007-09-11 07:59:21'),(118,'ZWedkRHPvT','plutoèª¬æ˜Ž','works','â– ã€€Pluto2åˆ†æž\r\n\r\nplutoã¯åŸºæœ¬çš„ã«ãƒ›ã‚¹ãƒˆã‚µã‚¤ãƒˆã¨å‘¼ã°ã‚Œã‚‹ãƒ›ã‚¹ãƒˆãŒä¿æŒã™ã‚‹ã‚µã‚¤ãƒˆã¸åºƒå‘Šã‚’å¼µã‚Šå‡ºã—ã¾ã™ã€‚\r\nå¼µã‚Šå‡ºã•ã‚ŒãŸåºƒå‘Šã¯ã‚¯ãƒªãƒƒã‚¯ã‚’ã•ã‚Œã‚‹ã¨plutoï¼ˆhttp://ktaf.jp/c.cgi?a=xxxxxx)ã¸ã‚¢ã‚¯ã‚»ã‚¹ã—ã¾ã™ã€‚\r\nplutoã¯ã€ã‚¢ã‚¯ã‚»ã‚¹ã—ã¦ããŸåºƒå‘ŠIDã«è¨­å®šã•ã‚Œã¦ã„ã‚‹URLã¸ãƒªãƒ€ã‚¤ãƒ¬ã‚¯ãƒˆã‚’è¡Œã„ã¾ã™ã€‚\r\n\r\n[å›³ï¼‘]\r\n\r\n[ãƒ›ã‚¹ãƒˆã‚µã‚¤ãƒˆ]--------[pluto]------------------------[åºƒå‘Šã®ã‚µã‚¤ãƒˆ]\r\nåºƒå‘Šã‚’å‡ºã™ã‚ˆ          ãƒªãƒ€ã‚¤ãƒ¬ã‚¯ãƒˆã‚’ã™ã‚‹ã‚ˆ           \r\n\r\n\r\nã“ã“ã‹ã‚‰å…ˆãŒæä¾›ã—ã¦ã„ã‚‹ã‚µãƒ¼ãƒ“ã‚¹ã«ã‚ˆã£ã¦å‡¦ç†ãŒåˆ†ã‹ã‚Œã¾ã™ã€‚\r\næä¾›ã—ã¦ã„ã‚‹ã‚µãƒ¼ãƒ“ã‚¹ã¯ã€Œã‚¯ãƒªãƒƒã‚¯åºƒå‘Šã€ã¨ã€Œã‚¢ã‚¯ã‚·ãƒ§ãƒ³åºƒå‘Šã€ã®ï¼’ç¨®é¡žã€‚\r\n\r\nã‚¯ãƒªãƒƒã‚¯åºƒå‘Šã¯ã•ã‚‰ã«ï¼’ç¨®é¡žã«åˆ†é¡žã•ã‚Œã¦ã€ãƒªãƒ€ã‚¤ãƒ¬ã‚¯ãƒˆã•ã‚ŒãŸå€¤ã‚’åŸºã«æˆæžœã‚’å‡ºã™é¬¼ã‚¯ãƒªãƒƒã‚¯ã¨\r\nåºƒå‘Šã®ã‚µã‚¤ãƒˆï¼ˆã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆï¼‰ãŒã‚¯ãƒªãƒƒã‚¯ãŒããŸã¨ãã«ãã‚Œã‚’æˆæžœã¨ã—ã¦get requestã‚’ã—ã¦plutoã«è¿”ã—ãŸ\r\nå€¤ã‚’å…ƒã«æˆæžœã¨ã—ã¦ã‚«ã‚¦ãƒ³ãƒˆã™ã‚‹é¬¼GetãŒã‚ã‚‹ã€‚\r\n\r\nï¼‘ï¼Žé¬¼ã‚¯ãƒªãƒƒã‚¯\r\n	:ãƒªãƒ€ã‚¤ãƒ¬ã‚¯ãƒˆã•ã‚ŒãŸå€¤ã‚’åŸºã«æˆæžœã‚’å‡ºã™ã€‚\r\nï¼’ï¼Žé¬¼Get\r\n	ï¼šåºƒå‘Šã®ã‚µã‚¤ãƒˆï¼ˆã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆï¼‰ãŒã‚¯ãƒªãƒƒã‚¯ãŒããŸã¨ãã«ãã‚Œã‚’æˆæžœã¨ã—ã¦get requestã‚’ã—ã¦plutoã«è¿”ã™ä»•çµ„ã¿ã€‚\r\n\r\n\r\n\r\n\r\nãƒ»http://ktaf.jp/v.cgi\r\nãƒ»http://ktaf.jp/c.cgi\r\nãƒ»\r\n\r\n\r\n\r\n\r\n\r\n','2007-09-12 08:50:29','2007-09-11 23:50:29'),(119,'RZRtRnm0tN','XPathã‚’èª¿æŸ»','perl','use strict;\r\nuse warnings;\r\n\r\nuse HTML::TreeBuilder::XPath;\r\nuse HTML::Selector::XPath;\r\nuse LWP::UserAgent;\r\nuse Jcode;\r\nuse Data::Dumper;\r\n\r\nmy $url   = \'http://cal.syoboi.jp/rank2\';\r\nmy $agent = \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\";\r\nmy $exp   = \'table.tframe>tr>td\';\r\n\r\n{\r\n    my $ua = LWP::UserAgent->new({ agent => $agent});\r\n    my $response = $ua->get($url);\r\n\r\n    if( $response->is_success) {\r\n        my $html = Jcode->new($response->content)->euc;\r\n\r\n        # HTMLparse\r\n        my $t = HTML::TreeBuilder::XPath->new;\r\n        $t->parse($html);\r\n\r\n        # XPATH ã‚’ç”Ÿæˆ\r\n        my $xpath = HTML::Selector::XPath::selector_to_xpath($exp);\r\n        # ç›®çš„ã®ã‚‚ã®ã‚’æŽ¢ã™\r\n        my @nodes = $t->findnodes($xpath);;\r\n\r\n        warn Dumper \\@nodes;\r\n    }\r\n    else {\r\n        die $response->status_line;\r\n    }\r\n}\r\n','2007-09-13 15:28:57','2007-09-13 06:28:57'),(120,'NKeuR1ia39','postfix Connection timed out) ã®å¯¾ç­–','mail','\r\nã€ŒOP25Bã€å¯¾ç­–ã—ã¦ã„ã‚‹ãƒ—ãƒ­ãƒã‚¤ãƒ€ãƒ¼ã®å ´åˆã€ãƒ¡ãƒ¼ãƒ«ã‚’é€ã‚‹ã“ã¨ãŒã§ããªã„ã®ã§\r\nãã®å ´åˆã€ãƒªãƒ¬ãƒ¼ãƒ¡ãƒ¼ãƒ«ã‚’ä½¿ç”¨ã™ã‚‹å¿…è¦ãŒã‚ã‚‹ã€‚ç§çš„DDNSã®å ´åˆã„ã‹ã®ã‚µãƒ¼ãƒ“ã‚¹ã‚’\r\næä¾›ã—ã¦ã„ã‚‹ã®ã§ä¸‹è¨˜ã‚’åˆ©ç”¨ã™ã‚‹ã¨é€ã‚‹ã“ã¨ãŒã§ãã‚‹ã€‚\r\n\r\n\r\n\r\nhttp://www.mydns.jp/info20060328.html','2007-09-17 08:45:15','2007-09-16 23:45:15'),(121,'ztqjcMXfn2','root nodeã®è§£èª¬','Sixamo','\r\nåŸºæœ¬çš„ã«ã¯ã€nodeã«ã”ã‚“ã”ã‚“è¿½åŠ ã•ã‚Œã¦ã„ã‚‹ã®ã§ã“ã“ã§åãå‡ºã•ã‚Œã‚‹å€¤ã¯æ°—ã«ã™ã‚‹å¿…è¦ã¯ãªã„ã€‚\r\ndumpã™ã¹ãã¯ã€$self->{root}ã®ã»ã†ã€‚\r\n\r\n>>\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use boolean qw/:all/;\r\n  4 use Data::Dumper;\r\n  5\r\n  6 my $str = \'hello\';\r\n  7 my $node = {};\r\n  8 my $node_top = $node;\r\n  9\r\n 10 for my $byte (map ord, split //, $str) {\r\n 11     warn $byte;\r\n 12     $node->{$byte} = {};\r\n 13     warn Dumper $node;\r\n 14     $node = $node->{$byte};\r\n 15     warn $node;\r\n 16 }\r\n 17\r\n 18 $node->{terminate} = true;\r\n 19\r\n 20 warn Dumper $node_top;\r\n<<\r\n','2007-09-17 10:35:16','2007-09-17 01:35:16'),(122,'cIlReImpCN','longest_prefix_subwordè§£æž','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\ntalkã‚’è§£æžã™ã‚‹ã€‚\r\n\r\nã¾ãšã€keywordã‚’ä½œæˆã™ã‚‹ã€‚\r\n\r\n\r\ndic->split_into_keywords(str)\r\n\r\nã¨ã‚ã‚‹ã®ã ã‘ã©ã€æœ€çµ‚çš„ã«ã“ã¡ã‚‰ã®æ–¹æ³•ã¸ãŸã©ã‚Šç€ã\r\n\r\n\r\n> 728         def split_into_terms(str,num=nil)\r\n> 729             result = []\r\n> 730\r\n> 731             return result unless str\r\n> 732\r\n> 733             while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n> 734                 prefix = longest_prefix_subword(str)\r\n> 735                 if prefix\r\n> 736                     result << prefix\r\n> 737                     str = str[prefix.size..-1]\r\n> 738                 else\r\n> 739                     # str ã®é ­ã®ä¸€æ–‡å­—ãŒã»ã—ã„ã®ã­\r\n> 740                     chr = /./m.match(str)[0]\r\n> 741                     result << chr if num\r\n> 742                     str = Regexp.last_match.post_match\r\n> 743                 end\r\n> 744             end\r\n> 745\r\n> 746             result\r\n> 747         end\r\n\r\n\r\nã€Œlongest_prefix_subwordã€\r\n\r\n> 752         def longest_prefix_subword(str)\r\n> 753             node = @root\r\n> 754             result = nil\r\n> 755             idx = 0\r\n> 756             str.each_byte do |b|\r\n> 757                 result = str[0,idx] if node.key?(:terminate)\r\n> 758                 return result unless node.key?(b)\r\n> 759                 node = node[b]\r\n> 760                 idx += 1\r\n> 761             end\r\n> 762\r\n> 763             result = str if node.key?(:terminate)\r\n> 764             result\r\n> 765         end\r\n\r\n\r\n','2007-09-17 12:31:53','2007-09-17 03:31:53'),(123,'liYb5qrOpx','å„ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆã®æ¥½æ›²ä¸€è¦§ã‚’å‡ºã™ã‚„ã¤','works','use strict;\r\nuse warnings;\r\nuse Data::Dumper;\r\nuse JSON::Syck;\r\nuse LWP::UserAgent;\r\n\r\nmy $token = \'ThlA6DrEEY\';\r\nmy $url      = \"http://admin.juke-box.mfac.jp/api/artist/list?token=$token&iutakami=0&no_paging=1\";\r\nmy $ua = LWP::UserAgent->new;\r\nmy $res = $ua->get($url) ;\r\nmy $artist_list =  JSON::Syck::Load( $res->content ) ;\r\n\r\nsub artist_melody {\r\n    my $rid = shift;\r\n    my $url = \"http://admin.juke-box.mfac.jp/api/artist/?token=$token&artist=$rid\";\r\n    my $ua = LWP::UserAgent->new;\r\n    my $response = $ua->get($url);\r\n    if( $response->is_success) {\r\n        return JSON::Syck::Load( $response->content );\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n}\r\n\r\nfor my $artist ( @{$artist_list->{data}} ) {\r\n\r\n    sleep 1;\r\n    my $artist_melody = &artist_melody($artist->{rid});\r\n    my @melody = @{$artist_melody->{contents}} if $artist_melody;\r\n\r\n    print \"=============================================\\n\";\r\n    print $artist->{name}.\"\\n\";\r\n    print $artist->{name_kana}.\"\\n\";\r\n    print $artist->{rid}.\"\\n\";\r\n    print scalar(@melody).\"\\n\";\r\n    print \"---------------------------------------------\\n\";\r\n    if( $artist_melody ) {\r\n        for my $melody ( @melody ) {\r\n            print \"\\t\".$melody->{title}.\"\\n\";\r\n        }\r\n    }\r\n    print \"---------------------------------------------\\n\";\r\n    print \"=============================================\\n\";\r\n\r\n}\r\n','2007-09-20 15:23:23','2007-09-20 06:23:23'),(124,'lUi94OQgDp','å„æ¥½æ›²ã®ä¸€è¦§ã‚’å‡ºã™Script','works','use Text::CSV_XS;\r\n\r\nmy $csv = Text::CSV_XS->new({binary => 1 });\r\n\r\n$csv->combine(\r\n    qw/\r\n        ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆå\r\n        æ›²æ•°ã‚«ã‚¦ãƒ³ãƒˆ(uta)\r\n        æ›²æ•°ã‚«ã‚¦ãƒ³ãƒˆ(melody)\r\n    /\r\n);\r\n\r\nprint $csv->string.\"\\n\";\r\n\r\nfor my $artist ( @{$artist_list->{data}} ) {\r\n\r\n    sleep 1;\r\n    my $artist_melody = &artist_melody($artist->{rid});\r\n\r\n    my %count;\r\n    if( $artist_melody ) {\r\n        for my $type ( qw/melody uta/ ) {\r\n            $count{$type} = scalar( grep { $_->{type} eq $type } @{$artist_melody->{contents}} ) || 0 ;\r\n        }\r\n    }\r\n    $csv->combine(\r\n        $artist->{name},\r\n        $count{uta},\r\n        $count{melody},\r\n    );\r\n    print $csv->string.\"\\n\";\r\n\r\n}\r\n','2007-09-20 16:44:28','2007-09-20 07:44:28'),(125,'Otvmyq2muS','ãƒ‰ãƒ©ãƒžä¸€è¦§ã‚’å–å¾—ã™ã‚‹','perl','use strict;\r\nuse warnings;\r\n\r\nuse Web::Scraper;\r\nuse URI;\r\nuse Jcode;\r\n\r\nmy $url = \'http://artv.info/ar0707.html\';\r\n\r\nmy $dorama = scraper {\r\n    process \"table.sort>tr>td.left>a\", \"title[]\" => \'TEXT\';\r\n    result  \"title\";\r\n};\r\n\r\nmy $results = $dorama->scrape( URI->new($url) );\r\n\r\nfor my $result (@{$results}) {\r\n    print Jcode->new($result,\'utf8\')->euc.\"\\n\";\r\n}\r\n\r\n\r\n~\r\n~\r\n','2007-09-21 12:30:42','2007-09-21 03:30:42'),(126,'0kEGSmbCaf','è§£æžãƒ¡ãƒ¢','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\næŒ™å‹•ã‚’è¿½ã†ã€‚\r\n\r\nï¼‘ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆç”Ÿæˆ\r\n\r\nSixamo->newï¼›\r\n\r\n>  44     def Sixamo.new(*args)\r\n>  45         Sixamo::Core.new(*args)\r\n>  46     end\r\n>  47\r\n\r\n\r\nã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ç”Ÿæˆæ™‚ã«è¾žæ›¸ã‚’èª­ã¿è¾¼ã‚“ã§åˆæœŸåŒ–ã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\n> 219     class Core\r\n> 220\r\n> 221         def initialize(dirname)\r\n> 222             @dic = Dictionary.load(dirname)\r\n> 223         end\r\n\r\nã§ã€Dictonary.loadã®ä¸­èº«ã¯ä½•ã‹ã¨ã„ã†ã¨\r\n\r\n> 313         def Dictionary.load(dirname)\r\n> 314             dic = Dictionary.new(dirname)\r\n> 315             dic.load_text\r\n> 316             dic.load_dictionary\r\n> 317             dic\r\n> 318         end\r\n\r\nã“ã‚ŒãŒã‚­ãƒ¢ã‚¤ã®ã§ã™ãŒã€ãªã‹ã§newã—ã¦ã‚„ãŒã‚Šã¾ã™ã€‚\r\n\r\n> Dictionary.new\r\n\r\nåˆæœŸåŒ–ã®ä¸­èº«ã¯ã“ã¡ã‚‰\r\n\r\n> 321         def initialize(dirname=nil)\r\n> 322             @occur = {}\r\n> 323             @rel = {}\r\n> 324             @trie = Trie.new\r\n> 325\r\n> 326             @dirname = dirname\r\n> 327             @text_filename = \"#{@dirname}/#{TEXT_FILENAME}\"\r\n> 328             @dic_filename  = \"#{@dirname}/#{DIC_FILENAME}\"\r\n> 329             @text = []\r\n> 330\r\n> 331             @line_num = 0\r\n> 332         end\r\n\r\nã¾ã‚ã€åŸºæœ¬çš„ã«ã¯ãƒ•ã‚¡ã‚¤ãƒ«åã¨ç©ºã®ãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ã‚’ä¿æŒã—ãŸã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’ç”Ÿæˆã—ã¦ã„ã‚‹ã ã‘ã§ã™ã€‚\r\næ°—ã«ã™ã‚‹ã¹ãç‚¹ã¯ã€\r\n\r\n> Trie.new\r\n\r\nã§åˆ¥ã‚¯ãƒ©ã‚¹ã‚’ç”Ÿæˆã—ã¦ã„ã‚‹ç‚¹ã§ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-09-22 05:46:04','2007-09-21 20:46:04'),(127,'tGw5XDQuot','ã—ã—ã‚ƒã‚‚è§£æžã€€å‡¦ç†é †','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\næŒ™å‹•ã‚’è¿½ã†ã€‚\r\n\r\nï¼‘ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆç”Ÿæˆ\r\n\r\nSixamo->newï¼›\r\n\r\n>  44     def Sixamo.new(*args)\r\n>  45         Sixamo::Core.new(*args)\r\n>  46     end\r\n>  47\r\n\r\n\r\nã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã®ç”Ÿæˆæ™‚ã«è¾žæ›¸ã‚’èª­ã¿è¾¼ã‚“ã§åˆæœŸåŒ–ã‚’è¡Œã£ã¦ã„ã‚‹ã€‚\r\n\r\n> 219     class Core\r\n> 220\r\n> 221         def initialize(dirname)\r\n> 222             @dic = Dictionary.load(dirname)\r\n> 223         end\r\n\r\nã§ã€Dictonary.loadã®ä¸­èº«ã¯ä½•ã‹ã¨ã„ã†ã¨\r\n\r\n> 313         def Dictionary.load(dirname)\r\n> 314             dic = Dictionary.new(dirname)\r\n> 315             dic.load_text\r\n> 316             dic.load_dictionary\r\n> 317             dic\r\n> 318         end\r\n\r\nã“ã‚ŒãŒã‚­ãƒ¢ã‚¤ã®ã§ã™ãŒã€ãªã‹ã§newã—ã¦ã‚„ãŒã‚Šã¾ã™ã€‚\r\n\r\n> Dictionary.new\r\n\r\nåˆæœŸåŒ–ã®ä¸­èº«ã¯ã“ã¡ã‚‰\r\n\r\n> 321         def initialize(dirname=nil)\r\n> 322             @occur = {}\r\n> 323             @rel = {}\r\n> 324             @trie = Trie.new\r\n> 325\r\n> 326             @dirname = dirname\r\n> 327             @text_filename = \"#{@dirname}/#{TEXT_FILENAME}\"\r\n> 328             @dic_filename  = \"#{@dirname}/#{DIC_FILENAME}\"\r\n> 329             @text = []\r\n> 330\r\n> 331             @line_num = 0\r\n> 332         end\r\n\r\nã¾ã‚ã€åŸºæœ¬çš„ã«ã¯ãƒ•ã‚¡ã‚¤ãƒ«åã¨ç©ºã®ãƒ‘ãƒ©ãƒ¡ãƒ¼ã‚¿ã‚’ä¿æŒã—ãŸã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’ç”Ÿæˆã—ã¦ã„ã‚‹ã ã‘ã§ã™ã€‚\r\næ°—ã«ã™ã‚‹ã¹ãç‚¹ã¯ã€\r\n\r\n> Trie.new\r\n\r\nã§åˆ¥ã‚¯ãƒ©ã‚¹ã‚’ç”Ÿæˆã—ã¦ã„ã‚‹ç‚¹ã§ã™ã€‚\r\n\r\n\r\n684         def initialize(ary=nil)\r\n685             @root = {}\r\n686             if ary\r\n687                 ary.each { |elm| self.add(elm) }\r\n688             end\r\n689         end\r\n\r\n\r\nåˆæœŸåŒ–ã§ã¯å¼•æ•°ã§å—ã‘å–ã£ãŸå€¤ã‚’å…ƒã«åˆæœŸåŒ–ã‚’è¡Œã£ã¦ã„ã‚‹ã®ã§ã™ãŒã€\r\nã“ã®æ™‚ç‚¹ã§ã¯æ¸¡ã—ã¦ãªã„ã®ã§ã¨ãã«ä½•ã‚‚å‡¦ç†ã¯ã—ã¦ã„ãªã„ã¯ãšã§ã™ã€‚\r\n\r\nãã‚Œã§æ¬¡ã®è¡Œã® load_text ãŒã‚ˆã°ã‚Œã¦ã„ã¾ã™ã€‚\r\n\r\n> 315             dic.load_text\r\n\r\n\r\n334         def load_text\r\n335             return unless File.readable?(@text_filename)\r\n336\r\n337             File.open(@text_filename) do |fp|\r\n338                 fp.each do |line|\r\n339                     line.chomp!\r\n340                     @text << line\r\n341                 end\r\n342\r\n343         end\r\n\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€sixamo/sixamo.txt ã«ã‚ã‚‹ãƒ•ã‚¡ã‚¤ãƒ«ã‚’ã‚ˆã¿ã“ã¿ã¾ã™ã€‚\r\n\r\n\r\nã¡ãªã¿ã«ã“ã®ãƒ•ã‚¡ã‚¤ãƒ«ã¯ã“ã‚“ãªæ„Ÿã˜ã®ãƒ•ã‚¡ã‚¤ãƒ«æ§‹é€ ã‚’ã—ã¦ã„ã¾ã™ã€‚\r\n\r\nå®Ÿéš›ã«ã‚†ãƒ¼ã–ãƒ¼ã«ã€€æ›¸ãè¾¼ã¾ã‚ŒãŸæ–‡å­—åˆ—ãŒåˆ—å±…ã•ã‚Œã¡ã¾ã™ã€‚\r\n\r\n\r\n  1 ã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\n  2 ã¦ã™ã¨ã ã‚ˆ\r\n  3 ã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\n  4 OhYear\r\n  5 ãˆãˆãˆãˆãˆãˆãˆ\r\n  6 ãŠã®ã‚Œ\r\n  7 æ”¯ç¤¾ã‚‚ã®ãã›ã«\r\n  8 ä»Šç•œç”Ÿ\r\n  9 ã»ã’\r\n 10 test\r\n 11 aaa\r\n 12 ä½•ã§ã‚„å¹´\r\n 13 ã¦ã™ã¨\r\n\r\nå­¦ç¿’ç”¨ã«ã‚‚ä½¿ãˆã¾ã™ãŒã€ãŠãã‚‰ãã¯ãã»ã‚“ã®ãƒ­ã‚°ã§ã—ã‚‡ã†ã€‚\r\n\r\næ¬¡ã«ã€€load_dictionaryãŒå‘¼ã°ã‚Œã¦ã„ã¾ã™\r\n\r\n> 316             dic.load_dictionary\r\n\r\nä¸­èº«ã¯ã“ã‚“ãªæ„Ÿã˜ã€\r\n\r\n345         def load_dictionary\r\n346             return unless File.readable?(@dic_filename)\r\n347             File.open(@dic_filename) do |fp|\r\n348\r\n\r\næœ€åˆã«ã€sixamo.dicã€€ã‹ã‚‰ãƒ•ã‚¡ã‚¤ãƒ«ã‚’èª­ã¿è¾¼ã‚“ã§ã„ã‚‹\r\n\r\n\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n\r\næœ€åˆã®ã€€line_num ã®å€¤ã‚’èª­ã¿è¾¼ã‚“ã§ã„ã‚‹ \r\n\r\n349                 # header\r\n350                 fp.each do |line|\r\n351                     line.chomp!\r\n352                     case line\r\n353                     when /^$/\r\n354                         break\r\n355                     when /line_num:\\s*(.*)\\s*$/i\r\n356                         @line_num = $1.to_i\r\n357                     else\r\n358                         STDERR.puts \" #{@dic_filename}:[Warning] Unknown_header #{line}\"\r\n359                     end\r\n360                 end\r\n361\r\n362                 GC.disable\r\n\r\næ¬¡ã«æ–‡å­—åˆ—ã¨æ•°åˆè¨ˆå€¤ã€ãã—ã¦é–¢é€£ã™ã‚‹æ–‡å­—ã‚³ãƒ¼ãƒ‰ã®åˆ—ã‚’ã‚ˆã¿ã“ã‚€\r\n\r\n\r\n364                 # body\r\n365                 fp.each do |line|\r\n366                     line.chomp!\r\n367                     word, num, sum, occur = line.split(/\\t/)\r\n368                     if occur\r\n369                         @occur[word] = occur.split(/,/).collect { |l| l.to_i }\r\n370                         add_term(word)\r\n371                         @rel[word] = Hash.new(0)\r\n372                         @rel[word][:num] = num.to_i\r\n373                         @rel[word][:sum] = sum.to_i\r\n374\r\n375                     end\r\n376                 end\r\n377\r\n378                 GC.enable\r\n379                 GC.start\r\n\r\nç°¡å˜ã«kã«ã„ãˆã°ã“ã‚Œã¯ã€å˜èªžã«ã¾ã¤ã‚ã‚‹ãƒ‡ãƒ¼ã‚¿ã‚’ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã¸ãƒ­ãƒ¼ãƒ‰ã—ã¦ã„ã‚‹ã€‚\r\nãã‚Œã§ã€add_termã¯ã€ãªã«ã‚’ã‚„ã£ã¦ã„ã‚‹ã‹ã¨ã„ãˆã°ã€\r\n\r\n595         def add_term(str)\r\n596             @occur[str] = [] unless @occur.key?(str)\r\n597             @trie.add(str)\r\n598             @rel[str] = Hash.new(0) unless @rel.key?(str)\r\n599         end\r\n\r\nã“ã“ã§ã‚ˆã†ã‚„ãtrie.addã€€ãŒç¾ã‚Œã‚‹ã€‚\r\n\r\n\r\nãªãŒã‚Œã‹ã‚‰è€ƒãˆã‚‹ã¨ã€sixamo.dic ã®ä¸­ã«ã‚ã‚‹å˜èªžã‚’è¿½åŠ ã—ã¦ã„ã‚‹ã€‚\r\n\r\n691         def add(str)\r\n692             node = @root\r\n693             str.each_byte do |b|\r\n694                 node[b] = {} unless node.key?(b)\r\n695                 node = node[b]\r\n696             end\r\n697             node[:terminate] = true\r\n698         end\r\n\r\n\r\nã“ã¡ã‚‰ã¯ã€@rootã¸å˜èªžã®ã‚‚ã¤æ–‡å­—ã®ã‚³ãƒ¼ãƒ‰ã®ãƒŽãƒ¼ãƒ‰ã‚’ä½œæˆã™ã‚‹ã€‚\r\n\r\n\r\nâ–¡åˆæœŸåŒ–ãƒ•ã‚§ãƒ¼ã‚ºã®çµ‚äº†â–¡\r\n\r\nå¯¾è©±ã®é–‹å§‹\r\n\r\nè¡Œã‹ã‚‰æ–‡å­—åˆ—ã‚’å—ã‘å–ã£ãŸã‚‰\r\n\r\n825                 sixamo.memorize(str)\r\n826                 res = sixamo.talk\r\n\r\nãƒ»sixamo.memorize\r\nãƒ»sixamo.talk\r\n\r\nã®ï¼’ã¤ã®å‡¦ç†ãŒèµ°ã‚Šã¾ã™ã€‚\r\n\r\nmemorizeã€€ã¯ä»¥ä¸‹ã®ã‚ˆã†ãªå‡¦ç†ã‚’è¡Œã†ã€‚\r\n\r\n264         def memorize(lines)\r\n265             @dic.store_text(lines)\r\n266             if @dic.learn_from_text\r\n267                 @dic.save_dictionary\r\n268             end\r\n269         end\r\n\r\nå…·ä½“çš„ã«ã¯ã€\r\n\r\nãƒ»dic.store_text\r\nãƒ»dic.save_dictionary\r\n\r\nä¸Šè¨˜ã®ï¼’ã¤ã‚’å®Ÿè¡Œã™ã‚‹ã€‚\r\n\r\nstore_textã€€ã¯ç©ºç™½è¡Œã‚’å‰Šé™¤ã—ãŸä¸Šã§ sixamo.txt ã¸è¿½åŠ å‡¦ç†ã‚’ãŠã“ãªã†\r\n\r\n461         def store_text(lines)\r\n462             ary = []\r\n463             lines.each do |line|\r\n464                 ary << line.gsub(/\\s+/, \' \').strip\r\n465             end\r\n466\r\n467             ary.each do |line|\r\n468                 @text << line\r\n469             end\r\n470\r\n471             File.open(@text_filename, \'a\') do |fp|\r\n472                 ary.each do |line|\r\n473                     line.chomp!\r\n474\r\n475                     fp.puts line\r\n476                 end\r\n477             end\r\n478         end\r\n\r\nä¸‹è¨˜ã®ã‚ˆã†ã«è¿½è¨˜ã•ã‚Œã¦ã„ããã‚Œã»ã©é›£ã—ã„ã“ã¨ã¯ã‚„ã£ã¦ã„ãªã„ã€‚\r\n\r\n128 ts\r\n129 hello worled\r\n130 hello\r\n131 test\r\n132 test\r\n133 test\r\n134 test\r\n\r\n\r\næ¬¡ã«ã€ dic.learn_from_text ãŒçœŸã‚’ã‹ãˆã—ãŸã‚‰\r\n\r\n\r\ndic.save_dictionary\r\n\r\n\r\nã‚’å®Ÿè¡Œã•ã›ã‚‹ã€‚\r\n\r\nlearn_from_text ã¯å‡¦ç†ã®ä¸­ã«progressã®è¡¨ç¤ºãŒå…¥ã£ã¦ã„ã‚‹ãŸã‚å°‘ã€…è¦‹ã¥ã‚‰ã„ã€‚\r\n\r\n\r\nprogress ã®æŒ‡å®šãŒã‚ã£ãŸå ´åˆã€ä¸‹è¨˜ã®éƒ¨åˆ†ãŒå®Ÿè¡Œã•ã‚Œã‚‹ã€‚ãŸã ã€å¿…ãšï¼ã«ãªã‚‹ã®ã§\r\nã»ã¼æ„å‘³ã¯ãªã„ã€‚\r\n\r\n\r\n425                 if progress\r\n426                     idx2 = read_size/WindowSize * WindowSize\r\n427\r\n428                     if idx2 % 100_000 == 0\r\n429                         STDERR.printf \"\\n%5dk \", idx2/1000\r\n430                     elsif idx2 % 20_000 == 0\r\n431                         STDERR.print \"*\"\r\n432                     elsif idx2 % 2_000 == 0\r\n433                         STDERR.print \".\"\r\n434                     end\r\n435                 end\r\n\r\næ¬¡ã«ç¾åœ¨ã®ã€€@line_num ã¨ @textã®ã‚µã‚¤ã‚ºæ¯”è¼ƒã§ç¾åœ¨ã®@line_numãŒå¤§ãã„ ã°ã‚ã„ã€€end_flagã‚’çœŸã«ã—ã¦çµ‚äº†	\r\n\r\n437                 tmp = read_size\r\n438                 while tmp/WindowSize == read_size/WindowSize\r\n439                     if idx >= @text.size\r\n440                         end_flag = true\r\n441                         break\r\n442                     end\r\n\r\nãã†ã§ãªã‘ã‚Œã°ã€buf[]ã¸ãƒ†ã‚­ã‚¹ãƒˆã‚’è¿½åŠ ã—ã¦ã„ã\r\n\r\n443                     buf << @text[idx]\r\n\r\nãã—ã¦ã€å„ãƒ†ã‚­ã‚¹ãƒˆã®ã‚µã‚¤ã‚ºã‚’tmpã¸è¿½åŠ ã™ã‚‹ã€‚\r\n\r\n444                     tmp += @text[idx].size\r\n445                     idx += 1\r\n446                 end\r\n\r\næœ€å¾Œã«å…¨ãƒ†ã‚­ã‚¹ãƒˆã®ã‚µã‚¤ã‚ºã‚’ã€€read_size ã¸ã„ã‚Œã‚‹ã€‚\r\n\r\n447                 read_size = tmp\r\n\r\nã“ã®æ™‚ç‚¹ã§ã€€end_flagã€€ãŒãŸã£ã¦ã„ã‚Œã°çµ‚äº†\r\n\r\n449                 break if end_flag\r\n450\r\n\r\nbuf_prevã€€ã®ã‚µã‚¤ã‚ºãŒï¼ã‚ˆã‚Šå¤§ãã‘ã‚Œã°\r\n\r\n451                 if buf_prev.size > 0\r\n452                     learn(buf_prev+buf, @line_num)\r\n453                     modified = true\r\n454\r\n455                     @line_num += buf_prev.size\r\n456                 end\r\n\r\nlearn ã‚’å®Ÿè¡Œã•ã›ã‚‹\r\n\r\nlines ã«ã¯ç¾åœ¨ã¾ã§ã®ãƒ†ã‚­ã‚¹ãƒˆãŒå…¥ã‚Œã¦ã‚ã‚‹ã®ã§ã€ãã‚Œã‚’ã‚‚ã¨ã®ã«ã—ã¦å­¦ã°ã›ã‚‹\r\n\r\n485             new_terms = Freq.extract_terms(lines,30)\r\n\r\nå¼•æ•°ã®æ–‡å­—åˆ—jã‚’ã“ã‚“ãªæ„Ÿã˜ã§åˆæœŸåŒ–ã—ã¦å—ã‘å–ã‚‹ã€‚\r\n\r\n627         def Freq.extract_terms(buf,limit)\r\n628             Freq.new(buf).extract_terms(limit)\r\n629         end\r\n630\r\n\r\nã¯ã„ã‚Œã¤ãªã‚‰ã€(\"\\0\") ã§jjoinã—ãˆå—ã‘å–ã‚‹ã€‚\r\n\r\n631         def initialize(buf)\r\n632             buf = buf.join(\"\\0\") if buf.kind_of?(Array)\r\n633             @buf = buf\r\n634         end\r\n635\r\n\r\nãã®ä¸Šã§extract_termsã‚’å®Ÿè¡Œã•ã›ã‚‹ã€‚\r\n\r\n636         def extract_terms(limit)\r\n637             terms = extract_terms_sub(limit)\r\n638\r\n\r\nã„ããªã‚Šã•ã‚‰ã«åˆ¥ã®ãƒ¡ã‚½ãƒƒãƒ‰ã‚’å‘¼ã‚“ã§ã„ã‚‹ã€‚ã—ã­ã°ã„ã„ã®ã«\r\n\r\nã“ã¡ã‚‰ã®extract_terms_subã¯\r\n\r\n\r\n656         def extract_terms_sub(limit,str=\'\',num=1,width=false)\r\n657             h = freq(str)\r\n\r\næœ€åˆã«å—ã‘å–ã£ãŸfreqã€€ã§å‡¦ç†ã—ã¦ã‹ãˆã™ã€‚\r\n\r\n\r\n676         def freq(str)\r\n677             freq = Hash.new(0)\r\n678\r\n679             if str.size == 0\r\n680                 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n681                 @buf.scan(regexp) { |ary| freq[ary[0] || ary[1] || ary[2]] += 1 }\r\n682             else\r\n683                 regexp = /#{Regexp.quote(str)}[^\\0]?/i\r\n684                 @buf.scan(regexp) { |str| freq[str] += 1 }\r\n685             end\r\n686\r\n687             freq\r\n688         end\r\n\r\nfreqã€€ã¯æ­£è¦è¡¨ç¾ã§ãƒžãƒƒãƒã—ãŸã‚‚ã®ã‚’ã‚­ãƒ¼ã«ã—ãŸé…åˆ—ã«è¿”ã™ã€‚\r\n\r\n658             flag = (h.size <= 4)\r\n659\r\n\r\nhash.szieãŒï¼”ã‚ˆã‚Šå°ã•ã‘ã‚Œã°flagã‚’ãŸã¦ã‚‹ã€‚\r\n\r\n660             result = []\r\n661             if limit > 0\r\n662                 h.delete(str) if h.key?(str)\r\n663                 h.to_a.delete_if { |k,v| v < 2 }.sort.each do |k,v|\r\n664                     result.concat( extract_terms_sub(limit-1, k, v, flag) )\r\n665                 end\r\n666             end\r\n667\r\n\r\nlimitã€€ãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã°ã€è¦å®šå€¤ã‚ˆã‚Šå¤§ãã„ã‚‚ã®ã¯æ¶ˆã™ã€‚\r\n\r\n668             if result.size == 0 && width\r\n669                 return [[str.downcase,num]]\r\n670             end\r\n671\r\n672             result\r\n673         end\r\n\r\nçµæžœã®ã‚µã‚¤ã‚ºãŒï¼ãªã‚‰çµæžœé…åˆ—ã‚’è¿”ã™ä¼Šã€‚\r\n\r\n\r\n639             terms = terms.collect {|t,n| [t.reverse.strip,n] }.sort\r\n\r\né…åˆ—ä¸­ã®Hashã‚’keyã§ã‚½ãƒ¼ãƒˆã—ã¦ãŠã\r\n\r\n\r\n640\r\n641             terms2 = []\r\n642             (terms.size-1).times do |idx|\r\n\r\né…åˆ—ã®æ•°ã¶ã‚“ã ã‘ç¹°ã‚Šè¿”ã™ã€‚\r\n\r\n643                 if terms[idx][0].size >= terms[idx+1][0].size ||\r\n\r\né…åˆ—ã®æœ€åˆã®æœ€åˆã®ã‚µã‚¤ã‚ºã¨ãã®æ¬¡ã®ã‚µã‚¤ã‚ºãŒã‚’æ¯”è¼ƒã—ãŸã¨ãã«ä»Šã®ã‚µã‚¤ã‚ºãŒå‘ŠãŽã‚ˆã‚Šå¤§ãã‹ã£ãŸrã‚‰å®Ÿè¡Œ\r\n\r\n644                         terms[idx][0] != terms[idx+1][0][0,terms[idx][0].size]\r\n\r\nè‹¥ã—ãã¯ã€\r\nFIXME: ç‹‚ã£ã¦ã‚‹\r\n\r\n645                     terms2 << terms[idx]\r\n\r\nç¾åœ¨ã®å˜èªžã‚’ã€€terms2ã€€ã¸ã„ã‚Œã‚‹ã€‚\r\n\r\n646                 elsif terms[idx][1] >= terms[idx+1][1] + 2\r\n647                     terms2 << terms[idx]\r\n648                 end\r\n\r\nã‚‚ã†ä¸€å€‹ã®æ¡ä»¶ã‚‚ã‚¯ãƒªã‚¢ã—ãŸã‚‰åŒæ§˜ã«terms2ã¸ã„ã‚Œã‚‹ã€‚\r\n\r\n649             end\r\n650             terms2 << terms[-1] if terms.size > 0\r\n651\r\n\r\né…åˆ—ã‚’é™é †ã§ä¸¦ã¹æ›¿ãˆã¦ã‹ãˆã™ã€‚\r\n\r\n652             terms2.collect {|t,n| t.reverse }\r\n653         end\r\n\r\nè©±ã¯ã€learnã€€ã¸ã‚‚ã©ã£ã¦ã€çµæžœ\r\n\r\n484         def learn(lines,idx=nil)\r\n\r\nçµæžœå¾—ã‚‹ã“ã¨ãŒã§ããŸå˜èªžã‚’add_termå‡¦ç†ã•ã›ã‚‹ã€‚k\r\n\r\n486             new_terms.each { |term| add_term(term) }\r\n\r\nã‚‚ã—ã€å­¦ç¿’ã«idxãŒæŒ‡å®šã•ã‚Œã¦ã„ãŸã‚‰\r\n\r\n487\r\n488             if idx\r\n489                 words_all = []\r\n490                 lines.each_with_index do |line,i|\r\n491                     num = idx + i\r\n\r\nå˜èªžã«åˆ†å‰²ã™ã‚‹\r\n\r\n492                     words = split_into_terms(line)\r\n493                     words_all.concat(words)\r\n\r\nã™ã¹ã¦ã®å˜èªžã‚’é€£çµã—ãŸã‚‚ã®ã‚’words_allã¸ã„ã‚Œã‚‹\r\n\r\n494                     words.each do |term|\r\n495                         if @occur[term].empty? || num > @occur[term][-1]\r\n496                             @occur[term] << num\r\n497                         end\r\n498                     end\r\n\r\n@occur ã¸ç¾åœ¨ã®index + 1 noå€¤ã‚’å…¥ã‚Œã‚‹\r\n\r\n499                 end\r\n500\r\n\r\næ¬¡ã«weight_updateã‚’ã™ã¹ã¦ã®å˜èªžã§è¡Œã†ã€‚\r\n\r\n501                 weight_update(words_all)\r\n\r\nweight_updateã¯ä»¥ä¸‹ã®ã‚ˆã†ãªã—ã‚‡ã‚Šã«ãªã‚‹ã€‚\r\n\r\n556         def weight_update(words)\r\n557             width = 20\r\n558\r\n\r\n@rel nã«keyãŒãªã‘ã‚Œã°ã€€ã‹ã‚‰ã®Hashã¸ã‚’ãã®å˜èªžã§æŒãŸã›ã‚‹\r\n\r\n559             words.each do |term|\r\n560                 @rel[term] = Hash.new(0) unless @rel.key?(term)\r\n561             end\r\n\r\nwords.size - 20 å›žã‚’ç¹°ã‚Šè¿”ã™\r\n\r\n562\r\n563             size = words.size\r\n564             (size-width).times do |idx1|\r\n565                 word1 = words[idx1]\r\n566\r\n\r\nç¾åœ¨ã®indx1ï¼‹ï¼‘ã‹ã‚‰idx1ï¼‹ï¼’ï¼ã ã‘ã®kaã‚«ã‚¦ãƒ³ãƒˆUPã§ã¾ã‚ã™ã€‚\r\n\r\n567                 (idx1+1).upto(idx1+width) do |idx2|\r\n568                     @rel[word1][:num] += 1 if word1 == words[idx2]\r\n569                     @rel[word1][:sum] += 1\r\n570                 end\r\n\r\nã‚‚ã—ã€ç¾åœ¨ã®å˜èªžã¨è§£æžä¸­ã®ç¯„å›²ã§ä¸€è‡´ã™ã‚‹ã‚‚ã®ãŒã‚ã‚Œã°ã€€@rel[word1][:num]ã€€ã‚’ãƒ—ãƒ©ã‚¹ï¼‘ã™ã‚‹ã€‚\r\nä¸€è‡´ã—ãªãã¦ã‚‚ä¸€è‡´ã—ã¦ã‚‚ã™ã¹ã¦ã®å ´åˆã«ãŠã„ã¦sumã‚’ï¼‹ï¼‘ã™ã‚‹ã€‚\r\n\r\n571             end\r\n572\r\n\r\n20 + 1 . times ç¹°ã‚Šè¿”ã™\r\n\r\n573             (width+1).times do |idx1|\r\n574                 word1 = words[-idx1]\r\n575\r\n\r\næ¤œç´¢ã™ã‚‹ç¯„å›²ã¯ã€-1 .. -20 ( reverse ) ã¨ã„ã†ã“ã¨ã€‚\r\n\r\nã‚‚ã—ã€word1ã€€wordsã«å¯¾å¿œã™ã‚‹å˜èªžãŒå­˜åœ¨ã—ã¦ã„ã‚Œã°ä¸‹è¨˜ã‚’å®Ÿè¡Œ\r\n\r\n576                 if word1\r\n577                     (idx1-1).downto(1) do |idx2|\r\n578                         @rel[word1][:num] += 1 if word1 == words[-idx2]\r\n579                         @rel[word1][:sum] += 1\r\n580                     end\r\n581                 end\r\n\r\nã‚ˆã†ã¯é•ã†ç¯„å›²ã‚’å­¦ç¿’å¯¾è±¡ã«ã—ã‚ˆã†ã¨ã—ã¦ã„ã‚‹ã€‚\r\n\r\nFIXME: iã„ã‚„ã€ã“ã“ã“ãæŠ½è±¡åŒ–ã—ã‚ã‚ˆã€‚ \r\n\r\n582             end\r\n583         end\r\n\r\nweight_update gaãŒçµ‚äº†ã—ãŸã‚‰ã€\r\n\r\n502\r\n503                 self.terms.each do |term|\r\n\r\ntermsã‚’ãã‚‹ãã‚‹ã¾ã‚ã—ã¦ã€€occurã€€sizeã€€ã‚’ãˆã‚‹ã€‚\r\n\r\n504                     occur = @occur[term]\r\n505                     size = occur.size\r\n506\r\n\r\nã‚µã‚¤ã‚ºãŒï¼”ã‚ˆã‚Šå°ã•ãã€ï¼ã‚ˆã‚Šå¤§ããã€occur[-1]+size*150 < idxã€€ã ã£ãŸå ´åˆã¯å˜èªžã‚’å‰Šé™¤ã™ã‚‹ã€‚\r\n\r\n507                     if size < 4 && size > 0 && occur[-1]+size*150 < idx\r\n508                         del_term(term)\r\n509                     end\r\n510                 end\r\n511             end\r\n512         end\r\n\r\nå‰Šé™¤ã¯ä¸‹è¨˜ã®å‡¦ç†ã‚’ãŠã“ãªã†ã€‚\r\n\r\n609         def del_term(str)\r\n610             occur = @occur[str]\r\n\r\nã™ã¹ã¦ã®ãŠã¶ã˜ã‡ãã¨ã‹ã‚‰å‰Šé™¤\r\n\r\n611             @occur.delete(str)\r\n612             @trie.delete(str)\r\n613             @rel.delete(str)\r\n614\r\n\r\nweight_updateã‚’å†å®Ÿè¡Œ\r\n\r\n615             tmp = split_into_terms(str)\r\n616             tmp.each { |w| @occur[w] = @occur[w].concat(occur).uniq.sort }\r\n617             weight_update(tmp) if tmp.size > 0\r\n618         end\r\n\r\nå¤§ä½“ã«ãŠã„ã¦ç´°ã‹ã„èª¿æ•´ã‚’è¡Œã£ãŸã†ãˆã§ã‘ã—ã¦ã„ã‚‹ã€‚\r\n\r\n457\r\n458                 buf_prev = buf\r\n459             end\r\n460             STDERR.print \"\\n\" if progress\r\n461\r\n462             modified\r\n463         end\r\n\r\n\r\nã“ã“ã¾ã§ããŸã‚‰ã€learn_from_textã€€ã®ã—ã‚‡ã‚Šã¯ã»ã¼çµ‚äº†\r\n\r\nãã—ã¦ã€dic.save_dictionaryã€€ã‚’å®Ÿè¡Œã™ã‚‹ã€‚\r\n\r\n264         def memorize(lines)\r\n265             @dic.store_text(lines)\r\n266             if @dic.learn_from_text\r\n267                 @dic.save_dictionary\r\n268             end\r\n269         end\r\n\r\nsave_dictionaryã¯\r\n\r\n398         def save_dictionary\r\n399             tmp_filename = \"#{@dirname}/sixamo.tmp.#{Process.pid}-#{rand(100)}\"\r\n400\r\n\r\nã¾ãšã€ä¸€æ™‚çš„ãªæ·»ä»˜ãƒ•ã‚¡ã‚¤ãƒ«ã‚’ä½œæˆã™ã‚‹ã€‚\r\n\r\n401             File.open(tmp_filename, \'w\') do |fp|\r\n402                 fp.print self.to_s\r\n403             end\r\n404\r\n\r\næ·»ä»˜ãƒ•ã‚¡ã‚¤ãƒ«ã«ãŸã„ã—ã¦ã€€self.to_sã€€ã‚’ãŠã“ãªã†ã€‚\r\n\r\n405             File.open(tmp_filename, \'w\') do |fp|\r\n406                 fp.print self.to_s\r\n407             end\r\n\r\nãªã‚“ã§ã€ï¼’å›žã‚‚åŒã˜å‡¦ç†ã‚’å®Ÿè¡Œã—ã¦ã‚‹ã®ã‹ãŒã‚ã‹ã‚‰ãªã„ã€‚\r\n\r\nFIXME: ã‚ã»ã‹\r\n\r\n\r\n408\r\n409             File.rename( tmp_filename, @dic_filename )\r\n410         end\r\n\r\næœ€å¾Œã«ä¸€æ™‚ãƒ•ã‚¡ã‚¤ãƒ«ã‚’File.renameã—ã¦ä¿å­˜ã‚’è¡Œã†ã€‚\r\n\r\nto_sã€€ã®å½¹å‰²ã¯ç´°ã‹ã„ãƒ‡ãƒ¼ã‚¿ã‚’æ•´å½¢ã—ã¦å‡ºåŠ›ã™ã‚‹ã“ã¨ã€‚\r\n\r\n529         def to_s\r\n530             result = \"\"\r\n531\r\n\r\n@line_num ã‚’ä¿å­˜\r\n\r\n532             # header\r\n533             result << \"line_num: #{@line_num}\\n\"\r\n534             result << \"\\n\"\r\n535\r\n\r\nvalue ãŒæ®»ã®ã‚„ã¤ã¯å‰Šé™¤\r\n\r\n536             @occur.delete_if { |k,v| v.size == 0 }\r\n537\r\n\r\nvalue ã®ã‚µã‚¤ã‚ºãŒï¼‘ï¼ï¼ã‚ˆã‚Šå¤§ãã„å ´åˆã€ï¼ï¼‘ï¼ï¼ã‹ã‚‰ãƒ¼ï¼‘ã®ç¯„å›²ã‚’å€¤ã¨ã—ã¦å…¥ã‚Œã‚‹ã€‚\r\n\r\n538             @occur.each { |k,v| @occur[k] = v[-100..-1] if v.size > 100 }\r\n539\r\n\r\næœ¬ä½“ã®ã»ã†ã‚’è¿”ã™\r\n\r\n540             # body\r\n\r\nãƒ‡ãƒ¼ã‚¿ã®ç”¨æ„ã‚’ã™ã‚‹ã€‚\r\n\r\n541             tmp = @occur.keys.sort_by do |k|\r\n542                 [-@occur[k].size, @rel[k][:num], k.length, k]\r\n543             end\r\n\r\nãƒ‡ãƒ¼ã‚¿ã®ç”Ÿè¨ˆã‚’ãŠã“ãªã†ã€‚\r\n\r\n544\r\n545             tmp.each do |k|\r\n546                 result << format(\"%s\\t\\%s\\t\\%s\\t%s\\n\",\r\n547                                                  k,\r\n548                                                  @rel[k][:num],\r\n549                                                  @rel[k][:sum],\r\n550                                                  @occur[k].join(\',\'))\r\n551             end\r\n552\r\n\r\nç”¨æ„ã—ãŸæ–‡å­—åˆ—ã‚’è¿”ã™ã€‚\r\n\r\n553             result\r\n554         end\r\n\r\nã“ã¡ã‚‰ã¯ãã‚“ãªã«é›£ã—ããªã„ã€‚\r\n\r\nãã‚“ãªã“ã‚“ãªã§ã‚ˆã†ã‚„ãmemorizeã—ã‚‡ã‚ŠãŒãŠã‚ã‚‹ã€‚\r\n\r\nã¤ãŽã«æ”¯ç¤¾ã‚‚ã®æœ¬æ¥ã®å‡¦ç†ã§ã‚ã‚‹talkãŒã¯ã˜ã¾ã‚‹ã€‚\r\n\r\n225         def talk(str=nil,weight={})\r\n\r\nå¼•æ•°ã®æ–‡å­—åˆ—ãŒã‚ã‚‹å ´åˆã€‚\r\n\r\n226             if str\r\n227                 keywords = @dic.split_into_keywords(str)\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰å˜ä½ã«åˆ†å‰²ã—ã¾ã™ã€‚\r\n\r\nã‚‚ã—ãªã‘ã‚Œã°ã€@dic.text ã‚’å‘¼ã³å‡ºã—ã¦\r\n\r\n228             else\r\n229                 text = @dic.text\r\n\r\nãƒ†ã‚­ã‚¹ãƒˆã®ã‚µã‚¤ã‚ºãŒï¼‘ï¼ã‚ˆã‚Šå°ã•ã‘ã‚Œã°ãƒ†ã‚­ã‚¹ãƒˆã‚’ãã®ã¾ã¾ã€ãŠãŠãã‘ã‚Œã°ã€æœ€å¾Œã®ï¼‘ï¼å€‹ã‚’latest_textã«æ¸¡ã—ã¾ã™ã€‚\r\n\r\n230                 latest_text = if text.size < 10 then text else text[-10..-1] end\r\n\r\nå¾—ãŸãƒ†ã‚­ã‚¹ãƒˆã‚’å›žã—ã¾ã™ã€‚\r\n\r\n231                 keywords = Hash.new(0)\r\n232                 latest_text.each do |str|\r\n\r\nkeywordsã€€ãŒã‚ã‚Œã°ã€å€¤ã«ï¼ï¼Žï¼•ã‚’ã‹ã‘ã¾ã™ã€‚\r\n\r\n233                     keywords.each { |k,v| keywords[k] *= 0.5 }\r\n\r\nãƒ†ã‚­ã‚¹ãƒˆã‚’å˜èªžã«åˆ†å‰²ã—ã¦keywordsã«å€¤ã‚’ã„ã‚Œã¾ã™ã€‚\r\n\r\n234                     @dic.split_into_keywords(str).each { |k,v| keywords[k] += v }\r\n235                 end\r\n236             end\r\n\r\nã¨ã«ã‹ãã€å˜èªžãŒè©°ã¾ã£ãŸkeywordsã¨ã„ã†ãƒãƒƒã‚·ãƒ¥ã‚’ç”Ÿæˆã—ã¾ã™ã€‚\r\n\r\næ¬¡ã«weightãŒæŒ‡å®šã•ã‚Œã¦ã„ã‚Œã°keywordsã«å¯¾ã—ã¦é‡ã¿ã‚’ã¤ã‘ã¾ã™ã€‚\r\n\r\n239             weight.keys.each do |kw|\r\n240                 if keywords.key?(kw)\r\n241                     if weight[kw] == 0\r\n242                         keywords.delete(kw)\r\n243                     else\r\n244                         keywords[kw] *= weight[kw]\r\n245                     end\r\n246                 end\r\n247             end\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã¨é‡ã¿ã‚’å¾—ãŸrã‚‰ã€€message_markovã€€ã«å‡¦ç†ã•ã›ã¦ãƒ¡ãƒƒã‚»ãƒ¼ã‚¸ã‚’å¾—ã¾ã™ã€‚\r\n\r\n249             msg = message_markov(keywords)\r\n\r\nmessage_markov ã¯ \r\n\r\n271         def message_markov(keywords)\r\n272             lines = []\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã®ã‚µã‚¤ã‚ºãŒï¼ˆã¤ã¾ã‚Šå—ã‘å–ã£ãŸå˜èªžã®æ•°ãŒï¼ã‚ˆã‚Šã‚‚å¤§ãã‘ã‚Œã°ã‚¤ã‚«ã®å‡¦ç†ã‚’ã‹ã„ã—ã™ã‚‹ã€‚\r\n\r\n273             if keywords.size > 0\r\n274\r\n\r\nï¼‘ï¼å€‹ã‚ˆã‚Šå¤§ãã„å ´åˆé‡ã¿ã§ã‚½ãƒ¼ãƒˆã•ã‚ŒãŸï¼‘ï¼å€‹ã‚’ãˆã‚‹ã€‚\r\n\r\n275                 if keywords.size > 10\r\n276                     keywords.sort_by{|k,v| -v}[10..-1].each do |k,v|\r\n277                         keywords.delete(k)\r\n278                     end\r\n279                 end\r\n\r\né‡ã¿ã®åˆè¨ˆå€¤ã‚’ã€€sumã€€ã¸æ ¼ç´\r\n\r\n280                 sum = keywords.values.sum\r\n\r\nsumã€€ãŒã€€ï¼ã‚ˆã‚Šå¤§ãã‘ã‚Œã°ï¼ˆã‚¨ãƒ©ãƒ¼å›žé¿ã®ãŸã‚ï¼‰é‡ã¿ã‚’åˆè¨ˆå€¤ã§å‰²ã£ãŸå€¤ã‚’ã€€keywordsã€€ã¸ã„ã‚Œã‚‹ã€‚\r\n\r\n281                 if sum > 0\r\n282                     keywords.each { |k,v| keywords[k] = v/sum }\r\n283                 end\r\n284\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã‚’ã¾ã‚ã™ã€‚\r\n\r\n285                 keywords.keys.collect do |kw|\r\n\r\ndic.linesã€€ã¸ã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã‚’æ¸¡ã™ã—ã€ãƒ©ãƒ³ãƒ€ãƒ ã«ã—ã¦é…åˆ—ã¸å…¥ã‚Œã‚‹ã€‚\r\n\r\n# ã“ã¡ã®ã‚‰æœ€å¾Œã®é…åˆ—ãŒå–ã‚Œã‚‹ã€‚\r\n# ã¦ã™ã¨  37      206     1,12,54,55,56,60,63,65,69,71,76\r\n\r\n286                     ary = @dic.lines(kw).sort_by{ rand }\r\n\r\n592         def lines(word)\r\n593             @occur[word] || []\r\n594         end\r\n\r\nï¼ï¼Žã€‚ï¼‘ï¼ã®é…åˆ—ã«å…¥ã£ã¦ã„ã‚‹ãŠã‚‚ã¿ã‚’linesã¸å…¥ã‚Œã‚‹ã€‚\r\n\r\n287                     ary[0,10].each do |idx|\r\n288                         lines << idx\r\n289                     end\r\n\r\næœ€å¾Œã«å¹³å¦ã‹ã—ã¦ã‚„ã‚‹ã€‚\r\n\r\n290                 end.flatten\r\n291             end\r\n292\r\n\r\nï¼‘ï¼å›žã€€dic.text.sizeã€€ã‚’ç¨®ã«ã—ãŸå€¤ã‚’linesã«ã„ã‚Œã‚‹ã€‚\r\n\r\n293             10.times { lines << rand(@dic.text.size) }\r\n\r\nlinesã‚’ uniq ã«ã™ã‚‹ã€‚\r\n\r\n294             lines.uniq!\r\n295\r\n\r\nflatten é…åˆ—ã®é…åˆ—ã‚’ãƒ•ãƒ©ãƒƒãƒˆãªé…åˆ—ã«ã™ã‚‹\r\ncompact ã¯ self ã‹ã‚‰ nil ã§ã‚ã‚‹è¦ç´ ã‚’å–ã‚Šé™¤ã„ãŸæ–°ã—ã„é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n296             source = lines.collect do |k,v|\r\n297                 @dic.text[k,5]\r\n298             end.sort_by{ rand }.flatten.compact.uniq\r\n\r\næ¬¡ã«Util.markovã‹ã‚‰ãƒ¡ãƒƒã‚»ãƒ¼ã‚¸ã‚’å–å¾—ã—ã¾ã™ã€‚\r\n\r\n299             msg = Util.markov(source, keywords, @dic.trie)\r\n\r\n\r\n118         def Util.markov(src,keywords,trie)\r\n119             mar = markov_generate(src,trie)\r\n\r\næœ€åˆã«markov_generateã§ mar ï½—ç”Ÿæˆã—ã¾ã™ã€‚\r\n\r\n120             result = markov_select(mar,keywords)\r\n121\r\n122             result\r\n123         end\r\n\r\n125         MarkovKeySize = 2\r\n126         def markov_generate(src,trie)\r\n127             return \'\' if src.size == 0\r\n128\r\n129             ary = trie.split_into_terms(src.join(\"\\n\")+\"\\n\",true)\r\n130\r\n131             size = ary.size\r\n132             ary.concat(ary[0,MarkovKeySize+1])\r\n133\r\n134             table = {}\r\n135             size.times do |idx|\r\n136                 key = ary[idx,MarkovKeySize]\r\n137                 table[key] = [] unless table.key?(key)\r\n138                 table[key] << ary[idx+MarkovKeySize]\r\n139             end\r\n140\r\n141             uniq = {}\r\n142             backup = {}\r\n143\r\n144             table.each do |k,v|\r\n145                 if v.size == 1\r\n146                     uniq[k] = v[0]\r\n147                 else\r\n148                     backup[k] = table[k].dup\r\n149                 end\r\n150             end\r\n151\r\n152             key = ary[0,MarkovKeySize]\r\n153             result = key.join(\'\')\r\n154             10000.times do\r\n155\r\n156                 if uniq.key?(key)\r\n157                     str = uniq[key]\r\n158                 else\r\n159                     table[key] = backup[key].dup if table[key].size == 0\r\n160\r\n161                     idx = rand(table[key].size)\r\n162                     str = table[key][idx]\r\n163\r\n164                     table[key][idx] = nil\r\n165                     table[key].compact!\r\n166                 end\r\n167\r\n168                 result << str\r\n169                 key = (key.dup << str)[1,MarkovKeySize]\r\n170             end\r\n171\r\n172             result\r\n173         end\r\n\r\n\r\n300             msg = Util.message_normalize(msg)\r\n301             msg\r\n302         end\r\n303     end\r\n\r\n		\r\n','2007-09-24 22:22:28','2007-09-24 13:22:28'),(128,'7xczEkBJdO','readline åŽŸå§‹çš„','perl','  1 use strict;\r\n  2\r\n  3 while(1) {\r\n  4     if( my $line = <STDIN> ) {\r\n  5         print $line;\r\n  6     }\r\n  7\r\n  8 }\r\n','2007-09-25 11:58:54','2007-09-25 02:58:54'),(129,'Eb3R7cwPYG','è§£æžä¸­','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nprefix ãŒè¿”ã™å€¤\r\n\r\nâ– ã€€perlç‰ˆ\r\n\r\n> $VAR1 = {\r\n>           \'[2]\' => [\r\n>                      2\r\n>                    ],\r\n>           \'[4,2]\' => [\r\n>                        1\r\n>                      ],\r\n>           \'[2,2]\' => [\r\n>                        \'\r\n> \'\r\n>                      ],\r\n>           \'[0,2]\' => [\r\n>                        \'s\'\r\n>                      ],\r\n>           \'[1,2]\' => [\r\n>                        \'t\'\r\n>                      ],\r\n>           \'[3,2]\' => [\r\n>                        0\r\n>                      ]\r\n>         };\r\n\r\n\r\nâ–  rubyç‰ˆ\r\n> [\"t\", \"e\", \"s\", \"t\", \"\\n\", \"t\", \"e\", \"s\"]\r\n> {[\"s\", \"t\"]=>[\"\\n\"], [\"t\", \"\\n\"]=>[\"t\"], [\"\\n\", \"t\"]=>[\"e\"], [\"e\", \"s\"]=>[\"t\"], [\"t\", \"e\"]=>[\"s\"]}\r\n\r\n\r\n\r\n\r\n\r\nâ– \r\n\r\n>  83\r\n>  84     my $msg = $self->message_markov( $keywords );\r\n>  85\r\n\r\nã“ã“ã§è¿”ã™çµæžœãŒãŠã‹ã—ã„ã€‚\r\n\r\nã“ã¡ã‚‰ã‚’ç”Ÿã¿å‡ºã—ã¦ã„ã‚‹ã®ãŒä¸‹è¨˜ã®éƒ¨åˆ†\r\n\r\n> 124     for(0..10) {\r\n> 125         push @lines ,  int rand( scalar @{$self->{dic}->{text}}  );\r\n> 126     }\r\n> 127     @lines = uniq @lines;\r\n> 128     # -------------------------------------------------------------------------\r\n> 129     # text ã®ä¸­ã‹ã‚‰é©å½“ãªè¡Œã‚’æ•°è¡Œå¾—ã‚‹ãŸã‚ã®å‡¦ç†\r\n> 130     # -------------------------------------------------------------------------\r\n> 131     # source = lines.collect do |k,v|\r\n> 132     #   @dic.text[k,5]\r\n> 133     # end.sort_by{ rand }.flatten.compact.uniq\r\n> 134     # -------------------------------------------------------------------------\r\n> 135     # compact ã¯ self ã‹ã‚‰ nil ã§ã‚ã‚‹è¦ç´ ã‚’å–ã‚Šé™¤ã„ãŸæ–°ã—ã„é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n> 136     # flatten ãƒã‚¹ãƒˆã—ãŸé…åˆ—ã‚’å¹³æ»‘åŒ–ã—ã¦ãã‚Œã‚’è¿”ã—ã¾ã™\r\n> 137     # ï¼‘è¡Œã§ã‚„ã‚ŠãŸã‹ã£ãŸã‹ã‚‰ã‚„ã‚Šã¾ã—ãŸã€‚\r\n> 138     # -------------------------------------------------------------------------\r\n> 139     my @source = uniq shuffle map { @{$_} } map { my @result; for my $line ($_..5) { push @result, $self->{dic}->{text}->[$line] if $self->{dic}->{text}->[$line] ; } \\@result; } uniq @lines;\r\n> 140     my $msg = Spiral::AI::Sixamo::Util->markov( \\@source , $keywords, $self->{dic}->{trie} );\r\n> 141     $msg    = Spiral::AI::Sixamo::Util->message_normalize($msg);\r\n> 142\r\n> 143     return $msg;\r\n\r\n\r\nã©ã“ã‹ã®æ™‚ç‚¹ã§ãŠã‹ã—ã„ã®ã ã‘ã©ã€ã¨ã‚Šã‚ãˆãšã€\r\n\r\n@source ã®å€¤ã‚’ã ã™ã€‚\r\n\r\nä¸¡æ–¹ã¨ã‚‚åŒã˜å€¤ã¨ãªã‚‹ã€‚ã¤ã¾ã‚Šã€ã“ã“ã¯å•é¡Œã§ã¯ãªã„ã€‚\r\n\r\n\r\n> > test\r\n> [\"test\"]\r\n\r\n> >test\r\n> $VAR1 = [\r\n>           \'test\'\r\n>         ];\r\n\r\n\r\nã¤ã¾ã‚Šã€ã“ã“ãŒã‚ã‚„ã—ã„ã€‚\r\n\r\n> 140     my $msg = Spiral::AI::Sixamo::Util->markov( \\@source , $keywords, $self->{dic}->{trie} );\r\n\r\n\r\ntest\r\n\r\n> {[\"s\", \"t\"]=>[\"\\n\"], [\"t\", \"\\n\"]=>[\"t\"], [\"\\n\", \"t\"]=>[\"e\"], [\"e\", \"s\"]=>[\"t\"], [\"t\", \"e\"]=>[\"s\"]}\r\n\r\n\r\n\r\n\r\n\r\n> 0\r\n> te\r\n> 1\r\n> es\r\n> 2\r\n> st\r\n> 3\r\n> t\r\n> 4\r\n> \r\n> t\r\n> 5\r\n> te\r\n> 6\r\n> es\r\n> 7\r\n> s\r\n\r\n\r\n\r\n> 0       [\"t\",\"e\",\"s\"] at table.pl line 12.\r\n> 1       [\"e\",\"s\"] at table.pl line 12.\r\n> 2       [\"s\"] at table.pl line 12.\r\n> 3       [] at table.pl line 12.\r\n> 4       [] at table.pl line 12.\r\n> 5       [] at table.pl line 12.\r\n> 6       [] at table.pl line 12.\r\n> 7       [] at table.pl line 12.\r\n> 8       [] at table.pl line 12.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-09-30 02:47:40','2007-09-29 17:47:40'),(130,'AmsdCDmVkW','é…åˆ—ã‚’keyã«ã™ã‚‹ ruby ','sixamo.rb','é…åˆ—ã‚’keyã«ã™ã‚‹ã¨ã„ã†ç‰¹æ®Šãªç”¨æ³•\r\n\r\n>>\r\n  1 MarkovKeySize = 2\r\n  2\r\n  3 ary = [\"t\", \"e\", \"s\", \"t\", \"\\n\", \"t\", \"e\", \"s\"]\r\n  4 size = ary.size\r\n  5\r\n  6 p ary\r\n  7\r\n  8 table = {}\r\n  9 size.times do |idx|\r\n 10     key = ary[idx,MarkovKeySize]\r\n 11 print idx,MarkovKeySize\r\n 12 p key\r\n 13     table[key] = [] unless table.key?(key)\r\n 14     table[key] << ary[idx+MarkovKeySize]\r\n 15 end\r\n 16 p table\r\n<<\r\n\r\nçµæžœãŒã“ã¡ã‚‰\r\n\r\n>>\r\n[\"t\", \"e\", \"s\", \"t\", \"\\n\", \"t\", \"e\", \"s\"]\r\n02[\"t\", \"e\"]\r\n12[\"e\", \"s\"]\r\n22[\"s\", \"t\"]\r\n32[\"t\", \"\\n\"]\r\n42[\"\\n\", \"t\"]\r\n52[\"t\", \"e\"]\r\n62[\"e\", \"s\"]\r\n72[\"s\"]\r\n{[\"s\", \"t\"]=>[\"\\n\"], [\"t\", \"\\n\"]=>[\"t\"], [\"s\"]=>[nil], [\"\\n\", \"t\"]=>[\"e\"], [\"e\", \"s\"]=>[\"t\", nil], [\"t\", \"e\"]=>[\"s\", \"s\"]}\r\n<<','2007-10-02 08:15:05','2007-10-01 23:15:05'),(131,'BU2QcrMFBx','é…åˆ—ã‚’keyã«ã™ã‚‹ perl','sixamo.rb','\r\n\r\n>>\r\n  1 use strict;\r\n  2 use Data::Dumper;\r\n  3 use JSON::Syck;\r\n  4 use List::MoreUtils qw/notall/;\r\n  5\r\n  6 my $MarkovKeySize = 1;\r\n  7 my @ary = split(//,\"test\\ntes\");\r\n  8 my $size = @ary;\r\n  9 warn Dumper \\@ary;\r\n 10 my %table;\r\n 11 for my $idx ( 0..$size - 1 ) {\r\n 12     my $key = JSON::Syck::Dump([ grep {$_} map { $ary[$_]  } ($idx..$idx+$MarkovKeySize) ]);\r\n 13 warn $idx.$MarkovKeySize.\"\\t\".$key;\r\n 14     $table{$key} = [] unless $table{$key};\r\n 15     push @{$table{$key}},$ary[$idx + $MarkovKeySize + 1] ;\r\n 16 }\r\n 17 warn Dumper \\%table;\r\n\r\n<<\r\n\r\n\r\n>>\r\n01      [\"t\",\"e\"] at table.pl line 13.\r\n11      [\"e\",\"s\"] at table.pl line 13.\r\n21      [\"s\",\"t\"] at table.pl line 13.\r\n31      [\"t\",\"\\n\"] at table.pl line 13.\r\n41      [\"\\n\",\"t\"] at table.pl line 13.\r\n51      [\"t\",\"e\"] at table.pl line 13.\r\n61      [\"e\",\"s\"] at table.pl line 13.\r\n71      [\"s\"] at table.pl line 13.\r\n$VAR1 = {\r\n          \'[\"t\",\"\\\\n\"]\' => [\r\n                             \'t\'\r\n                           ],\r\n          \'[\"\\\\n\",\"t\"]\' => [\r\n                             \'e\'\r\n                           ],\r\n          \'[\"s\"]\' => [\r\n                       undef\r\n                     ],\r\n          \'[\"s\",\"t\"]\' => [\r\n                           \'\r\n\'\r\n                         ],\r\n          \'[\"t\",\"e\"]\' => [\r\n                           \'s\',\r\n                           \'s\'\r\n                         ],\r\n          \'[\"e\",\"s\"]\' => [\r\n                           \'t\',\r\n                           undef\r\n                         ]\r\n        };\r\n\r\n<<','2007-10-02 08:16:03','2007-10-01 23:16:03'),(132,'qjKwFjtSfI','TT ary.first','perl','use strict;\r\nuse warnings;\r\nuse Template;\r\n\r\n\r\nmy $data = q{\r\n[% ary.first.hoge %]\r\n};\r\n\r\nmy $template = Template->new({});\r\n$template->process(\r\n    \\$data,\r\n    {\r\n        ary  => [\r\n            { hoge => 123456 },\r\n        ]\r\n    }\r\n) || die;\r\n','2007-10-02 11:55:07','2007-10-02 02:55:07'),(133,'DFjk3NmqYN','python datetime','python','  1 import os\r\n  2 from datetime import datetime\r\n  3 from time import strptime\r\n  4\r\n  5 environment = [\'HOME\']\r\n  6\r\n  7 for env in [\'HOME\']:\r\n  8     print os.environ[env]\r\n  9\r\n 10 s = \"2005-12-06T12:13:14\"\r\n 11 print datetime(*strptime(s, \"%Y-%m-%dT%H:%M:%S\")[0:6])\r\n 12\r\n 13 now = datetime.today()\r\n 14 print now.strftime(\"/usr/local/apache/logs/combined%Y-%m-%d.log\")\r\n','2007-10-03 01:22:58','2007-10-02 16:22:58'),(134,'Iz5JvK4Ede','tail combined log','python','#!/usr/bin/python\r\nimport os\r\nfrom datetime import datetime\r\n\r\nos.system(\"tail -f \" + os.environ[\'HOME\'] + \'/local/apache/logs/\' + datetime.today().strftime(\"%Y/%m/combined.%Y_%m%d.log\")  )\r\n','2007-10-04 11:14:30','2007-10-04 02:14:30'),(135,'8GIvLOSnS8','file open','python','\r\nf = open(\"hoge.py\")\r\ntry:\r\n    for line in f:\r\n        print line\r\nfinally:\r\n    f.close()\r\n','2007-10-04 13:36:10','2007-10-04 04:36:10'),(136,'Em85ajsqig','File::Remote','perl','\r\nä½¿ã„æ–¹ã¯ã“ã‚“ãªæ„Ÿã˜ã€‚\r\n\r\n>>\r\n   use File::Remote;\r\n   my $remote = new File::Remote;\r\n \r\n   # Standard filehandles\r\n   $remote->open(FILE, \">>host:/remote/file\") or die $!;\r\n   print FILE \"Here\'s a line that\'s added.\\n\";\r\n   $remote->close(FILE);\r\n<<\r\n\r\nãªã‚‹ã»ã©ã­ã€‚\r\n\r\n','2007-10-09 22:04:04','2007-10-09 13:04:04'),(137,'LwDKVh6ygo','TODO','perl','ã‚„ã‚‰ãªã‘ã‚Œã°ãªã‚‰ãªã„ã“ã¨ã€‚\r\n\r\n\r\nãƒ»Sukinaã‚’Phoenixã¸ç§»è¡Œã€‚\r\nãƒ»ãƒ»å‹é”ç´¹ä»‹æ©Ÿèƒ½ã‚’ç§»æ¤\r\nãƒ»è‘—ä½œæ¨©é–¢ä¿‚ã®èª¿æŸ»\r\n\r\næ¬¡ï¼š\r\n\r\n\r\nãƒ»ã—ã—ã‚ƒã‚‚ã®å®Œæˆ\r\nãƒ»\r\nãƒ»MySQLã®æ©Ÿèƒ½èª¿æŸ»\r\nãƒ»å®¶åº­å†…ã®ãƒãƒƒã‚¯ã‚¢ãƒƒãƒ—ä½“åˆ¶ã®å¼·åŒ–\r\nãƒ»ã‚‚ã†ä¸€å°ã®è‡ªå®…ã‚µãƒ¼ãƒãƒ¼ã‚’è¨­ç½®ã€‚\r\nãƒ»blogã®æ›´æ–°','2007-10-09 22:08:30','2007-10-09 13:08:30'),(138,'i4V1EYuGTA','google bot ãƒ†ã‚¹ãƒˆ','perl','use strict;\r\nuse warnings;\r\nuse LWP::UserAgent;\r\n\r\nmy $agent = \'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html\';\r\n\r\nmy $ua = LWP::UserAgent->new({  });\r\n\r\n$ua->agent($agent);\r\n\r\nmy $response = $ua->get(\"http://iutakami.yamanaka.t.mfac.jp/help/\");\r\n\r\nif ($response->is_success) {\r\n    print $response->content;  # or whatever\r\n}\r\nelse {\r\n    die $response->status_line;\r\n}\r\n','2007-10-15 12:50:04','2007-10-15 03:50:04'),(139,'rSeLNOXZQX','melopre èª¿æŸ»','works','> [mf@192.168.200.102] melopre> select * from download_id where code = \'yrq0cd7k2U\'\\G\r\n> *************************** 1. row ***************************\r\n>            id: 31910309\r\n>           rid: z8o30vfi6l\r\n>   issuance_id: 12118\r\n>          code: yrq0cd7k2U\r\n>    down_count: 2\r\n> first_down_at: 2007-10-12 14:21:52\r\n>    created_on: 2007-06-21 17:19:09\r\n>    updated_on: 2007-10-12 15:46:48\r\n\r\nãƒã‚§ãƒƒã‚¯ä¸Šã¯10å›žå‡ºæ¥ãªã‘ã‚Œã°ãŠã‹ã—ã„ã€‚\r\n\r\n\r\nãƒã‚§ãƒƒã‚¯ï¼š\r\n\r\n>     # Downloadæ•°ã«åˆ¶é™ãŒã‚ã‚‹å ´åˆ\r\n>     my $limit_down_count = $download_id->issuance->limit_down_count;\r\n>     if ( $limit_down_count != 0 && $limit_down_count <= $download_id->down_count ) {\r\n>         return \'over_download\';\r\n>     }\r\n\r\nãƒ‡ãƒ¼ã‚¿ï¼š\r\n\r\n> select * from issuance where id = 12118\\G\r\n> *************************** 1. row ***************************\r\n>                  id: 12118\r\n>                 rid: ZUHGckGvMz\r\n>       client_id_one: 353\r\n>         order_count: 1000\r\n>        published_on: 2007-05-07\r\n>            start_on: 2007-05-07\r\n>              end_on: 2008-01-01\r\n>        order_status: done\r\n>           delete_fg: 0\r\n>    limit_down_count: 10\r\n>    available_sounds:\r\n> available_decomails: NULL\r\n>          expire_day: 0\r\n>          created_on: 2007-06-25 11:39:43\r\n>          updated_on: 2007-06-25 11:39:57\r\n\r\n\r\n\r\n> [mf@192.168.200.102] melopre> UPDATE download_id SET down_count = 2 where code = \'yrq0cd7k2U\';\r\n> Query OK, 1 row affected (0.00 sec)\r\n> Rows matched: 1  Changed: 1  Warnings: 0\r\n> \r\n> [mf@192.168.200.102] melopre> select * from download_id where code = \'yrq0cd7k2U\'\\G\r\n> *************************** 1. row ***************************\r\n>            id: 31910309\r\n>           rid: z8o30vfi6l\r\n>   issuance_id: 12118\r\n>          code: yrq0cd7k2U\r\n>    down_count: 2\r\n> first_down_at: 2007-10-12 14:21:52\r\n>    created_on: 2007-06-21 17:19:09\r\n>    updated_on: 2007-10-15 16:53:09\r\n> 1 row in set (0.00 sec)\r\n','2007-10-15 16:58:58','2007-10-15 07:58:58'),(140,'3a6IENMdBF','è§£èª¬è¨˜äº‹','sixamo.rb','â– ã€€Sixamop \r\n\r\nã—ã—ã‚ƒã‚‚ã¨ã¯ã€ã”å­˜çŸ¥ã®ã¨ãŠã‚Šruby ã§ã‹ã‹ã‚ŒãŸäººå·¥ç„¡èƒ½ã§ã™ã€‚\r\n\r\nä»¥ä¸‹ã®ã‚ˆã†ãªã‚¯ãƒ©ã‚¹æ§‹é€ ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\n|-- Sixamo\r\n|   |-- Core\r\n|   |-- Dictionary\r\n|   |-- Freq\r\n|   |-- Trie\r\n|   `-- Util\r\n\r\nå‡¦ç†ã”ã¨ã«åˆ†ã‘ã‚‰ã‚Œã¦ã„ã¾ã™ã€‚ä¿¯çž°ã™ã‚‹ã¨å¤§ä½“ä»¥ä¸‹ã®ã‚ˆã†ãªæ„Ÿã˜ã«ãªã‚Šã¾ã™ã€‚\r\n\r\n===========================================================================\r\nCore:\r\n	Coreã‚¯ãƒ©ã‚¹ã®å½¹å‰²ã¯ã€ã»ã‹ã®ã‚¯ãƒ©ã‚¹ã¸ã®ã‚¤ãƒ³ã‚¿ãƒ•ã‚§ãƒ¼ã‚¹ã®æä¾›ã§ã™ã€‚\r\n	newã•ã‚ŒãŸæ™‚ç‚¹ã§ã€Dictionaryã‚¯ãƒ©ã‚¹ã®ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã‚’ä¿æŒã—ã¾ã™ã€‚\r\n===========================================================================\r\nDictionary:\r\n	è¾žæ›¸ã¨ã„ã†åå‰ãŒã¤ã„ã¦ã¯ã„ã¾ã™ãŒã€å®Ÿéš›ã¯ã€sixamoã«ã‚ˆã£ã¦ç”Ÿæˆã•ã‚Œã‚‹\r\n	ï¼’ã¤ã®ãƒ•ã‚¡ã‚¤ãƒ«ã€Œsixamo.txtã€ã¨ã€Œsixamo.dicã€ã¸ã®ã‚¤ãƒ³ã‚¿ãƒ•ã‚§ãƒ¼ã‚¹ã‚’\r\n	æä¾›ã™ã‚‹ã‚¯ãƒ©ã‚¹ã§ã™ã€‚\r\n===========================================================================\r\nTrieï¼ˆã©ã†ã‚‚è¨€èªžã‚’æ„å‘³ã™ã‚‹ã‚‰ã—ã„ï¼‰ï¼š\r\n	ã€Œsuggest arrayï¼ˆè¨€èªžå‡¦ç†å­¦ä¼šã®å‰ã„äººãŒã“ã†ã„ã†æ§‹é€ ã‚’ãã†å‘¼ã‚“ã§ãŸï¼‰ã€\r\n	ã‚’ä½¿ç”¨ã—ã¦æ–‡å­—ã‚’ã¤ãªã’ã¦ãã‚Œã‚‹ã‚¯ãƒ©ã‚¹ã€‚ã‚ã‚‹æ„å‘³Coreãªéƒ¨åˆ†ã€‚\r\n===========================================================================\r\nUtilï¼š\r\n	åå‰ã®é€šã‚Šä¸Šè¨˜ã®3ã¤ã®ã‚¯ãƒ©ã‚¹ã¸é©ç”¨ã•ã‚Œãªã„ãƒ¡ã‚½ãƒƒãƒ‰ç¾¤ã®å¯„ã›é›†ã‚ã§ã™ã€‚\r\n\r\n===========================================================================\r\nFreq:\r\n	å‡ºç¾é »åº¦ã‚’è¨ˆç®—ã—ã¦ã„ã‚‹ã‚¯ãƒ©ã‚¹ã€‚åˆæœŸåŒ–æ™‚ã«ã†ã‘ã¨ã£ãŸæ–‡å­—åˆ—ã‚’\r\n	$self->{buf}ã¨ã—ã¦ä¿æŒã™ã‚‹ã€‚\r\n===========================================================================\r\n\r\n\r\nå‡¦ç†ã®æµã‚Œï¼š\r\n\r\n\r\nãƒ¦ãƒ¼ã‚¶ãƒ¼ã‹ã‚‰ã®å…¥åŠ›ãŒã‚ã‚‹ã¨ã€ã¾ãšã€ŒSixamo::Core->new->talk($string);ã€\r\nãŒå‘¼ã³å‡ºã•ã‚Œã¾ã™ã€‚åˆæœŸåŒ–ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«ãªã£ã¦ã„ã¾ã—ã¦\r\n\r\n>  14 sub new {\r\n>  15     my ($class, $dirname ) = @_;\r\n>  16\r\n>  17     bless {\r\n>  18         dic => Sixamop::Dictionary->new( $dirname || \'\')\r\n>  19     } , $class;\r\n>  20 }\r\n\r\nå—ã‘å–ã£ãŸã€Œ$dirnameã€ã‚’å¼•æ•°ã«ã—ã¦å†…éƒ¨ã« Dictionaryã®ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’ä¿æŒã—ã¾ã™ã€‚\r\n\r\nSixamo::Directoryã¯åˆæœŸæ™‚ã«ä»¥ä¸‹ã®å‡¦ç†ã‚’è¡Œã„ã¾ã™ã€‚\r\n\r\n\r\n>  27 sub new {\r\n>  28     my ( $class, $dirname ) = @_;\r\n>  29\r\n>  30     my $self = bless  {\r\n>  31         occur         => \\my %occur,\r\n>  32         rel           => \\my %rel,\r\n>  33         trie          => Sixamop::Trie->new,\r\n>  34         dirname       => $dirname || undef,\r\n>  35         text_filename => \"@{[$dirname]}/@{[$TEXT_FILENAME]}\",\r\n>  36         dic_filename  => \"@{[$dirname]}/@{[$DIC_FILENAME]}\",\r\n>  37         text          => \\my @text,\r\n>  38         line_num      => 0,\r\n>  39     } , $class;\r\n>  40\r\n>  41     return $self;\r\n>  42 }\r\n\r\n=========================================================================\r\nFIXME:\r\n=========================================================================\r\nã“ã“ã§æ›¸ããƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã®å€¤ã‚’å‡ºã—ã¦ãã‚Œãžã‚Œä½•ã®å½¹å‰²ã‚’ã—ã¦ã„ã‚‹ã‹ã‚’æ›¸ã„ã¦ãŠã\r\n=========================================================================\r\n\r\næ¬¡ã«\r\n\r\n>  38         # è¨˜éŒ²ãƒ•ãƒ©ã‚°ãŒã‚ã‚Œã°è¨˜éŒ²ã™ã‚‹\r\n>  39         if( $memory ) {\r\n>  40             $sixamo->memorize($str);\r\n>  41         }\r\n>  42\r\n>  43         my $res = $sixamo->talk($str) || \'\';\r\n>  44\r\n>  45         print $res .\"\\n\";\r\n\r\nè¨˜éŒ²ãƒ•ãƒ©ã‚°ãŒãŸã£ã¦ã„ãŸå ´åˆã€memorizeãŒå‘¼ã³å‡ºã•ã‚Œã¾ã™ã€‚\r\n\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ä»¥ä¸‹ã«ç¤ºã™é€šã‚Šã€ã€Œãƒ¦ãƒ¼ã‚¶ãƒ¼ãŒè©±ã—ã‹ã‘ãŸæ–‡å­—åˆ—ã€ã‚’å¼•æ•°ã«å—ã‘å–ã‚Šã€\r\nCoreãŒä¿æŒã™ã‚‹ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£dic(Dcitionaryã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹)ã«å¯¾ã—ã¦åƒãã‹ã‘ã¾ã™ã€‚\r\n\r\n> 151 sub memorize {\r\n> 152     my ( $self , $lines ) = @_;\r\n> 153\r\n> 154     $self->{dic}->store_text($lines);\r\n> 155     if( $self->{dic}->learn_from_text ) {\r\n> 156         $self->{dic}->save_dictionary;\r\n> 157     }\r\n> 158 }\r\n\r\næœ€åˆã« store_textãŒå‹•ã„ã¦è¿½è¨˜ãƒ¢ãƒ¼ãƒ‰ã§ã€Œsixamo.txtã€ã¸æ–‡å­—åˆ—ã‚’æ ¼ç´ã—ã¾ã™ã€‚\r\nã„ã¾ã•ã‚‰ã„ã†ã¾ã§ã‚‚ç„¡ã„ã“ã¨ã§ã™ãŒã€äº‹å‰å‡¦ç†ã¯ã€å˜ç´”ã«ç©ºç™½ãŒãŸãã•ã‚“ã‚ã£ãŸã‚‰ã€\r\n1å€‹ã«ã™ã‚‹ãžã¨ã„ã†å‡¦ç†ã§ã™ã€‚\r\n\r\n> 250 sub store_text {\r\n> 251     my ($self, @lines) = @_;\r\n> 252\r\n> 253     my @ary;\r\n> 254     for my $line (@lines) {\r\n> 255         $line =~ s/\\s+/ /;\r\n> 256         # strip ã®ä»£æ›¿ãŒå¿…è¦\r\n> 257         push @ary, $line;\r\n> 258     }\r\n> 259\r\n> 260     @{$self->{text}} = @ary;\r\n> 261\r\n> 262     my $fp = IO::File->new( $self->{text_filename} , \">>:utf8\");\r\n> 263     for my $line (@ary) {\r\n> 264         chomp $line;\r\n> 265\r\n> 266         print $fp $line.\"\\n\";\r\n> 267     }\r\n> 268\r\n> 269     $fp->close;\r\n> 270\r\n> 271     return;\r\n> 272 }\r\n\r\nãã®å¾Œã€learn_from_textãŒçœŸã‚’è¿”ã—ãŸã‚‰è¾žæ›¸ã®ã»ã†ã‚’æ›´æ–°ã™ã‚‹ã®ã§ã™ãŒã€\r\nã“ã®learn_from_textãŒé¢å€’ãªå‡¦ç†ã‚’ã—ã¦ã¾ã™ã€‚\r\n\r\n> 186 sub learn_from_text {\r\n> 187     my ($self, $progress ) = @_;\r\n> 188\r\n> 189     my $modified = undef;\r\n> 190\r\n> 191     my $read_size = 0;\r\n> 192     my @buf_prev;\r\n> 193     my $end_flag  = undef;\r\n> 194     my $idx       = $self->{line_num};\r\n> 195\r\n> 196     while(1) {\r\n> 197         my @buf;\r\n> 215\r\n> 216         my $tmp = $read_size;\r\n> 217         while( $tmp/$WindowSize == $read_size/$WindowSize ) {\r\n> 218             if( $idx >= scalar( @{$self->{text}} ) ) {\r\n> 219                 $end_flag = 1;\r\n> 220                 last;\r\n> 221             }\r\n> 222\r\n> 223             push @buf , $self->{text}->[$idx] ;\r\n> 224             $tmp += scalar( @{$self->{text}} ) ;\r\n> 225             $idx++;\r\n> 226         }\r\n> 227\r\n> 228         $read_size = $tmp;\r\n> 229\r\n> 230         last if $end_flag ;\r\n> 231\r\n> 232         if( scalar( @buf_prev ) > 0 ) {\r\n> 233             $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_nux} );\r\n> 234             $modified = 1;\r\n> 235\r\n> 236             $self->{line_num} += scalar( @buf_prev );\r\n> 237         }\r\n> 238\r\n> 239         @buf_prev = @buf;\r\n> 240     }\r\n> 241\r\n> 243\r\n> 244     return $modified;\r\n> 245 }\r\n\r\nç´°ã‹ã„éƒ¨åˆ†ã¯æŠœãã«ã—ã¦é‡è¦ãªéƒ¨åˆ†ã ã‘ã‚’æŠœãå‡ºã™ã¨ã€\r\nã¾ãšæœ€åˆã®whileã§ã™ãŒã€1å›žã¯å¿…ãšå›žã‚Šã¾ã™ã€‚\r\n\r\næœ€åˆãƒã‚§ãƒƒã‚¯ã§ã¯ã€ã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ãŒä¿æŒã—ã¦ã„ã‚‹ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£textã‚ˆã‚Šå¤§ãããªã£ãŸã‚‰end_flagã‚’\r\nãŸã¦ã¦çµ‚äº†ã—ã¦ã„ã¾ã™ã€‚ã“ã‚Œã¯å˜ç´”ã«æ§‹é€ ä»¥ä¸Šã®ãƒ‡ãƒ¼ã‚¿ã‚’èª­ã¿è¾¼ã¾ãªã„ãŸã‚ã®ä¿é™ºã§ã©ã†ã§ã‚‚è‰¯ã„ã§ã™ã€‚\r\n\r\n\r\n> 216         my $tmp = $read_size;\r\n> 217         while( $tmp/$WindowSize == $read_size/$WindowSize ) {\r\n> 218             if( $idx >= scalar( @{$self->{text}} ) ) {\r\n> 219                 $end_flag = 1;\r\n> 220                 last;\r\n> 221             }\r\n\r\n\r\næœ¬æ¥ã®ç›®çš„ã¯ã€ä»¥ä¸‹ã®éƒ¨åˆ†ã§è©²å½“ã™ã‚‹ã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ã®textã®è¡Œã‚’@buã¸å…¥ã‚Œã¦\r\n$tmpã¨$indexã‚’ã‚¤ãƒ³ã‚¯ãƒªãƒ¡ãƒ³ãƒˆã—ã¦çµ‚äº†ã—ã¦ã„ã¾ã™ã€‚\r\n\r\n> 223             push @buf , $self->{text}->[$idx] ;\r\n> 224             $tmp += scalar( @{$self->{text}} ) ;\r\n> 225             $idx++;\r\n\r\nã“ã‚Œã¯ã€ã¤ã¾ã‚Š1å›žå‡¦ç†ã—ãŸã‚‰ãŠã‚ã‚‹ã®ã§ã€ãªã‚“ã§ã“ã‚“ãªwhileã§ã¾ã‚ã—ã¦ã‚‹ã®ã‹ã¯ã‚ˆãç†è§£ã§ããªã„ã€‚\r\n\r\nã¡ãªã¿ã«ã€å®Ÿéš›ã«ã‚„ã£ã¦ã¿ã‚‹ã¨ä»¥ä¸‹ã®ã‚ˆã†ãªçµæžœã«ãªã‚‹ã€‚\r\n\r\n>   1 use strict;\r\n>   2 use warnings;\r\n>   3\r\n>   4\r\n>   5 my $Size = 500;\r\n>   6\r\n>   7 my $num  = 1;\r\n>   8\r\n>   9 for(1..20) {\r\n>  10     print $_ . \"\\t\". ($_/$Size) .\"\\n\";\r\n>  11 }\r\n\r\n> 1       0.002\r\n> 2       0.004\r\n> 3       0.006\r\n> 4       0.008\r\n> 5       0.01\r\n> 6       0.012\r\n> 7       0.014\r\n> 8       0.016\r\n> 9       0.018\r\n> 10      0.02\r\n> 11      0.022\r\n> 12      0.024\r\n> 13      0.026\r\n> 14      0.028\r\n> 15      0.03\r\n> 16      0.032\r\n> 17      0.034\r\n> 18      0.036\r\n> 19      0.038\r\n> 20      0.04\r\n\r\nçµå±€ã‚„ã‚ŠãŸã„ã“ã¨ã¯ã€$self->{line_num}ã§æŒ‡å®šã•ã‚Œã¦ã„ã‚‹è¡Œã‚’ @bufã¸èª­ã¿è¾¼ã¿ãŸã„ã ã‘ã§ã™ã€‚\r\n\r\nãã—ã¦ã€èª­ã¿è¾¼ã‚“ã è©²å½“è¡Œã‚’å‡¦ç†ã™ã‚‹éƒ¨åˆ†ãŒä¸‹è¨˜ã§ã™ã€‚\r\n\r\n> 232         if( scalar( @buf_prev ) > 0 ) {\r\n> 233             $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_nux} );\r\n> 234             $modified = 1;\r\n> 235\r\n> 236             $self->{line_num} += scalar( @buf_prev );\r\n> 237         }\r\n> 238\r\n> 239         @buf_prev = @buf;\r\n\r\næœ€åˆã®ãƒ«ãƒ¼ãƒ—ã§ã¯@buf_prevãŒã‚ã‚Œã°ã€å‡¦ç†ã‚’é–‹å§‹ã—ã¾ã™ã€‚\r\nã“ã®æ™‚ç‚¹ã§ã¯ã€@bufã®éƒ¨åˆ†ãŒ@buf_prevã«è¿½åŠ ã•ã‚Œã¦ã„ãªã„ãŸã‚ã€2ã¤ã‚’åŒã˜é…åˆ—ã«ã„ã‚Œã€\r\nç¾åœ¨ã®line_numã‚’ç¬¬2å¼•æ•°ã¨ã—ã¦lernãƒ¡ã‚½ãƒƒãƒ‰ã«æ¸¡ã—ã¾ã™ã€‚\r\n\r\nã€Žãªã‚‹ã»ã©ã­ã€ã‚ã® numãŒ nuxã ã£ãŸã‹ã‚‰ã“ã®ã‚¨ãƒ©ãƒ¼ã¯ãŠããªã‹ã£ãŸã®ã‹ã€‚ã€\r\n\r\nlearnãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Freqã‚¯ãƒ©ã‚¹ã®extract_termsã‚’ä½¿ç”¨ã—ã¦ @new_termsã‚’å¾—ã¾ã™ã€‚\r\n\r\n\r\n> 277 sub learn {\r\n> 278     my ($self, $lines, $idx ) = @_;\r\n> 279\r\n> 280     my @new_terms = Freq->extract_terms( $lines, 30 );\r\n> 281\r\n> 282     for my $term ( @new_terms ) {\r\n> 283         $self->add_term($term);\r\n> 284     }\r\n> 285\r\n> 286     if( $idx ) {\r\n> 287         my @words_all;\r\n> 288\r\n> 289         my $count=0;\r\n> 290         for my $line ( @{$lines} ) {\r\n> 291             my $num = $idx + 1;\r\n> 292             my @words = $self->split_into_terms($line);\r\n> 293             @words_all = (@words_all,@words);\r\n> 294\r\n> 295             for my $term (@words) {\r\n> 296                 if( not  $self->{occur}->{$term}  || $num > $self->{occur}->{$term}->{-1} ) {\r\n> 297                     $self->{occur}->{$term}->{num} += $num;\r\n> 298                 }\r\n> 299             }\r\n> 300         }\r\n> 301\r\n> 302         $self->weight_update(@words_all);\r\n> 303\r\n> 304         for my $term (@{$self->{terms}}) {\r\n> 305             my $occur = $self->{occur}->{$term};\r\n> 306             my $size  = scalar( keys %{$self->{occur}} );\r\n> 307\r\n> 308             if( $size < 4 && $size > 0 && $occur->{num} * $size * 150 < $idx ) {\r\n> 309                 $self->del_term($term);\r\n> 310             }\r\n> 311         }\r\n> 312     }\r\n> 313 }\r\n\r\n\r\nextract_termsã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’åˆæœŸåŒ–ã—ã¦å¼•æ•°ã¨ã—ã¦å—ã‘ãŸã€€ã€Œtextã®æ–‡å­—åˆ—ã‚’é…åˆ—ã¨ã—ã¦ä¿æŒã€ã—ã¾ã™ã€‚\r\n\r\n>   9 sub extract_terms {\r\n>  10     my ($class, $buf, $limit ) = @_;\r\n>  11\r\n>  12     return $class->new($buf)->_extract_terms($limit);\r\n>  13 }\r\n\r\n>  18 sub new {\r\n>  19     my ($class, $buf ) = @_;\r\n>  20\r\n>  21     return bless {\r\n>  22         buf => [ @{[$buf]} ] || [],\r\n>  23     }, $class;\r\n>  24 }\r\n\r\n\r\nå®Ÿéš›ã«å‡¦ç†ã‚’å—ã‘æŒã£ã¦ã„ã‚‹ã®ã¯ã€å†…éƒ¨ãƒ¡ã‚½ãƒƒãƒ‰ã® _extract_termsã§ã™ãŒã“ã“ã‹ã‚‰ã•ã‚‰ã«extract_terms_subã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã‚’\r\nå‘¼ã‚“ã§ã„ã¾ã™ã€‚\r\n\r\n>  29 sub _extract_terms {\r\n>  30     my ($self, $limit) = @_;\r\n>  31\r\n>  32     my @terms = $self->extract_terms_sub($limit);\r\n>  33     my @terms2;\r\n>  34     for my $idx (0..(scalar( @terms - 1) ) ) {\r\n>  35         if( $terms[$idx]\r\n>  36     }\r\n>  37 }\r\n\r\nå®Ÿéš›ã® extract_terms_subã®å‡¦ç†ã¯ä¸‹è¨˜ã§\r\n\r\n>  43 sub extract_terms_sub {\r\n>  44     my ($self, $limit, $str, $num, $width ) = @_;\r\n>  45     $num ||= 1;\r\n>  46     my $h    = $self->freq($str);\r\n>  47     my $flag = ( scalar( keys %$h ) <= 4 ) ? 1 : 0 ;\r\n>  48\r\n>  49     my @result;\r\n>  50     if( $limit > 0 ) {\r\n>  51         if( defined $h->{$str} ) {\r\n>  52             delete $h->{$str};\r\n>  53         }\r\n>  54         # to_a:\r\n>  55         # ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n>  56         # p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n>  57         for my $key ( grep { $h->{$_} < 2 } sort { $h->{$a} <=> $h->{$b} }  keys %$h ) {\r\n>  58             push @result, $self->extract_terms_sub( $limit - 1, $key , $h->{$key}, $flag );\r\n>  59         }\r\n>  60     }\r\n>  61\r\n>  62     if( scalar( @result ) == 0 && $width ) {\r\n>  63         return [ ( lc $str, $num ) ];\r\n>  64     }\r\n>  65\r\n>  66     return \\@result;\r\n>  67 }\r\n\r\næœ€åˆã«å—ã‘å–ã£ãŸæ–‡å­—åˆ—ã‚’ freqãƒ¡ã‚½ãƒƒãƒ‰ã§å‡¦ç†ã—ã¾ã™ã€‚\r\n\r\nã¡ãªã¿ã«ã¾ã‚ã—ã¦ã„ã‚‹ã®ã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ãªé…åˆ—ã€‚\r\n\r\n>   9 ã»ã’\r\n>  10 test\r\n>  11 aaa\r\n>  12 ä½•ã§ã‚„å¹´\r\n\r\nã©ã‚Œã‹ã«å¼•ã£ã‹ã‹ã£ãŸå ´åˆã€ä»¥ä¸‹ã®ã‚ˆã†ãªãƒãƒƒã‚·ãƒ¥ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n> $VAR1 = {\r\n>           \"\\x{30a1}\" => 1,\r\n>           \'H\' => 2,\r\n>           \'W\' => 1,\r\n>           \'!\' => 1\r\n>         };\r\n\r\n\r\n>  72 sub freq {\r\n>  73     my ($self, $str ) = @_;\r\n>  74\r\n>  75     my $freq = {};\r\n>  76\r\n>  77     if( $str ) {\r\n>  78         for my $buf (@{$self->{buf}}) {\r\n>  79             if( $buf =~ /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i ) {\r\n>  80                 $freq->{ $0 || $1 || $2 } += 1;\r\n>  81             }\r\n>  82             else {\r\n>  83                 if( $buf =~ /$str/io ) {\r\n>  84                     $freq=>{$str} += 1;\r\n>  85                 }\r\n>  86             }\r\n>  87         }\r\n>  88     }\r\n>  89\r\n>  90     return $freq;\r\n>  91 }\r\n\r\nå¸°ã£ã¦ããŸãƒãƒƒã‚·ãƒ¥ã‚“ã®keyã‚’å…ƒã«ãƒ•ãƒ©ã‚°ã‚’ç«‹ã¦ã¾ã™ã€‚\r\n\r\nå¼•æ•°ã§ï¼“ï¼ã®limitã‚’æŒ‡å®šã•ã‚Œã¦ã„ã‚‹ã€‚\r\n\r\n> 280     my @new_terms = Freq->extract_terms( $lines, 30 );\r\n\r\nã“ã“ã‹ã‚‰ãŒé¢å€’ã§ã€ãƒãƒƒã‚·ãƒ¥ã®å€¤ã‚’ã‚½ãƒ¼ãƒˆã—ã€å€¤ãŒï¼’ã‚ˆã‚Šå°ã•ã„ keyã‚’å¯¾è±¡ã«\r\nå†å¸°çš„ã«extract_terms_subã‚’å‘¼ã³å‡ºã—ã¦ã€@resultã¸çªã£è¾¼ã‚“ã§ã„ã¾ã™ã€‚\r\n\r\n>  47     my $flag = ( scalar( keys %$h ) <= 4 ) ? 1 : 0 ;\r\n>  48\r\n>  49     my @result;\r\n>  50     if( $limit > 0 ) {\r\n>  51         if( defined $h->{$str} ) {\r\n>  52             delete $h->{$str};\r\n>  53         }\r\n>  54         # to_a:\r\n>  55         # ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n>  56         # p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n>  57         for my $key ( grep { $h->{$_} < 2 } sort { $h->{$a} <=> $h->{$b} }  keys %$h ) {\r\n>  58             push @result, $self->extract_terms_sub( $limit - 1, $key , $h->{$key}, $flag );\r\n>  59         }\r\n>  60     }\r\n>  61\r\n>  62     if( scalar( @result ) == 0 && $width ) {\r\n>  63         return [ ( lc $str, $num ) ];\r\n>  64     }\r\n>  65\r\n>  66     return \\@result;\r\n\r\n\r\nçµæžœçš„ã«ã€ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ãªæ§‹é€ ã‚’è¿”ã™ã€‚\r\n\r\n> [\r\n> 	\"hello world\",\r\n> 	1,\r\n> ],\r\n\r\nã“ã®çµæžœã‚’å—ã‘ã¦ã€\r\n\r\n>  29 sub _extract_terms {\r\n>  30     my ($self, $limit) = @_;\r\n>  31\r\n>  32     my @terms = @{$self->extract_terms_sub($limit)};\r\n>  33     @terms    = map {\r\n>  34     my @terms2;\r\n>  35     for my $idx (0..(scalar( @terms - 1) ) ) {\r\n>  36         if( $terms[$idx]\r\n>  37     }\r\n>  38 }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼\r\n\r\n\r\n\r\nå‰ã«ã‚‚è¿°ã¹ã¾ã—ãŸãŒã€Directoryã‚¯ãƒ©ã‚¹ã¯ï¼’ã¤ã®ãƒ‡ãƒ¼ã‚¿ã‚’ç®¡ç†ã™ã‚‹ãŸã‚ã®ãƒ‡ãƒ¼ã‚¿ã‚¯ãƒ©ã‚¹ã§ã™ã€‚\r\nå…·ä½“çš„ã«ã„ã†ã¨ã€ï¼“ï¼•è¡Œç›®ã¨ï¼“ï¼–è¡Œç›®ã§æŒ‡å®šã•ã‚Œã¦ã„ã‚‹ï¼’ã¤ã®ãƒ•ã‚¡ã‚¤ãƒ«ã®ã“ã¨ã‚’ã•ã—ã¾ã™ã€‚\r\n\r\n>  35         text_filename => \"@{[$dirname]}/@{[$TEXT_FILENAME]}\",\r\n>  36         dic_filename  => \"@{[$dirname]}/@{[$DIC_FILENAME]}\",\r\n\r\nã“ã®2ã¤ã®ãµãã„ã‚‹ã®æ§‹é€ ã¯ãã‚Œãžã‚Œä»¥ä¸‹ã®ã‚ˆã†ã«ãªã‚Šã¾ã™ã€‚\r\n\r\nã€Žsixamo.dicã€\r\n\r\n>   1 line_num: 48\r\n>   2\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n>   4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n>   5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n>   6 test    10  100 9,17,18,22,23\r\n>   7 ã¬ã‚    1   28  14,80,90\r\n>   8 ã¯ã‚    0   22  38,85\r\n>   9 ã„ãŸã„  0   21  26,87\r\n>  10 aaa 1   40  10,19\r\n>  11 ã“ã‚“    1   40  2,36\r\n>  12 ãŠãƒ¼ã„  1   40  43,46\r\n>  13 ã©ã†ã”  1   13  81,82\r\n>  14 ãªã‚“ã   1   30  70,75\r\n>  15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n>  16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n>  17 ã’ã‚“    0   20  0\r\n>  18 ï½“ï½„    1   40  30\r\n>  19 ãˆãˆãˆ  1   40  4\r\n\r\nã€Žsixamo.txtã€\r\n\r\n>   1 ã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\n>   2 ã¦ã™ã¨ã ã‚ˆ\r\n>   3 ã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\n>   4 OhYear\r\n>   5 ãˆãˆãˆãˆãˆãˆãˆ\r\n>   6 ãŠã®ã‚Œ\r\n>   7 æ”¯ç¤¾ã‚‚ã®ãã›ã«\r\n>   8 ä»Šç•œç”Ÿ\r\n>   9 ã»ã’\r\n>  10 test\r\n>  11 aaa\r\n>  12 ä½•ã§ã‚„å¹´\r\n>  13 ã¦ã™ã¨\r\n>  14 ãªã‚“ã§ã™ã¨\r\n>  15 ã¬ã‚\r\n>  16 ã‚‚ã†ã‚„\r\n>  17 ã€€\r\n>  18 test\r\n>  19 test\r\n>  20 aaa\r\n>  21 ã¸ãˆ\r\n>  22 ã‚€ããƒ¼\r\n>  23 test\r\n>  24 test\r\n>  25 ã“ã‚ŒãŒè‹¥ã•ã‹\r\n>  26 ã‚ã‚\r\n\r\nã—ã—ã‚ƒã‚‚ã«ã¨ã£ã¦ã¯ã€è¡Œå‹•ã®åŸºç‚¹ã¨ãªã‚‹æƒ…å ±ã¯ã“ã‚Œã ã‘ã§ã™ã€‚\r\n\r\nã¡ãªã¿ã«ã€Directoryã‚’newã•ã‚ŒãŸæ™‚ç‚¹ã§ã¯sixamo.dicã®æ–¹ã¯èª­ã¿è¾¼ã‚“ã§ã„ã¾ã›ã‚“ã€‚\r\n\r\n\r\nã¾ãšã¯ã€sixamo.txtã®æ–¹ã‚’ã©ã“ã«ã©ã†èª­ã¿è¾¼ã‚“ã§ã„ã‚‹ã‹ã‚’è§£èª¬ã—ã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsixamoãŒæ°—æŒã¡æ‚ªã„ç‚¹ã¯ã€å˜ç´”ã«ç„¡è¨ˆç”»ãªå¢—æ”¹ç¯‰ã®çµæžœã˜ã‚ƒãªã„ã‹ãªã¨æ€ã‚ã‚Œã¾ã™ã€‚\r\n\r\n\r\n  ','2007-10-15 23:41:23','2007-10-22 11:28:34'),(141,'dZQLcLNAnV','HTTP_X_FORWARDED_FOR ã‚’ RewriteCond ã§ä½¿ã†ã«ã¯ï¼Ÿ ','apache','HTTP_X_FORWARDED_FOR ã‚’ RewriteCond ã§ä½¿ã†ã«ã¯ï¼Ÿ â€ \r\n\r\nCGI ç­‰ã§ã¯ X_FORWARDED_FOR ã¨ã„ã†ç’°å¢ƒå¤‰æ•°ã§ X-Forwarded-For ãƒ˜ãƒƒãƒ€ã«ã‚¢ã‚¯ã‚»ã‚¹ã§ãã‚‹ã®ã§ã€ãã®ãƒŽãƒªã§ %{HTTP_X_FORWARDED_FOR} ã«ãƒžãƒƒãƒã•ã›ã¦ã‚„ã‚Œã°è‰¯ã„ã‹ã¨æ€ã£ãŸãŒã“ã‚Œã§ã¯å–ã‚Œãªã„ã‚ˆã†ã ã€‚ä»–ã« %{ENV:HTTP_X_FORWARDED_FOR} ã§ã‚‚é§„ç›®ãªã‚ˆã†ã ã€‚\r\n\r\næ­£è§£ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«ã—ã¦ã‚„ã‚Œã°ã‚ˆã„ã¨ã„ã†ã“ã¨ãŒåˆ†ã£ãŸã®ã§ãƒ¡ãƒ¢ã€‚\r\n\r\nRewriteCond %{HTTP:X-Forwarded-For} !^192\\.168\\.','2007-10-23 16:43:00','2007-10-23 07:43:00'),(142,'Yq1hVyuqKX','Template Plugin ã“ã‚“ãªã‚“','perl','\r\n>|perl|\r\n    use Template;\r\n    my $template = Template->new({ \r\n        PLUGIN_BASE => \'MyOrg::Template::Plugin\',\r\n    });\r\n||<\r\n\r\nã“ã‚“ãªã‚“ã§ã‚ˆã‹ã£ãŸã®ãªã€‚\r\n\r\n\r\n[http://search.cpan.org/~abw/Template-Toolkit-2.19/lib/Template/Plugin.pm] ','2007-10-24 00:09:14','2007-11-16 05:28:52'),(143,'YVLdo6B9wb','è­¦å‘Šãƒ¡ãƒ¼ãƒ«','perl','>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Jcode;\r\nuse Template;\r\n\r\nmy $TEXT     = $ARGV[0];\r\nmy $TEXT_TMP = $ARGV[1];\r\n\r\nunless( my @result = `/usr/bin/diff $TEXT $TEXT_TMP` ){\r\n\r\n    my $data = join(\'\',<DATA> );\r\n\r\n    my $template = Template->new({});\r\n    $template->process(\r\n        \\$data,\r\n        {\r\n            diff_results => [ map { Jcode->new($_)->sjis } @result ],\r\n        }\r\n    );\r\n}\r\n\r\n__END__\r\nã‚„ã‚ã€ãã‚‡ã†ã¯ã€nippo.txtã‚’ã¾ã æ›¸ã„ã¦ãªã„ã­ã€‚\r\nã¡ã‚ƒã‚“ã¨æ›¸ã„ã¦å¸°ã‚‹ã‚“ã ã‚ˆã€‚\r\n\r\nã“ã‚ã„ã‚ã¤ã—ã•ã‚“ã«ãŠã“ã‚‰ã‚Œã¡ã‚ƒã†ã‹ã‚‰ã­ã€‚\r\n\r\ndiff:\r\n\r\n[% FOR diff_result IN diff_results %]\r\n    [% diff_result %]\r\n[% END %]\r\n||<','2007-10-24 13:53:21','2007-11-17 15:10:12'),(144,'sm7bu6tLGg','sukinaç§»è¡ŒFTPé–¢é€£','works','17:48:48 nekokak    > Sukinaã§ã™ã‘ã©ã€FTPã‚µãƒ¼ãƒã‹ã‚ã‚Šã¾ã™ã‚ˆãƒ¼ã£ã¦ã®ã‚‚ã¤ãŸãˆã¦ã‚ã’ã¦ãã ã•ã„ã­ï¼žã‚„ã¾ãªã‹ã•ã‚“\r\n17:49:36 YamaSan    > äº†è§£ã§ã™ã€‚å¤‰æ›´äºˆå®šå…ˆã£ã¦ã‚¢ãƒ¬ã«ã®ã£ã¦ã¾ã—ãŸã£ã‘ã€‚\r\n17:49:54 nekokak    > ã‚¢ãƒ¬ã£ã¦ãªã‚“ã©ã®ã‚¢ãƒ¬ã§ã™ã‹ï½—\r\n17:50:24 YamaSan    > ã‚¢ãƒ¬ã€€ï¼ã€€ã‚µãƒ¼ãƒãƒ¼ä¸€è¦§ã§ã—ãŸã€‚\r\n17:50:45 nekokak    > ã®ã£ã¦ã‚‹ã¯ãšã§ã™\r\n17:50:56 tokuhiro_  > ï½—\r\n17:51:05 nekokak    > ã‚¢ã‚«ã‚¦ãƒ³ãƒˆã¤ãã£ãŸã‚Šã¨ã‹ã¯Wikiã«ã‹ã‚“ã‹ã‚“ãŒã¾ã¨ã‚ã¦ãã‚Œã¦ãŸã‚Š\r\n17:51:16 nekokak    > S_S_Dã«READMEçš„ãªã‚‚ã®ãŒã‚ã‚‹ã®ã§\r\n17:51:20 nekokak    > ãã‚Œã¿ã¦ãã ã•ã„ã¾ã—\r\n17:51:45 nekokak    > ã‚ã¨ã€Phoenixã¯FTPã‚µãƒ¼ãƒã§ã†ã”ã‹ã—ãŸã“ã¨ãªã„ã®ã§ãƒ‡ãƒ—ãƒ­ã‚¤ãªã©ãªã©ã¡ã‚…ã†ã„ã£ã™\r\n17:52:25 nekokak    > ã‚ã¨\r\n17:52:25 nekokak    > Phoenix/Script/Cron/ScanMemberFTP.pm\r\n17:52:32 nekokak    > ã ã¨FTPã®ãƒ¡ãƒ³ãƒãƒ¼ã‚’ã™ãã‚ƒã‚“ã—ã¦ã‚‹ã½ã„ã™ã­\r\n17:52:38 YamaSan    > äº†è§£ã€ã§ã™ã€‚ã€€S_S_Dã¨ã„ã†ã®ã¯ã€ãªã‚“ã®ç•¥ã§ã—ãŸã£ã‘ï¼Ÿã€€æ–°ã—ã„å¿…æ®ºæŠ€ã«ã¿ãˆã‚‹ã€‚\r\n17:52:51 nekokak    > ã•ãƒ¼ã°ãƒ¼ã›ã£ã¨ã‚ã£ã·ã§ã³ã‚ã‚“ã™','2007-10-24 17:58:34','2007-10-24 08:58:34'),(145,'LReHkE5upm','éƒµä¾¿ç‰©','memo','å—ä»˜ã‚’å®Œäº†ã„ãŸã—ã¾ã—ãŸã€‚ï¼ˆå—ä»˜ç•ªå·779-4906-108ï¼‰ 2007/10/25 13:04\r\n \r\nå—ä»˜ç•ªå·ã¯å¿…ãšãŠæŽ§ãˆãã ã•ã„ã€‚\r\nï¼ˆãƒ¡ãƒ¼ãƒ«ã‚¢ãƒ‰ãƒ¬ã‚¹ã‚’æœªå…¥åŠ›ã®æ–¹ã¯ãƒšãƒ¼ã‚¸å†…å®¹ã‚’å°åˆ·ãªã©ã§ä¿å­˜ã—ã¦ãã ã•ã„ï¼‰\r\n \r\n \r\n\r\nä¾é ¼è€…æƒ…å ±\r\néƒµä¾¿ç•ªå· Zip Code 	169-0075\r\nã”ä½æ‰€ Address 	æ±äº¬éƒ½æ–°å®¿åŒºé«˜ç”°é¦¬å ´ï¼“ï¼ï¼‘ï¼”ï¼ï¼˜ã€€ç¬¬2é’ç¾Žãƒã‚¤ãƒ„ï¼’ï¼ï¼‘å·\r\näº‹æ¥­æ‰€ Office 	\r\nãŠåå‰ Name 	å±±ä¸­ã€€è£•ä¹‹\r\næ—¥ä¸­ã®ã”é€£çµ¡å…ˆ\r\nPhone Number in the Daytime 	080-5475-2865\r\nå†…ç·šç•ªå·\r\nExtension Number 	\r\nãƒ¡ãƒ¼ãƒ«ã‚¢ãƒ‰ãƒ¬ã‚¹\r\nEmail Address 	\r\n\r\nç¨®é¡žã®é¸æŠž\r\nãŠçŸ¥ã‚‰ã›ç•ªå·\r\nNotice Number 	19456256\r\nãŠå•ã„åˆã‚ã›ç•ªå·ï¼ˆè¿½è·¡ç•ªå·ï¼‰\r\nItem Number 	\r\néƒµä¾¿ç‰©ç­‰ã®ç¨®é¡ž\r\nMail etc. Type 	éƒµä¾¿ç‰©ãƒ»ä¸Šè¨˜ä»¥å¤–\r\nã€Œéƒµä¾¿ç‰©ç­‰ãŠé ã‹ã‚Šã®ãŠçŸ¥ã‚‰ã›ã€ã®ãŠå±Šã‘æ—¥\r\nDate of the Redelivery Notice 	10æœˆ18æ—¥','2007-10-25 13:04:56','2007-10-25 04:04:56'),(146,'7xZMoAOFXQ','è§£èª¬è¨˜äº‹ã€€å‡¦ç†é †åº','sixamo.rb','\r\nï¼‘ï¼Žtalk\r\n	ãƒ»æ–‡å­—åˆ—ã‚’å¼•æ•°ã¨ã—ã¦å—ã‘å–ã‚‹\r\n	ãƒ»keywordsã‚’å¾—ã‚‹\r\n		ãƒ»æ–‡å­—åˆ—ã‚’å—ã‘å–ã‚‹é™ã‚Šã€Œ@dic.split_into_keywordsã€ã‹ã‚‰ãƒ‡ãƒ¼ã‚¿ã‚’å¾—ã‚‹ã€‚\r\n		ãƒ»weightã‚‚ç©ºã§å‡¦ç†ã•ã‚Œã‚‹ã€‚\r\n		ãƒ»split_into_keywordsï¼š\r\n			ãƒ»split_into_termsã‹ã‚‰termsã‚’å¾—ã‚‹\r\n				ãƒ»longest_prefix_subwordã‹ã‚‰prefixã‚’å¾—ã‚‹\r\n					ãƒ»rootã®è©²å½“ãƒŽãƒ¼ãƒ‰ä¸­æœ€ã‚‚ãªãŒã„ã‚‚ã®ã‚’è¿”ã™ã€‚\r\n	ãƒ»msgã‚’å¾—ã‚‹\r\n		ãƒ»message_markovã‹ã‚‰å¾—ã‚‹ã€‚\r\n\r\n\r\n','2007-10-28 11:46:50','2007-10-28 02:46:50'),(147,'yq5JdeWEQc','å‹•ç”»ç®¡ç†ç”¨ãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆä½œæˆ','perl','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\néŸ³å£°ãƒ»å‹•ç”»ã‚’ç®¡ç†ã™ã‚‹ãŸã‚ã®ãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆãŒæ¬²ã—ã„ã®ã§ä½œæˆã™ã‚‹ã€‚\r\n\r\nTODO:\r\n\r\nãƒ»å‹•ç”»ã®UPæ©Ÿèƒ½\r\nãƒ»ç®¡ç†æ©Ÿèƒ½\r\nãƒ»æ¤œç´¢æ©Ÿèƒ½\r\n\r\nå‚ç…§ï¼š\r\nhttp://www.tcool.org/catalyst/Cookbook.html','2007-10-30 14:06:59','2007-10-30 05:06:59'),(148,'b0z4QJjt6Q','Use of uninitialized value in hash element','perl','use strict;\r\nuse warnings;\r\n\r\nmy $str;\r\nmy %hash;\r\n\r\nsub hoge { }\r\n\r\n$hash{&hoge} = $str;\r\n\r\n','2007-11-01 10:49:33','2007-11-01 01:49:33'),(149,'AZ1rWWi9dJ','utakami ãƒ©ãƒ³ã‚­ãƒ³ã‚°','works','use strict;\r\nuse warnings;\r\n\r\nwhile(my $line = <DATA> ) {\r\n    chomp $line;\r\n    my ( $contents_uid , $rank , $title ) = split / /, $line ;\r\n\r\n    print \"UPDATE ranking SET contents_uid = $contents_uid WHERE span = 1  AND rank = $rank;\\n\";\r\n}\r\n\r\n__END__\r\n19931 1 ãœã‚“ã¾ã„ã–ã‚€ã‚‰ã„ã®ã†ãŸ\r\n19885 2 æœ€æœŸã®å·\r\n19886 3 èŠ±ã®å\r\n19701 4 ï½±ï½¥ï½²ï½¥ï½¼ï½¥ï¾ƒï½¥ï¾™ã®ï½»ï½²ï¾ï½žã‚ãŸã—ãŸã¡ã®æœªæ¥äºˆæƒ³å›³ï½ž\r\n19354 5 ãŠã—ã‚Šã‹ã˜ã‚Šè™«\r\n19762 6 DAYBREAK\'S BELL\r\n19884 7 Urban Mermaid\r\n19880 8 Pink Keyï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\r\n18271 9 Hero\'s Come Back!!\r\n37 10 å¿…æ®ºä»•äº‹äººã®ï¾ƒï½°ï¾\r\n19997 11 æœ€æœŸã®å·ï½žï½µï¾™ï½ºï¾žï½°ï¾™ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\r\n19658 12 LOVE & TRUTH\r\n19817 13 é™½ã¯ã¾ãŸã®ã¼ã‚Šãã‚Šã‹ãˆã™\r\n19753 14 ï¾†ï½ºï¾†ï½ºï¾ï½¬ï¾ï¾Œï¾Ÿ\r\n19825 15 LALALA feat.è‹¥æ—¦é‚£(æ¹˜å—ä¹ƒé¢¨)\r\n19752 16 LOVE LETTER\r\n19704 17 ï½½ï¾„ï¾›ï¾ï½¸ï¾žï½½ï¾€ï½²ï¾™\r\n19764 18 ï½¸ï¾‘ï¾˜ï½³ï¾€\r\n19758 19 å­˜åœ¨éŸ³ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\r\n19824 20 Chosen Soldier','2007-11-02 10:35:33','2007-11-02 01:35:33'),(150,'kNhlLZdh1O','poundã¨ã‚ãŸ','works','[yamanaka@gj053.mfac.jp]$ sudo /etc/init.d/apache2 stop\r\nStopping web server: Apache2.\r\n[yamanaka@gj053.mfac.jp]$\r\n[yamanaka@gj053.mfac.jp]$\r\n[yamanaka@gj053.mfac.jp]$\r\n[yamanaka@gj053.mfac.jp]$ sudo /etc/init.d/apache2 start\r\nStarting web server: Apache2.\r\n[yamanaka@gj053.mfac.jp]$ sudo /usr/bin/po\r\n[yamanaka@gj053.mfac.jp]$ sudo /usr/sbin/pound stop\r\n[yamanaka@gj053.mfac.jp]$ sudo /etc/init.d/pound stop\r\nStopping pound: pound.\r\n','2007-11-02 18:01:35','2007-11-02 09:01:35'),(151,'0lvKC5MxRx','ã‚¢ãƒ©ãƒ¼ã¨','works','ã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãŠã¯ã‚ˆã†ã”ã–ã„ã¾ã™ã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãŠã¯ã‚ˆã†ã”ã–ã„ã¾ã™ãƒ¼\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãŠã¯ã‚ˆã†ã”ã–ã„ã¾ã™ã€‚æœæ—©ãã«æ‚ªã„ã‚“ã ã‘ã©\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã•ã£ãã€ãƒ¡ãƒ­æ­Œã®CRONãŒã“ã‘ã¦ã¦\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã¾ãŸ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\n/usr/local/mf/SHARE/output/melody : Permission denied\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã“ã‚“ãªã‚“ã§ã¦ã‚‹ã®ã‚ˆã€ã“ã‚Œã£ã¦ã€å‰å›žã©ã“ãŒãŠã‹ã—ã‹ã£ãŸã‹ã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚ã‚Šã‚ƒã€å‰ã«ã‚‚ã‚ã‚Šã¾ã—ãŸã­ãˆ\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nç¢ºã‹ã‚ã®æ™‚ã¯ã€ã‚¨ãƒ©ãƒ¼ãƒ¡ãƒƒã‚»ãƒ¼ã‚¸ã®é€šã‚Š/outputã®ãƒ‘ãƒ¼ãƒŸãƒƒã‚·ãƒ§ãƒ³ãŒå¤‰ã§\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãã‚Œã‚’ç›´ã—ãŸã‚‰å‹•ã„ãŸè¨˜æ†¶ãŒã‚ã‚Šã¾ã™\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nrwxr-xr-x    7 mf       mfã€€\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\n/output/melodyã‚‚ã§ã™ã‹ï¼Ÿ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\ndrwxr-xr-x  102 mf       mfã€€melody\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãµã‚€ãƒ¼\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nå˜ã«ã€ã‚‚ã£ã‹ã„å‹•ã‹ã—ã¦ã‚‚åŒã˜ã‚¨ãƒ©ãƒ¼å‡ºã¾ã™ï¼Ÿmfæ¨©é™ã§\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nrsync error: errors selecting input/output files, dirs (code 3) at flist.c(1001)\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nåŒã˜ã‚¨ãƒ©ãƒ¼ãŒã§ã‚‹ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\npop_dir /usr/local/mf/SHARE/output/melody : Permission denied\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nsudo -u mf /usr/bin/rsync -rltgoD -uzC -e ssh /usr/local/mf/SHARE/output/melody/ã€€ç›¸æ‰‹å…ˆ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nå®Ÿè¡Œã—ãŸã®ã“ã‚“ãªã‚“\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãªã‚‹ã»ã©\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãã®1è¡Œã ã‘ã§ã™ã‹ï¼Ÿãƒžã‚·ãƒ³ã©ã“ã§ã—ãŸã£ã‘\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\ngj057\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\n/usr/local/mf/melouta/script/sync_hottolink.sh ã§ã™ã‹ã­ï¼Ÿ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã€ãã‚Œ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã—ãŸã®ãƒ‡ãƒ¼ã‚¿ã‚³ãƒ”ãƒ¼ã¯æ—¨ãã„ã£ã¦ã‚“ã ã‘ã©\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\næ›²ãƒ‡ãƒ¼ã‚¿ã®rsync\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã®éƒ¨åˆ†ãŒã“ã‘ã¦ã‚‹\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãªã‚‹ã»ã©\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚“ã¨ã€ã“ã®shã£ã¦å†å®Ÿè¡Œã—ã¦ã‚‚OKã§ã™ã‹ï¼Ÿ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚³ãƒ”ãƒ¼ã—ã¦ã‚‹ã ã‘ã ã‹ã‚‰å¤§ä¸ˆå¤«ã ã‚ˆã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚“ãƒ¼ã€ã‚„ã£ã±ã ã‚ã§ã—ãŸ\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nä¸€å›ž chmod -Rã—ã¦ã¿ãŸã‚“ã§ã™ãŒ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãªã‚“ã§ã ã‚ã†ã­ã€æ¨©é™ã‚’æ›¸ãæ›ãˆã‚‹ã‚ˆã†ãªå‡¦ç†ã—ã¦ã‚‹ã£ã‘ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\næ°´æ›œæ—¥ã‚‚ã†ã”ã„ã¦ã‚‹ã‹ã‚‰ãã‚Œã¾ã§ã¯å‹•ã„ã¦ã„ãŸã¯ãšãªã‚“ã ã‘ã©ãªã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãµãƒ¼ã‚€\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nä¸€æ™‚çš„ã« chomd 777 ã¨ã‹ã¨ã„ã†èª˜æƒ‘ã«ã‹ã‚‰ã‚Œã‚‹\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã™ã‚“ã¾ã›ã‚“ã€ãã‚Œä»Šã‚„ã£ã¡ã‚ƒã£ã¦ã¾ã™ï½—\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nï½—\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\né€†ã«ã“ã‚Œã§é§„ç›®ã ã¨ãŠæ‰‹ä¸Šã’ã§ã™ã­ãˆ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãã‚Œã§é§„ç›®ãªã‚‰ã€ã“ã®ã‚µãƒ¼ãƒãƒ¼ã“ã‚ã‚Œã¦ã‚“ã˜ã‚ƒãªã„ã‹\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\né§„ç›®ã§ã—ãŸ orz\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã†ã£ããƒ¼\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚ãƒ¼ã€ã¨ã„ã†ã‹ã‚¢ãƒ¬ã \r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã“ã®permission deniedã£ã¦ã€å‘ã“ã†ã®ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã«å¯¾ã—ã¦å‡ºã¦ã‚‹ã‚“ã˜ã‚ƒãªã„ã§ã™ã‹ã­ï¼Ÿ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nè¦—ã„ã¦ã¿ã‚‹ã‹ãª\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã¯ã„ã‚Œã‚‹ã‚“ã ã‚ˆã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nmf ãƒ¦ãƒ¼ã‚¶ãƒ¼ã§\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nãŸã¶ã‚“\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\ndrwxrwxr-x   31 webadmin www 4096  9 29 00:30 99\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã“ã‚“ãªã‚“\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã“ã‚Œã€æœ€å¾Œ r-xã ã¨é§„ç›®ã˜ã‚ƒãªã„ã®ã‹ãªã€‚ã‚‚ã—ãã¯ã€ã“ã£ã¡ãŒ www ã‹ã€€\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚ãƒ¼wãŒä»˜ã„ã¦ãªã„ã®ã¯ã‚¢ãƒ¬ã‹ã‚‚ï¼Ÿ\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã‚„ã€ã§ã‚‚ã“ã‚ŒwãŒä»˜ã„ã¦ãªã„ã®ã¯othersã ã‘ã ã‹ã‚‰å•é¡Œãªã„ã¯ãš\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã„ã‚„ã€é•ã†ãª\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã“ã£ã¡ã¯ftpadminã‚¢ã‚«ã‚¦ãƒ³ãƒˆã§ç¹‹ã„ã§ã‚‹ã‹ã‚‰\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nå±±ä¸­ã•ã‚“ã®è¨€ã†ã‚ˆã†ã«ã€ã“ã“ã«wãŒç„¡ã„ã¨å‹•ã‹ã‚“ã™ã­\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã—ã‹ã—ã€æµçŸ³ã«äººæ§˜ã®ã‚µãƒ¼ãƒã®ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã‚’ã„ã˜ã‚‹ã®ã¯ã¾ãšã„ã®ã§\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\næœˆæ›œæ—¥ã¾ã§æ§˜å­ã¿ã¦ã€å¤‰ã‚ã£ã¦ãªã‹ã£ãŸã‚‰å–¶æ¥­çµŒç”±ã§é€£çµ¡ã€ã‹ãªã‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‹ãªã€ä¸€å¿œURSERã¯ ftpadminã ã‹ã‚‰ã‚„ã£ã±ã‚ŠãŠã‹ã—ã„ã‹ãªã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã§ã™ã­\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nçµŒç·¯ã‚’ã¾ã¨ã‚ã¦alertã«æµã—ã¾ã™ã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã¯ãƒ¼ã„\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã‚ŠãŒã¨ã†ã”ã–ã„ã¾ã—ãŸã€‚\r\nå¹¹ ä¼åŽŸ ã®ç™ºè¨€:\r\nã„ãˆã„ãˆ\r\n\r\ngj057ã§ã€Œ/usr/local/mf/melouta/script/make_ranking.shã€ã¨ã„ã†ã€Œãƒ¡ãƒ­ã†ãŸç”¨ãƒ©ãƒ³ã‚­ãƒ³ã‚°ç”Ÿæˆã‚¹ã‚¯ãƒªãƒ—ãƒˆã€\r\nãŒã“ã‘ã¦å±…ãŸã®ã§å¯¾å¿œã—ã¾ã—ãŸã€‚ã“ã‘ã¦ã„ãŸç›´æŽ¥çš„ãªåŽŸå› ã¯ utakamiã®ã‚¹ã‚¯ãƒªãƒ—ãƒˆãƒ•ã‚¡ã‚¤ãƒ«ã‚’æ¶ˆã—ã¦ã—ã¾ã£ãŸã“ã¨ã ã£ãŸã®ã§ã€\r\nãã¡ã‚‰ã¯ãƒ•ã‚¡ã‚¤ãƒ«ã‚’å¾©æ´»ã•ã›ã¦å†é›†è¨ˆã‚’è¡Œã„ã¾ã—ãŸã€‚ã¨ã“ã‚ãŒã€ãƒ©ãƒ³ã‚­ãƒ³ã‚°ãƒ‡ãƒ¼ã‚¿ã®scpã¨åŒæ™‚ã«è¡Œã£ã¦ã„ã‚‹\r\nrsync(æ¥½æ›²)ã®ã¨ã“ã‚ã§ã‚¹ã‚¯ãƒªãƒ—ãƒˆãŒã€Œpop_dir /usr/local/mf/SHARE/output/melody : Permission deniedã€ã¨ã„ã†ã‚¨ãƒ©ãƒ¼ã‚’å‡ºã—ã¦\r\nã“ã‘ã¾ã—ãŸã€‚ä»¥å‰ã«ãŸã‚ˆã†ãªå•é¡ŒãŒã‚ã£ãŸã®ã§ ã‹ã‚“ã‹ã‚“ã«ã‚‚æ‰‹ä¼ã£ã¦ã‚‚ã‚‰ã„/outputç­‰ã®æ¨©é™ã‚’èª¿ã¹ãŸã‚Šã‚†ã‚‹ãã—ãŸã‚Šã—ã¦\r\nè‰²ã€…è©¦ã—ã¦ã¿ã¾ã—ãŸãŒåŒã˜ã‚¨ãƒ©ãƒ¼ãŒå‡ºç¶šã‘ã¾ã™ã€‚å…ˆæ–¹ã®ã»ã†ã®æ¨©é™ãŒã¸ã‚“ã§ã¯ãªã„ã‹ã¨æ€ã„èª¿ã¹ã¦ã¿ã‚‹ã¨ãƒ•ã‚¡ã‚¤ãƒ«ã®æ¨©é™ãŒã€Œdrwxrwxr-x   31 webadmin wwwã€ã¨ãªã£ã¦ã„ã¾ã—ãŸã€‚\r\næŽ¥ç¶šã—ã¦ã„ã‚‹ãƒ¦ãƒ¼ã‚¶ãƒ¼ã®æ¨©é™ã ã¨æ›¸ãè¾¼ã‚ãªã„ã¿ãŸã„ãªã®ã§ã€æœˆæ›œã¾ã§æ§˜å­ã‚’ã¿ã¦é€£çµ¡ã™ã‚‹æ–¹é‡ã«ã—ã¾ã—ãŸãŒã€ã“ã¡ã‚‰ã§ã‚ˆã‚ã—ã„ã§ã—ã‚‡ã†ã‹ã€‚æœ¨æ‘ã•ã‚“ã€‚\r\n\r\n\r\n\r\n','2007-11-03 13:30:19','2007-11-03 04:30:19'),(152,'00nO9efrDg','ã—ã—ã‚ƒã‚‚ã®å­¦ç¿’ã«ã¤ã„ã¦','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã—ã—ã‚ƒã‚‚ã®å­¦ç¿’ã®è»¢æ©Ÿã¨ãªã‚‹ä¸€å®šé‡ã®è“„ç©ã¨ã¯ãƒ—ãƒ­ã‚°ãƒ©ãƒ ã§ã¯ã©ã“ã®éƒ¨åˆ†ã‚’ã•ã—ã¦ã„ã‚‹ã§ã—ã‚‡ã†ã‹ã€‚\r\n\r\n\r\nã€Œé€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚ã€\r\n\r\n\r\nè©²å½“ç®‡æ‰€ã¯è“„ç©éƒ¨åˆ†ã¨ã®å‚ç…§ã‚’è¡Œã£ã¦ã„ã‚‹å ´æ‰€ã«é•ã„ã‚ã‚Šã¾ã›ã‚“ã€‚\r\n\r\nã¾ãšã€ãƒ¡ã‚¤ãƒ³ã‹ã‚‰æ–‡å­—åˆ—ã‚’æ¸¡ã™éƒ¨åˆ†ãŒã“ã¡ã‚‰ã§ã™ã€‚\r\n\r\n> 315 # -------------------------------------------------------------------------\r\n> 316 # ã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã«åˆ†ã‘ã‚‹\r\n> 317 # -------------------------------------------------------------------------\r\n> 318 sub split_into_keywords {\r\n> 319     my ($self, $str ) = @_;\r\n> 320\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n> 322     my $result = {};\r\n> 323     for my $word ( @terms ) {\r\n> 324         $result->{$word} += $self->weight($word);\r\n> 325     }\r\n> 326\r\n> 327     return $result;\r\n> 328 }\r\n\r\n\r\nä»¥ä¸‹ã® split_into_termsã®éƒ¨åˆ†ã‚’è¦‹ã¦ã¿ã¾ã—ã‚‡ã†ã€‚\r\n\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n\r\nã¾ã‚ã€å®Ÿéš›å•é¡Œã€ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯Trieã‚¯ãƒ©ã‚¹ã®åŒåãƒ¡ã‚½ãƒƒãƒ‰ã‚’å‘¼ã³å‡ºã—ã¦ã‚‹ã ã‘ãªã‚“ã ã€‚\r\n\r\n> 330 # -------------------------------------------------------------------------\r\n> 331 # å˜èªžã«åˆ†ã‘ã‚‹\r\n> 332 # -------------------------------------------------------------------------\r\n> 333 sub split_into_terms {\r\n> 334     my ($self, $str, $num ) = @_;\r\n> 335\r\n> 336     return $self->{trie}->split_into_terms($str,$num);\r\n> 337 }\r\n\r\nãã‚Œã§ã€ä¸‹è¨˜ãŒå®Ÿéš›ã® Trie.split_into_terms ã¨ãªã‚‹ã€‚\r\n\r\n>  90 sub split_into_terms {\r\n>  91     my $self  = shift;\r\n>  92     my $str   = shift;\r\n>  93     my $num   = shift || 0;\r\n>  94\r\n>  95     return [] unless $str;\r\n>  96\r\n>  97     my @result;\r\n>  98     # while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n>  99     # æ–‡å­—åˆ—ãŒã‚ã‚Šã€ã‹ã¤ã€€$num ãŒæ•°å­—ã€€è‹¥ã—ãã¯ã€€@result ãŒ $numeã€€ã‚ˆã‚Šå°ã•ã„å ´åˆã¯çœŸ\r\n> 100     while( $str and  ( $num =~ /^\\D*?$/ || ( scalar( @result)  < $num ) )) {\r\n> 101\r\n> 102         # self->{root} ã®ä¸­ã§æ–‡å­—åˆ—ãŒå«ã¾ã‚Œã‚‹ã‚‚ã®ã®æœ€å¤§ã®é•·ã•ã®ã‚‚ã®ã‚’è¿”ã™\r\n> 103         my $prefix = $self->longest_prefix_subword($str);\r\n> 104\r\n> 105         if( $prefix ) {\r\n> 106             push @result , $prefix;\r\n> 107             my @strs = split(//,$str);\r\n> 108             # prefix ã®ã‚µã‚¤ã‚ºã‹ã‚‰ æœ€å¾Œã¾ã§ã®æ–‡å­—ã‚’ $strã¸å…¥ã‚Œã‚‹\r\n> 109             # FIXME: bug resultã¸åæ˜ ã—ã¦ãªã„\r\n> 110             $str = join(\'\', map { $strs[$_] } ( scalar( @{[split(//,$prefix)]} ) .. -1) );\r\n> 111         }\r\n> 112         # $self->{root}ã«ã¾ã£ãŸãè“„ç©ãŒãªã‘ã‚Œã° prefix ã¯ undef\r\n> 113         else {\r\n> 114             my ($char,@str_tmp ) = split(//, $str);\r\n> 115             # ã‚‚ã— $num ãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã° å…ˆé ­ã®æ–‡å­—ã‚’ @resultã¸è¿½åŠ \r\n> 116             push @result , $char if $num;\r\n> 117             $str = join(\'\',@str_tmp );\r\n> 118         }\r\n> 119     }\r\n> 120\r\n> 121     return \\@result;\r\n> 122 }\r\n\r\nã“ã®methodã®ä¸­ã§è‚ã«ãªã‚‹ã®ãŒã€longest_prefix_subwordã€€ã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã§ã™ã€‚\r\n\r\nã“ã‚Œã‚’èª¬æ˜Žã™ã‚‹ãŸã‚ã«ã¯ã€$self->{root}ã«å…¥ã£ã¦ã„ã‚‹ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã®èª¬æ˜ŽãŒå¿…è¦ã§ã™ã€‚ï¼ˆã“ã‚ŒãŒã‚ã‹ã‚‹ã¨ã»ã¨ã‚“ã©ã—ã—ã‚ƒã‚‚ã‚ã‹ã‚‹ã‘ã©ï¼‰\r\n\r\nï¼•ï¼—è¡Œç›®ã®ã‚³ãƒ¡ãƒ³ãƒˆã‚’è¦‹ã¦ã„ãŸã ãã¨åˆ†ã‹ã‚‹ã‚“ã§ã™ãŒã€\r\n\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n\r\n$self->{root}ã®ä¸­èº«ã¯ã€æ–‡å­—ã‚³ãƒ¼ãƒ‰ã‚’é€£çµã—ãŸãƒãƒƒã‚·ãƒ¥ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\n>  49 # -------------------------------------------------------------------------\r\n>  50 # longest_prefix_subword\r\n>  51 # rootã®è©²å½“ãƒŽãƒ¼ãƒ‰ä¸­æœ€ã‚‚ãªãŒã„ã‚‚ã®ã‚’è¿”ã™ã€‚\r\n>  52 # prefix: å…ˆé ­ãŒæ¤œç´¢èªžã«ä¸€è‡´ã™ã‚‹å˜èªžã‚„ãƒ•ãƒ¬ãƒ¼ã‚ºã‚’æŽ¢ã™ã“ã¨\r\n>  53 # -------------------------------------------------------------------------\r\n>  54 sub longest_prefix_subword {\r\n>  55     my ($self, $str ) = @_;\r\n>  56\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n>  58     my $node = $self->{root};\r\n>  59\r\n>  60     my $result;\r\n>  61     my $idx = 0 ;\r\n>  62\r\n>  63     # æ–‡å­—åˆ—ã®é…åˆ—ã‚’ä½œã‚‹ã‚ˆ\r\n>  64     my @strs = split(\'\',$str );\r\n>  65     # æ–‡å­—åˆ—ã‚’ãƒã‚¤ãƒˆã‚³ãƒ¼ãƒ‰ã¸å¤‰æ›ã—ã¦ä¸€æ–‡å­—ã¥ã¤ã¾ã‚ã™ã‚ˆ\r\n>  66     for my $byte ( map ord , split(\'\',$str ) ) {\r\n>  67         # nodeã«terminateãŒå‡ºãŸã‚‰ãã“ã¾ã§ã‚’çµæžœã¨ã—ã¦å‡ºåŠ›\r\n>  68         $result = join( \'\', map { $strs[$_] } (0..$idx) ) if $node->{terminate} ;\r\n>  69         # nodeã®æ ¼ç´æ–‡å­—ãŒã¡ãŒã†ãªã‚‰ãã®ã¾ã¾è¿”ã™ã€‚\r\n>  70         return $result unless $node->{$byte};\r\n>  71         $node = $node->{$byte};\r\n>  72         $idx++;\r\n>  73     }\r\n>  74\r\n>  75     # ã‚‚ã—çµ‚ç«¯è¨˜å·ãªã‚‰ã¾ã£ãŸãä¸€ç·’ã®æ–‡å­—åˆ—ã¨ã¿ãªã—ã¦strã‚’ãã®ã¾ã¾è¿”ã™\r\n>  76     $result = $str if $node->{terminate};\r\n>  77\r\n>  78     return $result;\r\n>  79 }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-06 22:26:01','2007-11-06 13:26:01'),(153,'onHoAcFY8A','ã—ã—ã‚ƒã‚‚ã®è§£èª¬ç·åˆ','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nâ– ã€€Sixamop \r\n\r\nã—ã—ã‚ƒã‚‚ã¨ã¯ã€ã”å­˜çŸ¥ã®ã¨ãŠã‚Šruby ã§ã‹ã‹ã‚ŒãŸäººå·¥ç„¡èƒ½ã§ã™ã€‚\r\n\r\néžå¸¸ã«ç«¯çš„ã«ã—ã—ã‚ƒã‚‚ã®ç‰¹å¾´ã‚’èª¬æ˜Žã„ãŸã—ã¾ã™ã¨ã€ãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã‚’ä½¿ç”¨ã—ãŸæ–‡è„ˆä¾å­˜åž‹ã®äººå·¥ç„¡èƒ½ã§ã™ã€‚\r\nNgramã¨ãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã‚’ä½¿ç”¨ã—ãŸå‰²åˆãƒãƒ”ãƒ¥ãƒ©ãƒ¼ãªã‚¿ã‚¤ãƒ—ãªã®ã§ã™ãŒå®Ÿéš›ã«ã¯è¨€èªžå‡¦ç†ç­‰ã®æ€æƒ³ã‚„çŸ¥è­˜ã®\r\nãƒãƒƒã‚¯ãƒœãƒ¼ãƒ³ã¨ã—ã¦ã‚‹ç‚¹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒé¢å€’ãªæ§‹é€ ã«ãªã£ã¦ã„ã‚‹ãŸã‚åˆ†ã‹ã‚Šã¥ã‚‰ããªã£ã¦ã„ã¾ã™ã€‚\r\nPerlã«ç§»æ¤ã™ã‚‹éš›ã«æœ€åˆã¯ãã‚‚ãã‚‚å‡¦ç†ãŒä½•ã‚’ã‚„ã£ã¦ã„ã‚‹ã‹ãŒã‚ã‹ã‚‰ãªãã¦è‹¦åŠ´ã—ã¾ã—ãŸã€‚\r\n\r\nï¼ ä¿¯çž°ï¼ \r\n\r\nã“ã‚Œã‚’ç†è§£ã™ã‚‹ãŸã‚ã«ã¯ã€éžå¸¸ã«å¤§ããªæž ã‹ã‚‰èª¬æ˜Žã—ãŸã»ã†ãŒç†è§£ãŒæ—©ã„ã¨æ€ã„ã¾ã™ã®ã§ã€å›³ã‚’ä½¿ç”¨ã—ã¦\r\nèª¬æ˜Žã•ã›ã¦ã„ãŸã ãã¾ã™ã€‚\r\n\r\nã—ã—ã‚ƒã‚‚ã¯åˆæœŸçŠ¶æ…‹ã§ã¯å…¥åŠ›æ–‡ç« ã‚’ãã®ã¾ã¾è¦šãˆã¦ã„ãã ã‘ã§ä½•ã‚‚ã—ã¾ã›ã‚“ã€‚é€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©\r\nã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚\r\n\r\n==========================================================================\r\nï¼»åˆæœŸçŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« : ãã®ã¾ã¾è¦šãˆã‚‹\r\n\r\n	â†“\r\n\r\nä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸã€‚\r\n\r\n	â†“\r\n\r\nï¼»å­¦ç¿’çŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« ã®ä¸­ã‹ã‚‰â€æ³¨ç›®èªžâ€ã‚’æŽ¢ã—å‡ºã—ã¦ãã¦ãã‚Œã‚’å­¦ç¿’ã™ã‚‹ã€‚\r\n==========================================================================\r\n\r\nå­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ãŸã—ã—ã‚ƒã‚‚ã¯ã€å…¥åŠ›ã®ä¸€å®šã®ç¯„å›²å†…ã«ä½•åº¦ã‚‚å‡ºã¦ãã‚‹èªžã‚’ã€Œæ³¨ç›®èªžã€ã¨ã—ã¦è¨˜éŒ²ã—ã¾ã™ã€‚\r\nå­¦ç¿’ç¯„å›²ã¯ã€æ¯Žå›žåŠåˆ†ã¥ã¤ãšã‚Œã¦ç§»å‹•ã—ã¦ã„ãã¾ã™ã€‚\r\n\r\n\r\nï¼Šã€€ã“ã“ã«ã‚³ãƒ¼ãƒ‰ã‚’æ›¸ã\r\n\r\n\r\nå…¥åŠ›ã®ä¸­ã«ã‚ã‚‹æ³¨ç›®èªžã‚’ã™ã¹ã¦æŽ¢ã—å‡ºã—ã¾ã™ã€‚ã¤ã¥ã„ã¦ã€ãƒ­ã‚°ã®ä¸­ã«ã‚ã‚‹æ³¨ç›®èªžã‚’å«ã‚€ã™ã¹ã¦ã®è¡Œã¨ãã®å‰å¾Œã‚’æŒã¡å‡ºã—ã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nä»¥ä¸‹ã®ã‚ˆã†ãªã‚¯ãƒ©ã‚¹æ§‹é€ ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\n|-- Sixamo\r\n|   |-- Core\r\n|   |-- Dictionary\r\n|   |-- Freq\r\n|   |-- Trie\r\n|   `-- Util\r\n\r\nå‡¦ç†ã”ã¨ã«åˆ†ã‘ã‚‰ã‚Œã¦ã„ã¾ã™ã€‚ä¿¯çž°ã™ã‚‹ã¨å¤§ä½“ä»¥ä¸‹ã®ã‚ˆã†ãªæ„Ÿã˜ã«ãªã‚Šã¾ã™ã€‚\r\n\r\n===========================================================================\r\nCore:\r\n	Coreã‚¯ãƒ©ã‚¹ã®å½¹å‰²ã¯ã€ã»ã‹ã®ã‚¯ãƒ©ã‚¹ã¸ã®ã‚¤ãƒ³ã‚¿ãƒ•ã‚§ãƒ¼ã‚¹ã®æä¾›ã§ã™ã€‚\r\n	newã•ã‚ŒãŸæ™‚ç‚¹ã§ã€Dictionaryã‚¯ãƒ©ã‚¹ã®ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã‚’ä¿æŒã—ã¾ã™ã€‚\r\n===========================================================================\r\nDictionary:\r\n	è¾žæ›¸ã¨ã„ã†åå‰ãŒã¤ã„ã¦ã¯ã„ã¾ã™ãŒã€å®Ÿéš›ã¯ã€sixamoã«ã‚ˆã£ã¦ç”Ÿæˆã•ã‚Œã‚‹\r\n	ï¼’ã¤ã®ãƒ•ã‚¡ã‚¤ãƒ«ã€Œsixamo.txtã€ã¨ã€Œsixamo.dicã€ã¸ã®ã‚¤ãƒ³ã‚¿ãƒ•ã‚§ãƒ¼ã‚¹ã‚’\r\n	æä¾›ã™ã‚‹ã‚¯ãƒ©ã‚¹ã§ã™ã€‚\r\n===========================================================================\r\nTrieï¼ˆã©ã†ã‚‚è¨€èªžã‚’æ„å‘³ã™ã‚‹ã‚‰ã—ã„ï¼‰ï¼š\r\n	ã€Œsuggest arrayï¼ˆè¨€èªžå‡¦ç†å­¦ä¼šã®å‰ã„äººãŒã“ã†ã„ã†æ§‹é€ ã‚’ãã†å‘¼ã‚“ã§ãŸï¼‰ã€\r\n	ã‚’ä½¿ç”¨ã—ã¦æ–‡å­—ã‚’ã¤ãªã’ã¦ãã‚Œã‚‹ã‚¯ãƒ©ã‚¹ã€‚ã‚ã‚‹æ„å‘³Coreãªéƒ¨åˆ†ã€‚\r\n===========================================================================\r\nUtilï¼š\r\n	åå‰ã®é€šã‚Šä¸Šè¨˜ã®3ã¤ã®ã‚¯ãƒ©ã‚¹ã¸é©ç”¨ã•ã‚Œãªã„ãƒ¡ã‚½ãƒƒãƒ‰ç¾¤ã®å¯„ã›é›†ã‚ã§ã™ã€‚\r\n\r\n===========================================================================\r\nFreq:\r\n	å‡ºç¾é »åº¦ã‚’è¨ˆç®—ã—ã¦ã„ã‚‹ã‚¯ãƒ©ã‚¹ã€‚åˆæœŸåŒ–æ™‚ã«ã†ã‘ã¨ã£ãŸæ–‡å­—åˆ—ã‚’\r\n	$self->{buf}ã¨ã—ã¦ä¿æŒã™ã‚‹ã€‚\r\n===========================================================================\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nå‡¦ç†ã®æµã‚Œï¼š\r\n\r\n\r\nãƒ¦ãƒ¼ã‚¶ãƒ¼ã‹ã‚‰ã®å…¥åŠ›ãŒã‚ã‚‹ã¨ã€ã¾ãšã€ŒSixamo::Core->new->talk($string);ã€\r\nãŒå‘¼ã³å‡ºã•ã‚Œã¾ã™ã€‚åˆæœŸåŒ–ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«ãªã£ã¦ã„ã¾ã—ã¦\r\n\r\n>  14 sub new {\r\n>  15     my ($class, $dirname ) = @_;\r\n>  16\r\n>  17     bless {\r\n>  18         dic => Sixamop::Dictionary->new( $dirname || \'\')\r\n>  19     } , $class;\r\n>  20 }\r\n\r\nå—ã‘å–ã£ãŸã€Œ$dirnameã€ã‚’å¼•æ•°ã«ã—ã¦å†…éƒ¨ã« Dictionaryã®ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’ä¿æŒã—ã¾ã™ã€‚\r\n\r\nSixamo::Directoryã¯åˆæœŸæ™‚ã«ä»¥ä¸‹ã®å‡¦ç†ã‚’è¡Œã„ã¾ã™ã€‚\r\n\r\n\r\n>  27 sub new {\r\n>  28     my ( $class, $dirname ) = @_;\r\n>  29\r\n>  30     my $self = bless  {\r\n>  31         occur         => \\my %occur,\r\n>  32         rel           => \\my %rel,\r\n>  33         trie          => Sixamop::Trie->new,\r\n>  34         dirname       => $dirname || undef,\r\n>  35         text_filename => \"@{[$dirname]}/@{[$TEXT_FILENAME]}\",\r\n>  36         dic_filename  => \"@{[$dirname]}/@{[$DIC_FILENAME]}\",\r\n>  37         text          => \\my @text,\r\n>  38         line_num      => 0,\r\n>  39     } , $class;\r\n>  40\r\n>  41     return $self;\r\n>  42 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\næ¬¡ã«\r\n\r\n>  38         # è¨˜éŒ²ãƒ•ãƒ©ã‚°ãŒã‚ã‚Œã°è¨˜éŒ²ã™ã‚‹\r\n>  39         if( $memory ) {\r\n>  40             $sixamo->memorize($str);\r\n>  41         }\r\n>  42\r\n>  43         my $res = $sixamo->talk($str) || \'\';\r\n>  44\r\n>  45         print $res .\"\\n\";\r\n\r\nè¨˜éŒ²ãƒ•ãƒ©ã‚°ãŒãŸã£ã¦ã„ãŸå ´åˆã€memorizeãŒå‘¼ã³å‡ºã•ã‚Œã¾ã™ã€‚\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nmemorize:\r\n\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ä»¥ä¸‹ã«ç¤ºã™é€šã‚Šã€ã€Œãƒ¦ãƒ¼ã‚¶ãƒ¼ãŒè©±ã—ã‹ã‘ãŸæ–‡å­—åˆ—ã€ã‚’å¼•æ•°ã«å—ã‘å–ã‚Šã€\r\nCoreãŒä¿æŒã™ã‚‹ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£dic(Dcitionaryã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹)ã«å¯¾ã—ã¦åƒãã‹ã‘ã¾ã™ã€‚\r\n\r\n> 151 sub memorize {\r\n> 152     my ( $self , $lines ) = @_;\r\n> 153\r\n> 154     $self->{dic}->store_text($lines);\r\n> 155     if( $self->{dic}->learn_from_text ) {\r\n> 156         $self->{dic}->save_dictionary;\r\n> 157     }\r\n> 158 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nstore_text:\r\n\r\næœ€åˆã« store_textãŒå‹•ã„ã¦è¿½è¨˜ãƒ¢ãƒ¼ãƒ‰ã§ã€Œsixamo.txtã€ã¸æ–‡å­—åˆ—ã‚’æ ¼ç´ã—ã¾ã™ã€‚\r\nã„ã¾ã•ã‚‰ã„ã†ã¾ã§ã‚‚ç„¡ã„ã“ã¨ã§ã™ãŒã€äº‹å‰å‡¦ç†ã¯ã€å˜ç´”ã«ç©ºç™½ãŒãŸãã•ã‚“ã‚ã£ãŸã‚‰ã€\r\n1å€‹ã«ã™ã‚‹ãžã¨ã„ã†å‡¦ç†ã§ã™ã€‚\r\n\r\n> 250 sub store_text {\r\n> 251     my ($self, @lines) = @_;\r\n> 252\r\n> 253     my @ary;\r\n> 254     for my $line (@lines) {\r\n> 255         $line =~ s/\\s+/ /;\r\n> 256         # strip ã®ä»£æ›¿ãŒå¿…è¦\r\n> 257         push @ary, $line;\r\n> 258     }\r\n> 259\r\n> 260     @{$self->{text}} = @ary;\r\n> 261\r\n> 262     my $fp = IO::File->new( $self->{text_filename} , \">>:utf8\");\r\n> 263     for my $line (@ary) {\r\n> 264         chomp $line;\r\n> 265\r\n> 266         print $fp $line.\"\\n\";\r\n> 267     }\r\n> 268\r\n> 269     $fp->close;\r\n> 270\r\n> 271     return;\r\n> 272 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nlearn_from_text:\r\n\r\nãã®å¾Œã€learn_from_textãŒçœŸã‚’è¿”ã—ãŸã‚‰è¾žæ›¸ã®ã»ã†ã‚’æ›´æ–°ã™ã‚‹ã®ã§ã™ãŒã€\r\nã“ã®learn_from_textãŒé¢å€’ãªå‡¦ç†ã‚’ã—ã¦ã¾ã™ã€‚\r\n\r\n> 186 sub learn_from_text {\r\n> 187     my ($self, $progress ) = @_;\r\n> 188\r\n> 189     my $modified = undef;\r\n> 190\r\n> 191     my $read_size = 0;\r\n> 192     my @buf_prev;\r\n> 193     my $end_flag  = undef;\r\n> 194     my $idx       = $self->{line_num};\r\n> 195\r\n> 196     while(1) {\r\n> 197         my @buf;\r\n> 215\r\n> 216         my $tmp = $read_size;\r\n> 217         while( $tmp/$WindowSize == $read_size/$WindowSize ) {\r\n> 218             if( $idx >= scalar( @{$self->{text}} ) ) {\r\n> 219                 $end_flag = 1;\r\n> 220                 last;\r\n> 221             }\r\n> 222\r\n> 223             push @buf , $self->{text}->[$idx] ;\r\n> 224             $tmp += scalar( @{$self->{text}} ) ;\r\n> 225             $idx++;\r\n> 226         }\r\n> 227\r\n> 228         $read_size = $tmp;\r\n> 229\r\n> 230         last if $end_flag ;\r\n> 231\r\n> 232         if( scalar( @buf_prev ) > 0 ) {\r\n> 233             $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_nux} );\r\n> 234             $modified = 1;\r\n> 235\r\n> 236             $self->{line_num} += scalar( @buf_prev );\r\n> 237         }\r\n> 238\r\n> 239         @buf_prev = @buf;\r\n> 240     }\r\n> 241\r\n> 243\r\n> 244     return $modified;\r\n> 245 }\r\n\r\nç´°ã‹ã„éƒ¨åˆ†ã¯æŠœãã«ã—ã¦é‡è¦ãªéƒ¨åˆ†ã ã‘ã‚’æŠœãå‡ºã™ã¨ã€\r\nã¾ãšæœ€åˆã®whileã§ã™ãŒã€1å›žã¯å¿…ãšå›žã‚Šã¾ã™ã€‚\r\n\r\næœ€åˆãƒã‚§ãƒƒã‚¯ã§ã¯ã€ã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ãŒä¿æŒã—ã¦ã„ã‚‹ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£textã‚ˆã‚Šå¤§ãããªã£ãŸã‚‰end_flagã‚’\r\nãŸã¦ã¦çµ‚äº†ã—ã¦ã„ã¾ã™ã€‚ã“ã‚Œã¯å˜ç´”ã«æ§‹é€ ä»¥ä¸Šã®ãƒ‡ãƒ¼ã‚¿ã‚’èª­ã¿è¾¼ã¾ãªã„ãŸã‚ã®ä¿é™ºã§ã©ã†ã§ã‚‚è‰¯ã„ã§ã™ã€‚\r\n\r\n\r\n> 216         my $tmp = $read_size;\r\n> 217         while( $tmp/$WindowSize == $read_size/$WindowSize ) {\r\n> 218             if( $idx >= scalar( @{$self->{text}} ) ) {\r\n> 219                 $end_flag = 1;\r\n> 220                 last;\r\n> 221             }\r\n\r\n\r\næœ¬æ¥ã®ç›®çš„ã¯ã€ä»¥ä¸‹ã®éƒ¨åˆ†ã§è©²å½“ã™ã‚‹ã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ã®textã®è¡Œã‚’@buã¸å…¥ã‚Œã¦\r\n$tmpã¨$indexã‚’ã‚¤ãƒ³ã‚¯ãƒªãƒ¡ãƒ³ãƒˆã—ã¦çµ‚äº†ã—ã¦ã„ã¾ã™ã€‚\r\n\r\n> 223             push @buf , $self->{text}->[$idx] ;\r\n> 224             $tmp += scalar( @{$self->{text}} ) ;\r\n> 225             $idx++;\r\n\r\nã“ã‚Œã¯ã€ã¤ã¾ã‚Š1å›žå‡¦ç†ã—ãŸã‚‰ãŠã‚ã‚‹ã®ã§ã€ãªã‚“ã§ã“ã‚“ãªwhileã§ã¾ã‚ã—ã¦ã‚‹ã®ã‹ã¯ã‚ˆãç†è§£ã§ããªã„ã€‚\r\n\r\nã¡ãªã¿ã«ã€å®Ÿéš›ã«ã‚„ã£ã¦ã¿ã‚‹ã¨ä»¥ä¸‹ã®ã‚ˆã†ãªçµæžœã«ãªã‚‹ã€‚\r\n\r\n>   1 use strict;\r\n>   2 use warnings;\r\n>   3\r\n>   4\r\n>   5 my $Size = 500;\r\n>   6\r\n>   7 my $num  = 1;\r\n>   8\r\n>   9 for(1..20) {\r\n>  10     print $_ . \"\\t\". ($_/$Size) .\"\\n\";\r\n>  11 }\r\n\r\n> 1       0.002\r\n> 2       0.004\r\n> 3       0.006\r\n> 4       0.008\r\n> 5       0.01\r\n> 6       0.012\r\n> 7       0.014\r\n> 8       0.016\r\n> 9       0.018\r\n> 10      0.02\r\n> 11      0.022\r\n> 12      0.024\r\n> 13      0.026\r\n> 14      0.028\r\n> 15      0.03\r\n> 16      0.032\r\n> 17      0.034\r\n> 18      0.036\r\n> 19      0.038\r\n> 20      0.04\r\n\r\nçµå±€ã‚„ã‚ŠãŸã„ã“ã¨ã¯ã€$self->{line_num}ã§æŒ‡å®šã•ã‚Œã¦ã„ã‚‹è¡Œã‚’ @bufã¸èª­ã¿è¾¼ã¿ãŸã„ã ã‘ã§ã™ã€‚\r\n\r\nãã—ã¦ã€èª­ã¿è¾¼ã‚“ã è©²å½“è¡Œã‚’å‡¦ç†ã™ã‚‹éƒ¨åˆ†ãŒä¸‹è¨˜ã§ã™ã€‚\r\n\r\n> 232         if( scalar( @buf_prev ) > 0 ) {\r\n> 233             $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_nux} );\r\n> 234             $modified = 1;\r\n> 235\r\n> 236             $self->{line_num} += scalar( @buf_prev );\r\n> 237         }\r\n> 238\r\n> 239         @buf_prev = @buf;\r\n\r\næœ€åˆã®ãƒ«ãƒ¼ãƒ—ã§ã¯@buf_prevãŒã‚ã‚Œã°ã€å‡¦ç†ã‚’é–‹å§‹ã—ã¾ã™ã€‚\r\nã“ã®æ™‚ç‚¹ã§ã¯ã€@bufã®éƒ¨åˆ†ãŒ@buf_prevã«è¿½åŠ ã•ã‚Œã¦ã„ãªã„ãŸã‚ã€2ã¤ã‚’åŒã˜é…åˆ—ã«ã„ã‚Œã€\r\nç¾åœ¨ã®line_numã‚’ç¬¬2å¼•æ•°ã¨ã—ã¦lernãƒ¡ã‚½ãƒƒãƒ‰ã«æ¸¡ã—ã¾ã™ã€‚\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nlearnãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Freqã‚¯ãƒ©ã‚¹ã®extract_termsã‚’ä½¿ç”¨ã—ã¦ @new_termsã‚’å¾—ã¾ã™ã€‚\r\n\r\n\r\n> 277 sub learn {\r\n> 278     my ($self, $lines, $idx ) = @_;\r\n> 279\r\n> 280     my @new_terms = Freq->extract_terms( $lines, 30 );\r\n> 281\r\n> 282     for my $term ( @new_terms ) {\r\n> 283         $self->add_term($term);\r\n> 284     }\r\n> 285\r\n> 286     if( $idx ) {\r\n> 287         my @words_all;\r\n> 288\r\n> 289         my $count=0;\r\n> 290         for my $line ( @{$lines} ) {\r\n> 291             my $num = $idx + 1;\r\n> 292             my @words = $self->split_into_terms($line);\r\n> 293             @words_all = (@words_all,@words);\r\n> 294\r\n> 295             for my $term (@words) {\r\n> 296                 if( not  $self->{occur}->{$term}  || $num > $self->{occur}->{$term}->{-1} ) {\r\n> 297                     $self->{occur}->{$term}->{num} += $num;\r\n> 298                 }\r\n> 299             }\r\n> 300         }\r\n> 301\r\n> 302         $self->weight_update(@words_all);\r\n> 303\r\n> 304         for my $term (@{$self->{terms}}) {\r\n> 305             my $occur = $self->{occur}->{$term};\r\n> 306             my $size  = scalar( keys %{$self->{occur}} );\r\n> 307\r\n> 308             if( $size < 4 && $size > 0 && $occur->{num} * $size * 150 < $idx ) {\r\n> 309                 $self->del_term($term);\r\n> 310             }\r\n> 311         }\r\n> 312     }\r\n> 313 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nextract_termsã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ã«ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’åˆæœŸåŒ–ã—ã¦å¼•æ•°ã¨ã—ã¦å—ã‘ãŸã€€ã€Œtextã®æ–‡å­—åˆ—ã‚’é…åˆ—ã¨ã—ã¦ä¿æŒã€ã—ã¾ã™ã€‚\r\n\r\n>   9 sub extract_terms {\r\n>  10     my ($class, $buf, $limit ) = @_;\r\n>  11\r\n>  12     return $class->new($buf)->_extract_terms($limit);\r\n>  13 }\r\n\r\n>  18 sub new {\r\n>  19     my ($class, $buf ) = @_;\r\n>  20\r\n>  21     return bless {\r\n>  22         buf => [ @{[$buf]} ] || [],\r\n>  23     }, $class;\r\n>  24 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nå®Ÿéš›ã«å‡¦ç†ã‚’å—ã‘æŒã£ã¦ã„ã‚‹ã®ã¯ã€å†…éƒ¨ãƒ¡ã‚½ãƒƒãƒ‰ã® _extract_termsã§ã™ãŒã“ã“ã‹ã‚‰ã•ã‚‰ã«extract_terms_subã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã‚’\r\nå‘¼ã‚“ã§ã„ã¾ã™ã€‚\r\n\r\n>  29 sub _extract_terms {\r\n>  30     my ($self, $limit) = @_;\r\n>  31\r\n>  32     my @terms = $self->extract_terms_sub($limit);\r\n>  33     my @terms2;\r\n>  34     for my $idx (0..(scalar( @terms - 1) ) ) {\r\n>  35         if( $terms[$idx]\r\n>  36     }\r\n>  37 }\r\n\r\nå®Ÿéš›ã® extract_terms_subã®å‡¦ç†ã¯ä¸‹è¨˜ã§\r\n\r\n>  43 sub extract_terms_sub {\r\n>  44     my ($self, $limit, $str, $num, $width ) = @_;\r\n>  45     $num ||= 1;\r\n>  46     my $h    = $self->freq($str);\r\n>  47     my $flag = ( scalar( keys %$h ) <= 4 ) ? 1 : 0 ;\r\n>  48\r\n>  49     my @result;\r\n>  50     if( $limit > 0 ) {\r\n>  51         if( defined $h->{$str} ) {\r\n>  52             delete $h->{$str};\r\n>  53         }\r\n>  54         # to_a:\r\n>  55         # ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n>  56         # p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n>  57         for my $key ( grep { $h->{$_} < 2 } sort { $h->{$a} <=> $h->{$b} }  keys %$h ) {\r\n>  58             push @result, $self->extract_terms_sub( $limit - 1, $key , $h->{$key}, $flag );\r\n>  59         }\r\n>  60     }\r\n>  61\r\n>  62     if( scalar( @result ) == 0 && $width ) {\r\n>  63         return [ ( lc $str, $num ) ];\r\n>  64     }\r\n>  65\r\n>  66     return \\@result;\r\n>  67 }\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nfreq:\r\n\r\næœ€åˆã«å—ã‘å–ã£ãŸæ–‡å­—åˆ—ã‚’ freqãƒ¡ã‚½ãƒƒãƒ‰ã§å‡¦ç†ã—ã¾ã™ã€‚\r\n\r\nã¡ãªã¿ã«ã¾ã‚ã—ã¦ã„ã‚‹ã®ã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ãªé…åˆ—ã€‚\r\n\r\n>   9 ã»ã’\r\n>  10 test\r\n>  11 aaa\r\n>  12 ä½•ã§ã‚„å¹´\r\n\r\nã©ã‚Œã‹ã«å¼•ã£ã‹ã‹ã£ãŸå ´åˆã€ä»¥ä¸‹ã®ã‚ˆã†ãªãƒãƒƒã‚·ãƒ¥ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n> $VAR1 = {\r\n>           \"\\x{30a1}\" => 1,\r\n>           \'H\' => 2,\r\n>           \'W\' => 1,\r\n>           \'!\' => 1\r\n>         };\r\n\r\n\r\n>  72 sub freq {\r\n>  73     my ($self, $str ) = @_;\r\n>  74\r\n>  75     my $freq = {};\r\n>  76\r\n>  77     if( $str ) {\r\n>  78         for my $buf (@{$self->{buf}}) {\r\n>  79             if( $buf =~ /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i ) {\r\n>  80                 $freq->{ $0 || $1 || $2 } += 1;\r\n>  81             }\r\n>  82             else {\r\n>  83                 if( $buf =~ /$str/io ) {\r\n>  84                     $freq=>{$str} += 1;\r\n>  85                 }\r\n>  86             }\r\n>  87         }\r\n>  88     }\r\n>  89\r\n>  90     return $freq;\r\n>  91 }\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\nå¸°ã£ã¦ããŸãƒãƒƒã‚·ãƒ¥ã‚“ã®keyã‚’å…ƒã«ãƒ•ãƒ©ã‚°ã‚’ç«‹ã¦ã¾ã™ã€‚\r\n\r\nå¼•æ•°ã§ï¼“ï¼ã®limitã‚’æŒ‡å®šã•ã‚Œã¦ã„ã‚‹ã€‚\r\n\r\n> 280     my @new_terms = Freq->extract_terms( $lines, 30 );\r\n\r\nã“ã“ã‹ã‚‰ãŒé¢å€’ã§ã€ãƒãƒƒã‚·ãƒ¥ã®å€¤ã‚’ã‚½ãƒ¼ãƒˆã—ã€å€¤ãŒï¼’ã‚ˆã‚Šå°ã•ã„ keyã‚’å¯¾è±¡ã«\r\nå†å¸°çš„ã«extract_terms_subã‚’å‘¼ã³å‡ºã—ã¦ã€@resultã¸çªã£è¾¼ã‚“ã§ã„ã¾ã™ã€‚\r\n\r\n>  47     my $flag = ( scalar( keys %$h ) <= 4 ) ? 1 : 0 ;\r\n>  48\r\n>  49     my @result;\r\n>  50     if( $limit > 0 ) {\r\n>  51         if( defined $h->{$str} ) {\r\n>  52             delete $h->{$str};\r\n>  53         }\r\n>  54         # to_a:\r\n>  55         # ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n>  56         # p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n>  57         for my $key ( grep { $h->{$_} < 2 } sort { $h->{$a} <=> $h->{$b} }  keys %$h ) {\r\n>  58             push @result, $self->extract_terms_sub( $limit - 1, $key , $h->{$key}, $flag );\r\n>  59         }\r\n>  60     }\r\n>  61\r\n>  62     if( scalar( @result ) == 0 && $width ) {\r\n>  63         return [ ( lc $str, $num ) ];\r\n>  64     }\r\n>  65\r\n>  66     return \\@result;\r\n\r\n\r\nçµæžœçš„ã«ã€ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ãªæ§‹é€ ã‚’è¿”ã™ã€‚\r\n\r\n> [\r\n> 	\"hello world\",\r\n> 	1,\r\n> ],\r\n\r\nã“ã®çµæžœã‚’å—ã‘ã¦ã€\r\n\r\n>  29 sub _extract_terms {\r\n>  30     my ($self, $limit) = @_;\r\n>  31\r\n>  32     my @terms = @{$self->extract_terms_sub($limit)};\r\n>  33     @terms    = map {\r\n>  34     my @terms2;\r\n>  35     for my $idx (0..(scalar( @terms - 1) ) ) {\r\n>  36         if( $terms[$idx]\r\n>  37     }\r\n>  38 }\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼ãƒ¼\r\n\r\n\r\n\r\nå‰ã«ã‚‚è¿°ã¹ã¾ã—ãŸãŒã€Directoryã‚¯ãƒ©ã‚¹ã¯ï¼’ã¤ã®ãƒ‡ãƒ¼ã‚¿ã‚’ç®¡ç†ã™ã‚‹ãŸã‚ã®ãƒ‡ãƒ¼ã‚¿ã‚¯ãƒ©ã‚¹ã§ã™ã€‚\r\nå…·ä½“çš„ã«ã„ã†ã¨ã€ï¼“ï¼•è¡Œç›®ã¨ï¼“ï¼–è¡Œç›®ã§æŒ‡å®šã•ã‚Œã¦ã„ã‚‹ï¼’ã¤ã®ãƒ•ã‚¡ã‚¤ãƒ«ã®ã“ã¨ã‚’ã•ã—ã¾ã™ã€‚\r\n\r\n>  35         text_filename => \"@{[$dirname]}/@{[$TEXT_FILENAME]}\",\r\n>  36         dic_filename  => \"@{[$dirname]}/@{[$DIC_FILENAME]}\",\r\n\r\nã“ã®2ã¤ã®ãµãã„ã‚‹ã®æ§‹é€ ã¯ãã‚Œãžã‚Œä»¥ä¸‹ã®ã‚ˆã†ã«ãªã‚Šã¾ã™ã€‚\r\n\r\nã€Žsixamo.dicã€\r\n\r\n>   1 line_num: 48\r\n>   2\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n>   4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n>   5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n>   6 test    10  100 9,17,18,22,23\r\n>   7 ã¬ã‚    1   28  14,80,90\r\n>   8 ã¯ã‚    0   22  38,85\r\n>   9 ã„ãŸã„  0   21  26,87\r\n>  10 aaa 1   40  10,19\r\n>  11 ã“ã‚“    1   40  2,36\r\n>  12 ãŠãƒ¼ã„  1   40  43,46\r\n>  13 ã©ã†ã”  1   13  81,82\r\n>  14 ãªã‚“ã   1   30  70,75\r\n>  15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n>  16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n>  17 ã’ã‚“    0   20  0\r\n>  18 ï½“ï½„    1   40  30\r\n>  19 ãˆãˆãˆ  1   40  4\r\n\r\nã€Žsixamo.txtã€\r\n\r\n>   1 ã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\n>   2 ã¦ã™ã¨ã ã‚ˆ\r\n>   3 ã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\n>   4 OhYear\r\n>   5 ãˆãˆãˆãˆãˆãˆãˆ\r\n>   6 ãŠã®ã‚Œ\r\n>   7 æ”¯ç¤¾ã‚‚ã®ãã›ã«\r\n>   8 ä»Šç•œç”Ÿ\r\n>   9 ã»ã’\r\n>  10 test\r\n>  11 aaa\r\n>  12 ä½•ã§ã‚„å¹´\r\n>  13 ã¦ã™ã¨\r\n>  14 ãªã‚“ã§ã™ã¨\r\n>  15 ã¬ã‚\r\n>  16 ã‚‚ã†ã‚„\r\n>  17 ã€€\r\n>  18 test\r\n>  19 test\r\n>  20 aaa\r\n>  21 ã¸ãˆ\r\n>  22 ã‚€ããƒ¼\r\n>  23 test\r\n>  24 test\r\n>  25 ã“ã‚ŒãŒè‹¥ã•ã‹\r\n>  26 ã‚ã‚\r\n\r\nã—ã—ã‚ƒã‚‚ã«ã¨ã£ã¦ã¯ã€è¡Œå‹•ã®åŸºç‚¹ã¨ãªã‚‹æƒ…å ±ã¯ã“ã‚Œã ã‘ã§ã™ã€‚\r\n\r\nã¡ãªã¿ã«ã€Directoryã‚’newã•ã‚ŒãŸæ™‚ç‚¹ã§ã¯sixamo.dicã®æ–¹ã¯èª­ã¿è¾¼ã‚“ã§ã„ã¾ã›ã‚“ã€‚\r\n\r\n\r\nã¾ãšã¯ã€sixamo.txtã®æ–¹ã‚’ã©ã“ã«ã©ã†èª­ã¿è¾¼ã‚“ã§ã„ã‚‹ã‹ã‚’è§£èª¬ã—ã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsixamoãŒæ°—æŒã¡æ‚ªã„ç‚¹ã¯ã€å˜ç´”ã«ç„¡è¨ˆç”»ãªå¢—æ”¹ç¯‰ã®çµæžœã˜ã‚ƒãªã„ã‹ãªã¨æ€ã‚ã‚Œã¾ã™ã€‚\r\n\r\n\r\n   ','2007-11-06 22:26:31','2007-11-06 13:26:31'),(154,'NqjLmNOkRb','ã—ã—ã‚ƒã‚‚å­¦ç¿’ã¸ã®ç§»è¡Œ','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã€€ã—ã—ã‚ƒã‚‚ã¯åˆæœŸçŠ¶æ…‹ã§ã¯å…¥åŠ›æ–‡ç« ã‚’ãã®ã¾ã¾è¦šãˆã¦ã„ãã ã‘ã§ä½•ã‚‚ã—ã¾ã›ã‚“ã€‚é€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚\r\n\r\n=================================================\r\nï¼»åˆæœŸçŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« : ãã®ã¾ã¾è¦šãˆã‚‹\r\n\r\n	â†“\r\n\r\nä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸã€‚\r\n\r\n	â†“\r\n\r\nï¼»å­¦ç¿’çŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« ã®ä¸­ã‹ã‚‰â€æ³¨ç›®èªžâ€ã‚’æŽ¢ã—å‡ºã—ã¦ãã¦ãã‚Œã‚’å­¦ç¿’ã™ã‚‹ã€‚\r\n=================================================\r\n\r\nå­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ãŸã—ã—ã‚ƒã‚‚ã¯ã€å…¥åŠ›ã®ä¸€å®šã®ç¯„å›²å†…ã«ä½•åº¦ã‚‚å‡ºã¦ãã‚‹èªžã‚’ã€Œæ³¨ç›®èªžã€ã¨ã—ã¦è¨˜éŒ²ã—ã¾ã™ã€‚å­¦ç¿’ç¯„å›²ã¯ã€æ¯Žå›žåŠåˆ†ã¥ã¤ãšã‚Œã¦ç§»å‹•ã—ã¦ã„ãã¾ã™ã€‚\r\n\r\n\r\nãã‚Œã§ã€å®Ÿéš›ã«å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã™ã‚‹ãŸã‚ã®ä¸€å®šé‡ã®æ–‡ç« ã®è“„ç©ã¨ã¯ã©ã®éƒ¨åˆ†ã§åˆ¤æ–­ã—ã¦ã„ã‚‹ã‹ã¨ã„ã„ã¾ã™ã¨ã€Coreã‚¯ãƒ©ã‚¹ã®ä¸‹è¨˜ã®éƒ¨åˆ†ã§\r\nåˆ¤æ–­ã‚’ã—ã¦ã„ã¾ã™ã€‚\r\n\r\n[Core: message_markov]\r\n\r\n>  98         if( scalar( keys %{$keywords} ) > 10 ) {\r\n>  99             my $count;\r\n> 100             for my $key ( sort { $a <=> $b } keys %{$keywords} ) {\r\n> 101                 if( $count > 10 ) { delete $keywords->{$key} }\r\n> 102                 $count++;\r\n> 103             }\r\n> 104\r\n> 105         }\r\n\r\nã—ã—ã‚ƒã‚‚ã§ã¯ã€ã€Œã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ãŒï¼‘ï¼å€‹ä»¥ä¸Šã®å ´åˆã€ä¸€å®šé‡ã®å…¥åŠ›ã¯ã¨ã¿ãªã—ã¦å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã™ã‚‹ã‚ˆã†ã§ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-06 22:27:00','2007-11-06 13:27:00'),(155,'bjUBtRnrQU','ã—ã—ã‚ƒã‚‚å¤§é›‘æŠŠãªæµã‚Œ','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nå¤§é›‘æŠŠãªã—ã—ã‚ƒã‚‚ã®ãªãŒã‚Œ\r\n\r\nã—ã—ã‚ƒã‚‚ã¯åŸºæœ¬çš„ã«ä»¥ä¸‹ã®æµã‚Œã§è¿”äº‹ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n===============================================\r\nå…¥åŠ›â†’è¨˜æ†¶ãƒ»å­¦ç¿’ãƒ»å¿˜å´â†’è¿”äº‹\r\n===============================================\r\n\r\nå…¥åŠ›ã¯ã”å­˜çŸ¥ã®ã¨ãŠã‚Šã€çš†ã•ã‚“ã®ç™ºè¨€ã§ã™ã€‚\r\nã—ã—ã‚ƒã‚‚ã¯ã“ã®ç™ºè¨€ã«ä¾å­˜ã—ã¦è¨€è‘‰ã‚’è¦šãˆã¦ã„ãã¾ã™ã€‚\r\nå…¥åŠ›ã«ä¾å­˜ã—ã¦ã„ã‚‹ãŸã‚ã€ã¾ã¨ã‚‚ãªæ–‡ç« ã‚’å­¦ç¿’ã•ã›ã‚Œã°ã€ã¾ã¨ã‚‚ãªè¿”äº‹ã‚’è¿”ã—ã¾ã™ã—ã€\r\nå¤‰ãªæ–‡ç« ã‚’å…¥åŠ›ã—ç¶šã‘ã‚Œã°ã€å¤‰ãªè¿”äº‹ã—ã‹è¿”ã—ã¾ã›ã‚“ã€‚\r\n\r\nã“ã‚Œã‹ã‚‰ã€è¨˜æ†¶ã¨å­¦ç¿’ã€ãã—ã¦å¿˜å´ã‚’ã©ã†è¡Œã£ã¦ã„ã‚‹ã‹ã‚’è¿°ã¹ã¦ã„ãã¾ã™ã€‚\r\n\r\nã¾ãšã€å­¦ç¿’ã§ã™ãŒã€ã—ã—ã‚ƒã‚‚ã¯åˆæœŸçŠ¶æ…‹ã§ã¯å…¥åŠ›æ–‡ç« ã‚’ãã®ã¾ã¾è¦šãˆã¦ã„ãã ã‘ã§ä½•ã‚‚ã—ã¾ã›ã‚“ã€‚\r\né€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚\r\n\r\n==========================================================================\r\nï¼»åˆæœŸçŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« : ãã®ã¾ã¾è¦šãˆã‚‹\r\n\r\n	â†“\r\n\r\nä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸã€‚\r\n\r\n	â†“\r\n\r\nï¼»å­¦ç¿’çŠ¶æ…‹ï¼½\r\n\r\nå…¥åŠ›æ–‡ç« ã®ä¸­ã‹ã‚‰â€æ³¨ç›®èªžâ€ã‚’æŽ¢ã—å‡ºã—ã¦ãã¦ãã‚Œã‚’å­¦ç¿’ã™ã‚‹ã€‚\r\n==========================================================================\r\n\r\nå­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ãŸã—ã—ã‚ƒã‚‚ã¯ã€å…¥åŠ›ã®ä¸€å®šã®ç¯„å›²å†…ã«ä½•åº¦ã‚‚å‡ºã¦ãã‚‹èªžã‚’ã€Œæ³¨ç›®èªžã€ã¨ã—ã¦è¨˜éŒ²ã—ã¾ã™ã€‚\r\nå­¦ç¿’ç¯„å›²ã¯ã€æ¯Žå›žåŠåˆ†ã¥ã¤ãšã‚Œã¦ç§»å‹•ã—ã¦ã„ãã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-06 22:27:30','2007-11-06 13:27:30'),(156,'0Oj0WR2rBG','ã—ã—ã‚ƒã‚‚å­¦ç¿’','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã—ã—ã‚ƒã‚‚ã®å­¦ç¿’ã®è»¢æ©Ÿã¨ãªã‚‹ä¸€å®šé‡ã®è“„ç©ã¨ã¯ãƒ—ãƒ­ã‚°ãƒ©ãƒ ã§ã¯ã©ã“ã®éƒ¨åˆ†ã‚’ã•ã—ã¦ã„ã‚‹ã§ã—ã‚‡ã†ã‹ã€‚\r\n\r\n\r\nã€Œé€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚ã€\r\n\r\n\r\nè©²å½“ç®‡æ‰€ã¯è“„ç©éƒ¨åˆ†ã¨ã®å‚ç…§ã‚’è¡Œã£ã¦ã„ã‚‹å ´æ‰€ã«é•ã„ã‚ã‚Šã¾ã›ã‚“ã€‚\r\n\r\nã¾ãšã€ãƒ¡ã‚¤ãƒ³ã‹ã‚‰æ–‡å­—åˆ—ã‚’æ¸¡ã™éƒ¨åˆ†ãŒã“ã¡ã‚‰ã§ã™ã€‚\r\n\r\n> 315 # -------------------------------------------------------------------------\r\n> 316 # ã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã«åˆ†ã‘ã‚‹\r\n> 317 # -------------------------------------------------------------------------\r\n> 318 sub split_into_keywords {\r\n> 319     my ($self, $str ) = @_;\r\n> 320\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n> 322     my $result = {};\r\n> 323     for my $word ( @terms ) {\r\n> 324         $result->{$word} += $self->weight($word);\r\n> 325     }\r\n> 326\r\n> 327     return $result;\r\n> 328 }\r\n\r\n\r\nä»¥ä¸‹ã® split_into_termsã®éƒ¨åˆ†ã‚’è¦‹ã¦ã¿ã¾ã—ã‚‡ã†ã€‚\r\n\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n\r\nã¾ã‚ã€å®Ÿéš›å•é¡Œã€ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯Trieã‚¯ãƒ©ã‚¹ã®åŒåãƒ¡ã‚½ãƒƒãƒ‰ã‚’å‘¼ã³å‡ºã—ã¦ã‚‹ã ã‘ãªã‚“ã ã€‚\r\n\r\n> 330 # -------------------------------------------------------------------------\r\n> 331 # å˜èªžã«åˆ†ã‘ã‚‹\r\n> 332 # -------------------------------------------------------------------------\r\n> 333 sub split_into_terms {\r\n> 334     my ($self, $str, $num ) = @_;\r\n> 335\r\n> 336     return $self->{trie}->split_into_terms($str,$num);\r\n> 337 }\r\n\r\nãã‚Œã§ã€ä¸‹è¨˜ãŒå®Ÿéš›ã® Trie.split_into_terms ã¨ãªã‚‹ã€‚\r\n\r\n>  90 sub split_into_terms {\r\n>  91     my $self  = shift;\r\n>  92     my $str   = shift;\r\n>  93     my $num   = shift || 0;\r\n>  94\r\n>  95     return [] unless $str;\r\n>  96\r\n>  97     my @result;\r\n>  98     # while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n>  99     # æ–‡å­—åˆ—ãŒã‚ã‚Šã€ã‹ã¤ã€€$num ãŒæ•°å­—ã€€è‹¥ã—ãã¯ã€€@result ãŒ $numeã€€ã‚ˆã‚Šå°ã•ã„å ´åˆã¯çœŸ\r\n> 100     while( $str and  ( $num =~ /^\\D*?$/ || ( scalar( @result)  < $num ) )) {\r\n> 101\r\n> 102         # self->{root} ã®ä¸­ã§æ–‡å­—åˆ—ãŒå«ã¾ã‚Œã‚‹ã‚‚ã®ã®æœ€å¤§ã®é•·ã•ã®ã‚‚ã®ã‚’è¿”ã™\r\n> 103         my $prefix = $self->longest_prefix_subword($str);\r\n> 104\r\n> 105         if( $prefix ) {\r\n> 106             push @result , $prefix;\r\n> 107             my @strs = split(//,$str);\r\n> 108             # prefix ã®ã‚µã‚¤ã‚ºã‹ã‚‰ æœ€å¾Œã¾ã§ã®æ–‡å­—ã‚’ $strã¸å…¥ã‚Œã‚‹\r\n> 109             # FIXME: bug resultã¸åæ˜ ã—ã¦ãªã„\r\n> 110             $str = join(\'\', map { $strs[$_] } ( scalar( @{[split(//,$prefix)]} ) .. -1) );\r\n> 111         }\r\n> 112         # $self->{root}ã«ã¾ã£ãŸãè“„ç©ãŒãªã‘ã‚Œã° prefix ã¯ undef\r\n> 113         else {\r\n> 114             my ($char,@str_tmp ) = split(//, $str);\r\n> 115             # ã‚‚ã— $num ãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã° å…ˆé ­ã®æ–‡å­—ã‚’ @resultã¸è¿½åŠ \r\n> 116             push @result , $char if $num;\r\n> 117             $str = join(\'\',@str_tmp );\r\n> 118         }\r\n> 119     }\r\n> 120\r\n> 121     return \\@result;\r\n> 122 }\r\n\r\nã“ã®methodã®ä¸­ã§è‚ã«ãªã‚‹ã®ãŒã€longest_prefix_subwordã€€ã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã§ã™ã€‚\r\n\r\nã“ã‚Œã‚’èª¬æ˜Žã™ã‚‹ãŸã‚ã«ã¯ã€$self->{root}ã«å…¥ã£ã¦ã„ã‚‹ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã®èª¬æ˜ŽãŒå¿…è¦ã§ã™ã€‚ï¼ˆã“ã‚ŒãŒã‚ã‹ã‚‹ã¨ã»ã¨ã‚“ã©ã—ã—ã‚ƒã‚‚ã‚ã‹ã‚‹ã‘ã©ï¼‰\r\n\r\nï¼•ï¼—è¡Œç›®ã®ã‚³ãƒ¡ãƒ³ãƒˆã‚’è¦‹ã¦ã„ãŸã ãã¨åˆ†ã‹ã‚‹ã‚“ã§ã™ãŒã€\r\n\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n\r\n$self->{root}ã®ä¸­èº«ã¯ã€æ–‡å­—ã‚³ãƒ¼ãƒ‰ã‚’é€£çµã—ãŸãƒãƒƒã‚·ãƒ¥ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\n>  49 # -------------------------------------------------------------------------\r\n>  50 # longest_prefix_subword\r\n>  51 # rootã®è©²å½“ãƒŽãƒ¼ãƒ‰ä¸­æœ€ã‚‚ãªãŒã„ã‚‚ã®ã‚’è¿”ã™ã€‚\r\n>  52 # prefix: å…ˆé ­ãŒæ¤œç´¢èªžã«ä¸€è‡´ã™ã‚‹å˜èªžã‚„ãƒ•ãƒ¬ãƒ¼ã‚ºã‚’æŽ¢ã™ã“ã¨\r\n>  53 # -------------------------------------------------------------------------\r\n>  54 sub longest_prefix_subword {\r\n>  55     my ($self, $str ) = @_;\r\n>  56\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n>  58     my $node = $self->{root};\r\n>  59\r\n>  60     my $result;\r\n>  61     my $idx = 0 ;\r\n>  62\r\n>  63     # æ–‡å­—åˆ—ã®é…åˆ—ã‚’ä½œã‚‹ã‚ˆ\r\n>  64     my @strs = split(\'\',$str );\r\n>  65     # æ–‡å­—åˆ—ã‚’ãƒã‚¤ãƒˆã‚³ãƒ¼ãƒ‰ã¸å¤‰æ›ã—ã¦ä¸€æ–‡å­—ã¥ã¤ã¾ã‚ã™ã‚ˆ\r\n>  66     for my $byte ( map ord , split(\'\',$str ) ) {\r\n>  67         # nodeã«terminateãŒå‡ºãŸã‚‰ãã“ã¾ã§ã‚’çµæžœã¨ã—ã¦å‡ºåŠ›\r\n>  68         $result = join( \'\', map { $strs[$_] } (0..$idx) ) if $node->{terminate} ;\r\n>  69         # nodeã®æ ¼ç´æ–‡å­—ãŒã¡ãŒã†ãªã‚‰ãã®ã¾ã¾è¿”ã™ã€‚\r\n>  70         return $result unless $node->{$byte};\r\n>  71         $node = $node->{$byte};\r\n>  72         $idx++;\r\n>  73     }\r\n>  74\r\n>  75     # ã‚‚ã—çµ‚ç«¯è¨˜å·ãªã‚‰ã¾ã£ãŸãä¸€ç·’ã®æ–‡å­—åˆ—ã¨ã¿ãªã—ã¦strã‚’ãã®ã¾ã¾è¿”ã™\r\n>  76     $result = $str if $node->{terminate};\r\n>  77\r\n>  78     return $result;\r\n>  79 }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-06 22:27:54','2007-11-06 13:27:54'),(157,'R57Ma5imdB','ã—ã—ã‚ƒã‚‚ self.root ã®æ§‹é€ ','sixamo.rb','* Trieã® root ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã«ã¤ã„ã¦\r\n\r\nTrieã®æŒã¤ root ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã¯ä»¥ä¸‹ã®ã‚ˆã†ãªã€ãƒãƒƒã‚·ãƒ¥æ§‹é€ ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n>||\r\n===========================================================\r\n>     ä¾‹ï¼š\"test\"\r\n> \r\n>     {116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\n===========================================================\r\n||<\r\n\r\néžå¸¸ã«åˆ†ã‹ã‚Šã‚„ã™ã„ä¾‹ã§ç¤ºã™ã¨ã€ä»¥ä¸‹ã®ã‚ˆã†ã«æ–‡å­—ã‚³ãƒ¼ãƒ‰ã‚’ã¨ã‚Šã€\r\n\r\n>|perl|\r\n>   1 use strict;\r\n>   2 use utf8;\r\n>   3\r\n>   4 my $str = \"test\";\r\n>   5\r\n>   6 for my $byte ( map ord , split(\'\',$str ) ) {\r\n>   7     warn $byte;\r\n>   8 }\r\n||<\r\n\r\nçµæžœ\r\n\r\n>||\r\n> 116 at ord.pl line 7.\r\n> 101 at ord.pl line 7.\r\n> 115 at ord.pl line 7.\r\n> 116 at ord.pl line 7.\r\n||<\r\n\r\nã“ã®æ–‡å­—ã‚³ãƒ¼ãƒ‰ã‚’ãƒãƒƒã‚·ãƒ¥ã®ãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ã§é€£çµã—ãŸæ§‹é€ ã¨ãªã£ã¦ã„ã¾ã™ã€‚\r\næ–‡å­—ã®æœ€å¾Œã¨ã—ã¦ã€Œterminateã€ã‚’keyã¨ã—ã¦ãŠã„ã¦åˆ¤å®šã—ã¾ã™ã€‚\r\n\r\nã“ã®æ§‹é€ ã®é¢ç™½ã„ã¨ã“ã‚ã¯ã€ä¼¼ãŸã‚ˆã†ãªæ–‡å­—ã‚³ãƒ¼ãƒ‰ãŒä¸¦ã‚“ã ã¨ãã«å¾“æ¥ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã«è¿½åŠ ã—ã¦ä¿å­˜ã™ã‚‹ã¨ã“ã‚ã€‚\r\n\r\nåˆ†ã‹ã‚Šã‚„ã™ãä¾‹ã‚’ã‚ã’ã‚‹ã¨ä»¥ä¸‹ã®æ§˜ã«ãªã‚‹ã€‚\r\n\r\n$self->{root} ã¸ã€€testerã‚’è¿½åŠ ã€‚\r\n\r\n>||\r\n>     ä¾‹ï¼š\"test\"\r\n> \r\n>     {116=>{101=>{115=>{116=>{:terminate=>true}}}}}\r\nâ†“\r\n>     ä¾‹ï¼š\"tester\"\r\n> \r\n>     {116=>{101=>{115=>{116=>{:terminate=>true, 101=>{114=>{:terminate=>true}}}}}}}\r\n||<\r\n\r\nterminateã®ãƒãƒƒã‚·ãƒ¥ã« key ãŒè¿½åŠ ã•ã‚Œã¦ã€Œerã€ã®éƒ¨åˆ†ãŒé€£çµã•ã‚Œã‚‹ã€‚\r\n\r\n\r\n\r\n\r\n\r\n ','2007-11-06 22:28:22','2007-11-18 21:17:46'),(178,'W3zT9FRs7z','sukina feature_artist ã®ãƒ‡ãƒ¼ã‚¿','works','- ã‚³ãƒ–ã‚¯ãƒ­\r\n-- 20094\r\n- NEWS\r\n-- 20096\r\n- å®‰è—¤è£•å­\r\n-- 20056\r\n- GLAY\r\n-- 20057\r\n- FUNKY MONKEY BABYS\r\n-- 20058\r\n- Mr.Children\r\n-- 20059\r\n- ä¼Šè—¤ç”±å¥ˆ\r\n-- 20033\r\n- BUMP OF CHICKEN\r\n-- 20093\r\n-- 19983\r\n- ã„ãã‚‚ã®ãŒã‹ã‚Š\r\n-- 19961\r\n- çŸ¢äº•ç”°çž³\r\n-- 19923\r\n- L\'Arcï½ženï½žCiel\r\n-- 19864','2007-11-19 14:02:18','2007-11-19 05:02:18'),(158,'QqemDGqVm7','UtaKamiãƒ©ãƒ³ã‚­ãƒ³ã‚°UPDATE','works','use strict;\r\nuse warnings;\r\nuse UtaKami::Data::Ranking;\r\n\r\nfor my $ranking ( UtaKami::Data::Ranking->search( span => 30 , { order_by => \'rank\' } ) ) {\r\n    print \"UPDATE ranking SET contents_uid = @{[$ranking->contents->uid]} WHERE span = 30 AND rank = @{[$ranking->rank]} ;\\n\";\r\n}\r\n','2007-11-07 17:52:01','2007-11-07 08:52:01'),(159,'Q0k0AQ9L5s','utakami åˆæœŸãƒ©ãƒ³ã‚­ãƒ³ã‚°ç”Ÿæˆ','works','use strict;\r\nuse warnings;\r\n\r\nwhile(my $line = <DATA> ) {\r\n    chomp $line;\r\n    my ( $contents_uid , $rank , $title ) = split / /, $line ;\r\n\r\n    print \"UPDATE ranking SET contents_uid = $contents_uid WHERE span = 1  AND rank = $rank;\\n\";\r\n}\r\n\r\n__END__\r\n19931 1 ãœã‚“ã¾ã„ã–ã‚€ã‚‰ã„ã®ã†ãŸ\r\n19885 2 æœ€æœŸã®å·\r\n19886 3 èŠ±ã®å\r\n19701 4 ï½±ï½¥ï½²ï½¥ï½¼ï½¥ï¾ƒï½¥ï¾™ã®ï½»ï½²ï¾ï½žã‚ãŸã—ãŸã¡ã®æœªæ¥äºˆæƒ³å›³ï½ž\r\n19354 5 ãŠã—ã‚Šã‹ã˜ã‚Šè™«\r\n19762 6 DAYBREAK\'S BELL\r\n19884 7 Urban Mermaid\r\n19880 8 Pink Keyï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\r\n18271 9 Hero\'s Come Back!!\r\n37 10 å¿…æ®ºä»•äº‹äººã®ï¾ƒï½°ï¾\r\n19997 11 æœ€æœŸã®å·ï½žï½µï¾™ï½ºï¾žï½°ï¾™ï¾Šï¾žï½°ï½¼ï¾žï½®ï¾ï½ž\r\n19658 12 LOVE & TRUTH\r\n19817 13 é™½ã¯ã¾ãŸã®ã¼ã‚Šãã‚Šã‹ãˆã™\r\n19753 14 ï¾†ï½ºï¾†ï½ºï¾ï½¬ï¾ï¾Œï¾Ÿ\r\n19825 15 LALALA feat.è‹¥æ—¦é‚£(æ¹˜å—ä¹ƒé¢¨)\r\n19752 16 LOVE LETTER\r\n19704 17 ï½½ï¾„ï¾›ï¾ï½¸ï¾žï½½ï¾€ï½²ï¾™\r\n19764 18 ï½¸ï¾‘ï¾˜ï½³ï¾€\r\n19758 19 å­˜åœ¨éŸ³ï½žï¾’ï½°ï¾™ç”¨ï½¼ï½®ï½°ï¾„ï½ž\r\n19824 20 Chosen Soldier\r\n','2007-11-07 17:53:00','2007-11-07 08:53:00'),(160,'qCGskukzTR','Coreã‚¯ãƒ©ã‚¹ã€€$self->{dic}->{trie}->{root} ã®èª­ã¿è¾¼ã¿å‡¦ç†','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nCoreã‚¯ãƒ©ã‚¹ã€€$self->{dic}->{trie}->{root} ã®èª­ã¿è¾¼ã¿å‡¦ç†\r\n\r\nçµè«–ã¨ã—ã¦ã€Core->newã•ã‚ŒãŸã¨ãã« $self->{dic}->{trie}->{root} ã¯ dicã«ã‚ã‚‹ç™»éŒ²ã•ã‚ŒãŸå˜èªžã‚’\r\nãƒ‡ãƒ¼ã‚¿ã¨ã—ã¦ä¿æŒã—ã¾ã™ã€‚\r\n\r\nãã®æµã‚Œã‚’è¨˜è¿°ã—ã¾ã™ã€‚\r\n\r\nï¼‘ï¼ŽCoreã‚’newã—ãŸã¨ãã« Dictionaryã‚¯ãƒ©ã‚¹ã®loadãƒ¡ã‚½ãƒƒãƒ‰ãŒå‘¼ã°ã‚Œã¾ã™ã€‚\r\n\r\n>  14 sub new {\r\n>  15     my ($class, $dirname ) = @_;\r\n>  16\r\n>  17     # FIXME: ãªã‚“ã§ã„ããªã‚Š load ã ã‚ˆ\r\n>  18     bless {\r\n>  19         dic => Sixamop::Dictionary->load( $dirname || \'\')\r\n>  20     } , $class;\r\n>  21 }\r\n\r\nï¼’ï¼Žload ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Dictionaryã‚¯ãƒ©ã‚¹ã®ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã‚’ä½œæˆã—ã¾ã™ã€‚\r\n\r\n>  47 sub load {\r\n>  48     my ( $self, $dirname ) = @_;\r\n>  49\r\n>  50     # FIXME: é–“é•ã£ã¦ã‚‹ã‚ã»ã‹ã¨\r\n>  51     my $dic = Dictionary->new($dirname);\r\n>  52     $dic->load_text;\r\n>  53     $dic->load_dictionary;\r\n>  54\r\n>  55     return $dic;\r\n>  56 }\r\n\r\nï¼“ï¼Žã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€load_dictinaryã‚’ä½¿ç”¨ã—ã¦åˆæœŸåŒ–ã•ã‚ŒãŸDictionaryã‚¯ãƒ©ã‚¹ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã¸ãƒ‡ãƒ¼ã‚¿ã‚’æ ¼ç´ã—ã¾ã™ã€‚\r\n\r\n>  78 sub load_dictionary {\r\n>  79     my $self = shift;\r\n>  80\r\n>  81     return unless( -e $self->{dic_filename} );\r\n>  82\r\n>  83     my @lines = IO::File->new($self->{dic_filename}, \"<:utf8\")->getlines;\r\n>  84\r\n>  85     # -------------------------------------------------------------------------\r\n>  86     # haed\r\n>  87     # -------------------------------------------------------------------------\r\n>  88     my $line_num = shift @lines;\r\n>  89     ($self->{line_num},) = ( $line_num =~ /line_num:\\s*(.*)\\s*$/i );\r\n>  90\r\n>  91     # -------------------------------------------------------------------------\r\n>  92     # body\r\n>  93     # -------------------------------------------------------------------------\r\n>  94     for my $line (@lines) {\r\n>  95         chomp $line;\r\n>  96\r\n>  97         my ($word,$num,$sum,$occur) = split(/\\t/, $line );\r\n>  98\r\n>  99         if( $occur ) {\r\n> 100             $self->{occur}->{$word} = [ map { int $_ } split( /,/, $occur ) ];\r\n> 101             $self->add_term($word);\r\n> 102             $self->{rel}->{$word} = {};\r\n> 103             $self->{rel}->{$word}->{num} = int $num;\r\n> 104             $self->{rel}->{$word}->{num} = int $sum;\r\n> 105         }\r\n> 106     }\r\n> 107 }\r\n\r\nï¼”ï¼Ž101è¡Œç›®ã® add_termãƒ¡ã‚½ãƒƒãƒ‰ãŒå®Ÿè¡Œã•ã‚ŒãŸã¨ãã«\r\n\r\n\r\n> 410 # -------------------------------------------------------------------------\r\n> 411 # å˜èªžã®è¿½åŠ \r\n> 412 # -------------------------------------------------------------------------\r\n> 413 sub add_term {\r\n> 414     my ( $self, $str ) = @_;\r\n> 415\r\n> 416     $self->{occur}->{$str} = qw() unless $self->{occur}->{$str};\r\n> 417\r\n> 418     $self->{trie}->add($str);\r\n> 419     $self->{rel}->{$str}  = {} unless $self->{rel}->{$str};\r\n> 420\r\n> 421     return;\r\n> 422 }\r\n\r\n\r\nï¼•ï¼ŽTrieã®addãŒå®Ÿè¡Œã•ã‚Œã¾ã™ã€‚\r\n\r\n>  34 sub add {\r\n>  35     my ($self, $str ) = @_;\r\n>  36\r\n>  37     my $node = $self->{root};\r\n>  38\r\n>  39     for my $byte (map ord, split //, $str) {\r\n>  40         $node->{$byte} = {} unless $node->{$byte} ;\r\n>  41         $node = $node->{$byte};\r\n>  42     }\r\n>  43\r\n>  44     $node->{terminate} = true;\r\n>  45\r\n>  46     return $self->{root};\r\n>  47 }\r\n\r\n\r\nä¸Šè¨˜ã®å‡¦ç†ã¯ä¾‹ã‚’ç¤ºã™ã¨\r\n\r\n> \r\n>   1 use strict;\r\n>   2 use warnings;\r\n>   3\r\n>   4 use Data::Dumper;\r\n>   5\r\n>   6 my $str = \'test\';\r\n>   7\r\n>   8 my $root = {};\r\n>   9 my $node = $root;\r\n>  10\r\n>  11 for my $byte (map ord, split //, $str) {\r\n>  12     $node->{$byte} = {} unless $node->{$byte} ;\r\n>  13     $node = $node->{$byte};\r\n>  14 }\r\n>  15\r\n>  16 $node->{terminate} = \'true\';\r\n>  17\r\n>  18\r\n>  19 warn Dumper $root;\r\n\r\nfor my $byte ( map ord , split // , $str ) { ... }\r\n\r\nå—ã‘å–ã£ãŸæ–‡å­—åˆ—ã‚’ä¸€æ–‡å­—ã¥ã¤splitã—ã¦æ–‡å­—ã‚³ãƒ¼ãƒ‰ã¨ã—ã¦ã¾ã‚ã—ã¾ã™ã€‚\r\n\r\nãƒãƒƒã‚·ãƒ¥ã®ãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ã®ä¸­ã«è©²å½“ã®æ–‡å­—ã‚³ãƒ¼ãƒ‰ãŒç„¡ã‘ã‚Œã° $nodeã®ä¸­ã«è¿½åŠ ã—ã¦\r\n\r\n$nodeã®ä¸­ã«\"ãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ã‚’\"æ¸¡ã—ã¾ã™ï¼ˆã“ã“ãŒã¿ãã§ã™ï¼‰ã€‚\r\n\r\næ–‡å­—åˆ—å…¨éƒ¨ã‚’ã¾ã‚ã—çµ‚ã‚ã£ãŸã‚‰æœ€å¾Œã« terminate => trueã‚’ã„ã‚Œã¦çµ‚ç«¯ã¨ã—ã¾ã™ã€‚\r\n\r\nçµæžœã¨ã—ã¦ä»¥ä¸‹ã®ã‚ˆã†ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚’ $self->{root}ã¸è¿½åŠ ã—ã¾ã™ã€‚\r\n\r\n> $VAR1 = {\r\n>           \'116\' => {\r\n>                      \'101\' => {\r\n>                                 \'115\' => {\r\n>                                            \'116\' => {\r\n>                                                       \'terminate\' => \'true\'\r\n>                                                     }\r\n>                                          }\r\n>                               }\r\n>                    }\r\n>         };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-08 09:49:23','2007-11-08 00:49:23'),(161,'gq2GremHxb','æ³¨ç›®èªžã®å­¦ç¿’','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nå­¦ç¿’çŠ¶æ…‹ã¸ã®ç§»è¡Œ\r\n\r\nã—ã—ã‚ƒã‚‚ã¯ã„ã¤å­¦ç¿’çŠ¶æ…‹ã¸ç§»è¡Œã™ã‚‹ã®ã‹ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\næ³¨ç›®èªžã®å­¦ç¿’\r\n\r\nå­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ãŸã—ã—ã‚ƒã‚‚ã¯ã€åŽé›†ã—ã¦ã„ã‚‹ãƒ­ã‚°ã®ä¸­ã§ä¸€å®šã®ç¯„å›²å†…ã«ä½•åº¦ã‚‚å‡ºã¦ãã‚‹èªžã‚’ã€Œæ³¨ç›®èªžã€ã¨ã—ã¦è¨˜éŒ²ã—ã¾ã™ã€‚\r\nå­¦ç¿’ç¯„å›²ã¯ã€æ¯Žå›žãã£ãã‚Šãã£ã¦ã—ã¾ã†ã¨è©±é¡ŒãŒé€”åˆ‡ã‚Œã¦ã—ã¾ã†ã®ã§ã€ä¸‹è¨˜ã®å›³ã®æ§˜ã«æ¯Žå›žåŠåˆ†ã¥ã¤ãšã‚Œã¦ç§»å‹•ã—ã¦ã„ãã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-08 15:00:48','2007-11-08 06:00:48'),(162,'JzPxpBjpwF','KCCSã‚¨ãƒ©ãƒ¼','works','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\n> Cron <mf@gj057> /usr/local/mf/mftools/bin/member_data_adjustment.sh\r\n\r\n> Can\'t open /home/mf/kccs_zip_file/bin/WORK_FILE at /usr/local/mf/kyukyoku/script/kyukyoku_member_del.pl line 27.\r\n> Can\'t open /home/mf/kccs_zip_file/bin/WORK_FILE at /usr/local/mf/kyukyoku/script/kyukyoku_member_add.pl line 14.\r\n> Can\'t open /home/mf/kccs_zip_file/bin/WORK_FILE at /usr/local/mf/tetsujin/script/tetsujin_member_del.pl line 27.\r\n> Can\'t open /home/mf/kccs_zip_file/bin/WORK_FILE at /usr/local/mf/tetsujin/script/tetsujin_member_add.pl line 14.\r\n\r\n\r\n\r\n> # -------------------------------------------------------------------------\r\n> # Init Value\r\n> # -------------------------------------------------------------------------\r\n> \r\n> KCCS_DIR=/home/mf/kccs_zip_file\r\n> BIN_DIR=$KCCS_DIR/bin\r\n> DATA_DIR=$KCCS_DIR/data\r\n> WORK_FILE=WORK_FILE\r\n> \r\n> # -------------------------------------------------------------------------\r\n> # Init Work File\r\n> # -------------------------------------------------------------------------\r\n> \r\n> if [ -e \"$BIN_DIR/$WORK_FILE\" ]; then\r\n>         rm -f  $BIN_DIR/$WORK_FILE\r\n> fi\r\n> \r\n> # -------------------------------------------------------------------------\r\n> # Get File\r\n> # -------------------------------------------------------------------------\r\n> \r\n> cd $BIN_DIR\r\n> $BIN_DIR/getmember  cp=01115 id=c8668477 pwd=36823633 ft=1  date=$(date \'+%Y%m%d\') 1> /dev/null\r\n> \r\n> # -------------------------------------------------------------------------\r\n> # Unzip\r\n> # -------------------------------------------------------------------------\r\n> \r\n> for file in $(egrep -l \".[0-9]{5}[A-Z]{4}$(date \'+%Y%m%d\')[0-9]{8}\"  $DATA_DIR/*)\r\n> do\r\n>         gunzip -cf $file >> $BIN_DIR/$WORK_FILE\r\n> done\r\n> \r\n\r\n\r\n/home/mf/kccs_zip_file/bin/getmember cp=01115 id=c8668477 pwd=36823633 ft=1  date=20071108 \r\n\r\næœ‰åŠ¹æœŸé™ãã‚Œã¦ã‚‹ã£ã¦ã•ã€‚\r\n\r\nã¬ã†ã†ã¬ã†ã†ã†ã‚“ã…ã†ã‚ã€‚\r\n\r\n\r\n','2007-11-08 15:01:22','2007-11-08 06:01:22'),(163,'kqF711jBV5','Coreã‚¯ãƒ©ã‚¹ã€€$self->{dic}->{trie}->{root} ã®èª­ã¿è¾¼ã¿å‡¦ç†','sixamo.rb','* Coreã‚¯ãƒ©ã‚¹ã€€$self->{dic}->{trie}->{root} ã®èª­ã¿è¾¼ã¿å‡¦ç†\r\n\r\nçµè«–ã¨ã—ã¦ã€Core->newã•ã‚ŒãŸã¨ãã« $self->{dic}->{trie}->{root} ã¯ dicã«ã‚ã‚‹ç™»éŒ²ã•ã‚ŒãŸå˜èªžã‚’\r\nãƒ‡ãƒ¼ã‚¿ã¨ã—ã¦ä¿æŒã—ã¾ã™ã€‚\r\n\r\nãã®æµã‚Œã‚’è¨˜è¿°ã—ã¾ã™ã€‚\r\n\r\nï¼‘ï¼ŽCoreã‚’newã—ãŸã¨ãã« Dictionaryã‚¯ãƒ©ã‚¹ã®loadãƒ¡ã‚½ãƒƒãƒ‰ãŒå‘¼ã°ã‚Œã¾ã™ã€‚\r\n\r\n>|perl|\r\n>  14 sub new {\r\n>  15     my ($class, $dirname ) = @_;\r\n>  16\r\n>  17     # FIXME: ãªã‚“ã§ã„ããªã‚Š load ã ã‚ˆ\r\n>  18     bless {\r\n>  19         dic => Sixamop::Dictionary->load( $dirname || \'\')\r\n>  20     } , $class;\r\n>  21 }\r\n||<\r\n\r\nï¼’ï¼Žload ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€Dictionaryã‚¯ãƒ©ã‚¹ã®ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã‚’ä½œæˆã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n>  47 sub load {\r\n>  48     my ( $self, $dirname ) = @_;\r\n>  49\r\n>  50     # FIXME: é–“é•ã£ã¦ã‚‹ã‚ã»ã‹ã¨\r\n>  51     my $dic = Dictionary->new($dirname);\r\n>  52     $dic->load_text;\r\n>  53     $dic->load_dictionary;\r\n>  54\r\n>  55     return $dic;\r\n>  56 }\r\n||<\r\n\r\nï¼“ï¼Žã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€load_dictinaryã‚’ä½¿ç”¨ã—ã¦åˆæœŸåŒ–ã•ã‚ŒãŸDictionaryã‚¯ãƒ©ã‚¹ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã¸ãƒ‡ãƒ¼ã‚¿ã‚’æ ¼ç´ã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n>  78 sub load_dictionary {\r\n>  79     my $self = shift;\r\n>  80\r\n>  81     return unless( -e $self->{dic_filename} );\r\n>  82\r\n>  83     my @lines = IO::File->new($self->{dic_filename}, \"<:utf8\")->getlines;\r\n>  84\r\n>  85     # -------------------------------------------------------------------------\r\n>  86     # haed\r\n>  87     # -------------------------------------------------------------------------\r\n>  88     my $line_num = shift @lines;\r\n>  89     ($self->{line_num},) = ( $line_num =~ /line_num:\\s*(.*)\\s*$/i );\r\n>  90\r\n>  91     # -------------------------------------------------------------------------\r\n>  92     # body\r\n>  93     # -------------------------------------------------------------------------\r\n>  94     for my $line (@lines) {\r\n>  95         chomp $line;\r\n>  96\r\n>  97         my ($word,$num,$sum,$occur) = split(/\\t/, $line );\r\n>  98\r\n>  99         if( $occur ) {\r\n> 100             $self->{occur}->{$word} = [ map { int $_ } split( /,/, $occur ) ];\r\n> 101             $self->add_term($word);\r\n> 102             $self->{rel}->{$word} = {};\r\n> 103             $self->{rel}->{$word}->{num} = int $num;\r\n> 104             $self->{rel}->{$word}->{num} = int $sum;\r\n> 105         }\r\n> 106     }\r\n> 107 }\r\n||<\r\n\r\nï¼”ï¼Ž101è¡Œç›®ã® add_termãƒ¡ã‚½ãƒƒãƒ‰ãŒå®Ÿè¡Œã•ã‚ŒãŸã¨ãã«\r\n\r\n>|perl|\r\n> 410 # -------------------------------------------------------------------------\r\n> 411 # å˜èªžã®è¿½åŠ \r\n> 412 # -------------------------------------------------------------------------\r\n> 413 sub add_term {\r\n> 414     my ( $self, $str ) = @_;\r\n> 415\r\n> 416     $self->{occur}->{$str} = qw() unless $self->{occur}->{$str};\r\n> 417\r\n> 418     $self->{trie}->add($str);\r\n> 419     $self->{rel}->{$str}  = {} unless $self->{rel}->{$str};\r\n> 420\r\n> 421     return;\r\n> 422 }\r\n||<\r\n\r\nï¼•ï¼ŽTrieã®addãŒå®Ÿè¡Œã•ã‚Œã¾ã™ã€‚\r\n\r\n>|perl|\r\n>  34 sub add {\r\n>  35     my ($self, $str ) = @_;\r\n>  36\r\n>  37     my $node = $self->{root};\r\n>  38\r\n>  39     for my $byte (map ord, split //, $str) {\r\n>  40         $node->{$byte} = {} unless $node->{$byte} ;\r\n>  41         $node = $node->{$byte};\r\n>  42     }\r\n>  43\r\n>  44     $node->{terminate} = true;\r\n>  45\r\n>  46     return $self->{root};\r\n>  47 }\r\n||<\r\n\r\nä¸Šè¨˜ã®å‡¦ç†ã¯ä¾‹ã‚’ç¤ºã™ã¨\r\n\r\n>|perl|\r\n>   1 use strict;\r\n>   2 use warnings;\r\n>   3\r\n>   4 use Data::Dumper;\r\n>   5\r\n>   6 my $str = \'test\';\r\n>   7\r\n>   8 my $root = {};\r\n>   9 my $node = $root;\r\n>  10\r\n>  11 for my $byte (map ord, split //, $str) {\r\n>  12     $node->{$byte} = {} unless $node->{$byte} ;\r\n>  13     $node = $node->{$byte};\r\n>  14 }\r\n>  15\r\n>  16 $node->{terminate} = \'true\';\r\n>  17\r\n>  18\r\n>  19 warn Dumper $root;\r\n||<\r\n\r\n>|perl|\r\nfor my $byte ( map ord , split // , $str ) { ... }\r\n||<\r\n\r\nå—ã‘å–ã£ãŸæ–‡å­—åˆ—ã‚’ä¸€æ–‡å­—ã¥ã¤splitã—ã¦æ–‡å­—ã‚³ãƒ¼ãƒ‰ã¨ã—ã¦ã¾ã‚ã—ã¾ã™ã€‚ãƒãƒƒã‚·ãƒ¥ã®ãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ã®ä¸­ã«è©²å½“ã®æ–‡å­—ã‚³ãƒ¼ãƒ‰ãŒç„¡ã‘ã‚Œã° $nodeã®ä¸­ã«è¿½åŠ ã—ã¦$nodeã®ä¸­ã«\"ãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ã‚’\"æ¸¡ã—ã¾ã™ï¼ˆã“ã“ãŒã¿ãã§ã™ï¼‰ã€‚\r\næ–‡å­—åˆ—å…¨éƒ¨ã‚’ã¾ã‚ã—çµ‚ã‚ã£ãŸã‚‰æœ€å¾Œã« terminate => trueã‚’ã„ã‚Œã¦çµ‚ç«¯ã¨ã—ã¾ã™ã€‚\r\n\r\nçµæžœã¨ã—ã¦ä»¥ä¸‹ã®ã‚ˆã†ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚’ $self->{root}ã¸è¿½åŠ ã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n> $VAR1 = {\r\n>           \'116\' => {\r\n>                      \'101\' => {\r\n>                                 \'115\' => {\r\n>                                            \'116\' => {\r\n>                                                       \'terminate\' => \'true\'\r\n>                                                     }\r\n>                                          }\r\n>                               }\r\n>                    }\r\n>         };\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ','2007-11-08 15:01:52','2007-11-18 21:13:15'),(164,'1wyVAD02zC','ã—ã—ã‚ƒã‚‚ã®å­¦ç¿’ã®è»¢æ©Ÿã¨ãªã‚‹ä¸€å®šé‡ã®è“„ç©ã¨ã¯ãƒ—ãƒ­ã‚°ãƒ©ãƒ ã§ã¯ã©ã“ã®éƒ¨åˆ†ã‚’ã•ã—ã¦ã„ã‚‹ã§ã—ã‚‡ã†ã‹ã€‚','sixamo.rb','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nã—ã—ã‚ƒã‚‚ã®å­¦ç¿’ã®è»¢æ©Ÿã¨ãªã‚‹ä¸€å®šé‡ã®è“„ç©ã¨ã¯ãƒ—ãƒ­ã‚°ãƒ©ãƒ ã§ã¯ã©ã“ã®éƒ¨åˆ†ã‚’ã•ã—ã¦ã„ã‚‹ã§ã—ã‚‡ã†ã‹ã€‚\r\n\r\n\r\nã€Œé€”ä¸­ã€ä¸€å®šé‡ã®æ–‡ç« ãŒè“„ç©ã•ã‚ŒãŸæ™‚ç‚¹ã§å­¦ç¿’çŠ¶æ…‹ã«ç§»è¡Œã—ã¾ã™ã€‚ã€\r\n\r\n\r\nè©²å½“ç®‡æ‰€ã¯è“„ç©éƒ¨åˆ†ã¨ã®å‚ç…§ã‚’è¡Œã£ã¦ã„ã‚‹å ´æ‰€ã«é•ã„ã‚ã‚Šã¾ã›ã‚“ã€‚\r\n\r\nã¾ãšã€ãƒ¡ã‚¤ãƒ³ã‹ã‚‰æ–‡å­—åˆ—ã‚’æ¸¡ã™éƒ¨åˆ†ãŒã“ã¡ã‚‰ã§ã™ã€‚\r\n\r\n> 315 # -------------------------------------------------------------------------\r\n> 316 # ã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã«åˆ†ã‘ã‚‹\r\n> 317 # -------------------------------------------------------------------------\r\n> 318 sub split_into_keywords {\r\n> 319     my ($self, $str ) = @_;\r\n> 320\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n> 322     my $result = {};\r\n> 323     for my $word ( @terms ) {\r\n> 324         $result->{$word} += $self->weight($word);\r\n> 325     }\r\n> 326\r\n> 327     return $result;\r\n> 328 }\r\n\r\n\r\nä»¥ä¸‹ã® split_into_termsã®éƒ¨åˆ†ã‚’è¦‹ã¦ã¿ã¾ã—ã‚‡ã†ã€‚\r\n\r\n> 321     my @terms = @{$self->split_into_terms($str)};\r\n\r\nã¾ã‚ã€å®Ÿéš›å•é¡Œã€ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯Trieã‚¯ãƒ©ã‚¹ã®åŒåãƒ¡ã‚½ãƒƒãƒ‰ã‚’å‘¼ã³å‡ºã—ã¦ã‚‹ã ã‘ãªã‚“ã ã€‚\r\n\r\n> 330 # -------------------------------------------------------------------------\r\n> 331 # å˜èªžã«åˆ†ã‘ã‚‹\r\n> 332 # -------------------------------------------------------------------------\r\n> 333 sub split_into_terms {\r\n> 334     my ($self, $str, $num ) = @_;\r\n> 335\r\n> 336     return $self->{trie}->split_into_terms($str,$num);\r\n> 337 }\r\n\r\nãã‚Œã§ã€ä¸‹è¨˜ãŒå®Ÿéš›ã® Trie.split_into_terms ã¨ãªã‚‹ã€‚\r\n\r\n>  90 sub split_into_terms {\r\n>  91     my $self  = shift;\r\n>  92     my $str   = shift;\r\n>  93     my $num   = shift || 0;\r\n>  94\r\n>  95     return [] unless $str;\r\n>  96\r\n>  97     my @result;\r\n>  98     # while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n>  99     # æ–‡å­—åˆ—ãŒã‚ã‚Šã€ã‹ã¤ã€€$num ãŒæ•°å­—ã€€è‹¥ã—ãã¯ã€€@result ãŒ $numeã€€ã‚ˆã‚Šå°ã•ã„å ´åˆã¯çœŸ\r\n> 100     while( $str and  ( $num =~ /^\\D*?$/ || ( scalar( @result)  < $num ) )) {\r\n> 101\r\n> 102         # self->{root} ã®ä¸­ã§æ–‡å­—åˆ—ãŒå«ã¾ã‚Œã‚‹ã‚‚ã®ã®æœ€å¤§ã®é•·ã•ã®ã‚‚ã®ã‚’è¿”ã™\r\n> 103         my $prefix = $self->longest_prefix_subword($str);\r\n> 104\r\n> 105         if( $prefix ) {\r\n> 106             push @result , $prefix;\r\n> 107             my @strs = split(//,$str);\r\n> 108             # prefix ã®ã‚µã‚¤ã‚ºã‹ã‚‰ æœ€å¾Œã¾ã§ã®æ–‡å­—ã‚’ $strã¸å…¥ã‚Œã‚‹\r\n> 109             # FIXME: bug resultã¸åæ˜ ã—ã¦ãªã„\r\n> 110             $str = join(\'\', map { $strs[$_] } ( scalar( @{[split(//,$prefix)]} ) .. -1) );\r\n> 111         }\r\n> 112         # $self->{root}ã«ã¾ã£ãŸãè“„ç©ãŒãªã‘ã‚Œã° prefix ã¯ undef\r\n> 113         else {\r\n> 114             my ($char,@str_tmp ) = split(//, $str);\r\n> 115             # ã‚‚ã— $num ãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã° å…ˆé ­ã®æ–‡å­—ã‚’ @resultã¸è¿½åŠ \r\n> 116             push @result , $char if $num;\r\n> 117             $str = join(\'\',@str_tmp );\r\n> 118         }\r\n> 119     }\r\n> 120\r\n> 121     return \\@result;\r\n> 122 }\r\n\r\nã“ã®methodã®ä¸­ã§è‚ã«ãªã‚‹ã®ãŒã€longest_prefix_subwordã€€ã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã§ã™ã€‚\r\n\r\nã“ã‚Œã‚’èª¬æ˜Žã™ã‚‹ãŸã‚ã«ã¯ã€$self->{root}ã«å…¥ã£ã¦ã„ã‚‹ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã®èª¬æ˜ŽãŒå¿…è¦ã§ã™ã€‚ï¼ˆã“ã‚ŒãŒã‚ã‹ã‚‹ã¨ã»ã¨ã‚“ã©ã—ã—ã‚ƒã‚‚ã‚ã‹ã‚‹ã‘ã©ï¼‰\r\n\r\nï¼•ï¼—è¡Œç›®ã®ã‚³ãƒ¡ãƒ³ãƒˆã‚’è¦‹ã¦ã„ãŸã ãã¨åˆ†ã‹ã‚‹ã‚“ã§ã™ãŒã€\r\n\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n\r\n$self->{root}ã®ä¸­èº«ã¯ã€æ–‡å­—ã‚³ãƒ¼ãƒ‰ã‚’é€£çµã—ãŸãƒãƒƒã‚·ãƒ¥ã«ãªã£ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€è©²å½“rootã®ãƒŽãƒ¼ãƒ‰ä¸­ä¸€è‡´ã™ã‚‹è¡Œã®ä¸­ã§$strã‚ˆã‚ŠçŸ­ã„æ–‡å­—åˆ—ä¸­ä¸€ç•ªé•·ã„æ–‡å­—åˆ—ã‚’è¿”ã™ã€‚\r\n\r\nãŸã¨ãˆã°ã€$str = \'test\'ã§ rootãƒ‡ãƒ¼ã‚¿ä¸­ã®å€¤ãŒ tesã®å ´åˆã€tes ãŒè¿”ã‚‹ã€‚\r\n\r\n\r\n>  49 # -------------------------------------------------------------------------\r\n>  50 # longest_prefix_subword\r\n>  51 # rootã®è©²å½“ãƒŽãƒ¼ãƒ‰ä¸­æœ€ã‚‚ãªãŒã„ã‚‚ã®ã‚’è¿”ã™ã€‚\r\n>  52 # prefix: å…ˆé ­ãŒæ¤œç´¢èªžã«ä¸€è‡´ã™ã‚‹å˜èªžã‚„ãƒ•ãƒ¬ãƒ¼ã‚ºã‚’æŽ¢ã™ã“ã¨\r\n>  53 # -------------------------------------------------------------------------\r\n>  54 sub longest_prefix_subword {\r\n>  55     my ($self, $str ) = @_;\r\n>  56\r\n>  57     # node : { 101 => { 160 =>  { terminate => true } } , 102 => { 200 => { terminate => true } } } }\r\n>  58     my $node = $self->{root};\r\n>  59\r\n>  60     my $result;\r\n>  61     my $idx = 0 ;\r\n>  62\r\n>  63     # æ–‡å­—åˆ—ã®é…åˆ—ã‚’ä½œã‚‹ã‚ˆ\r\n>  64     my @strs = split(\'\',$str );\r\n>  65     # æ–‡å­—åˆ—ã‚’ãƒã‚¤ãƒˆã‚³ãƒ¼ãƒ‰ã¸å¤‰æ›ã—ã¦ä¸€æ–‡å­—ã¥ã¤ã¾ã‚ã™ã‚ˆ\r\n>  66     for my $byte ( map ord , split(\'\',$str ) ) {\r\n>  67         # nodeã«terminateãŒå‡ºãŸã‚‰ãã“ã¾ã§ã‚’çµæžœã¨ã—ã¦å‡ºåŠ›\r\n>  68         $result = join( \'\', map { $strs[$_] } (0..$idx) ) if $node->{terminate} ;\r\n>  69         # nodeã®æ ¼ç´æ–‡å­—ãŒã¡ãŒã†ãªã‚‰ãã®ã¾ã¾è¿”ã™ã€‚\r\n>  70         return $result unless $node->{$byte};\r\n>  71         $node = $node->{$byte};\r\n>  72         $idx++;\r\n>  73     }\r\n>  74\r\n>  75     # ã‚‚ã—çµ‚ç«¯è¨˜å·ãªã‚‰ã¾ã£ãŸãä¸€ç·’ã®æ–‡å­—åˆ—ã¨ã¿ãªã—ã¦strã‚’ãã®ã¾ã¾è¿”ã™\r\n>  76     $result = $str if $node->{terminate};\r\n>  77\r\n>  78     return $result;\r\n>  79 }\r\n\r\n\r\nã“ã¡ã‚‰ã®ãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€æ¸¡ã•ã‚ŒãŸæ–‡å­—åˆ—ã‚’\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ','2007-11-08 15:02:49','2007-11-08 06:02:49'),(165,'d7Y7OuP2Ob','ãƒ•ã‚¡ã‚¤ãƒ«åä¸€æ‹¬å¤‰æ›','works','>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nuse Path::Class;\r\n\r\nmy $path = \'./incentive_contents\';\r\nmy $dir  = dir($path);\r\nmy $dh   = $dir->open;\r\n\r\nwhile( my $file = $dh->read ) {\r\n    next if $file eq \'.\' || $file eq \'..\';\r\n    # c7_joker_movie_mp3.amc\r\n    if( $file =~ /^(.)(\\d)_(.*?)_(.*?)_(.*?)\\.(.*?)$/ ) {\r\n        my $new_file_name = join(\'_\', ( $2 , $3 , $4, $5 ) ). \'.\' . $6 ;\r\n        warn $new_file_name;\r\n        system(\"cp ./incentive_contents/$file  ./hoge/$new_file_name \");\r\n    }\r\n}\r\n||<','2007-11-12 14:51:48','2007-11-17 15:08:20'),(166,'GYv7TEYGBS','ãƒ•ã‚¡ã‚¤ãƒ«ã‚’è¿”ã™ã€‚','works','# -------------------------------------------------------------------------\r\n# ã‚¤ãƒ³ã‚»ãƒ³ãƒ†ã‚£ãƒ–ç”¨ç€å‹•ç”»ã‚’è¿”ã™ dispatcher\r\n# FIXME: ãƒ†ã‚¹ãƒˆã‚±ãƒ¼ã‚¹å°Žå…¥\r\n# htdocs ä»¥ä¸‹ã«ç½®ãã®ã¯é–“é•ã£ã¦ã‚‹æ°—ãŒã™ã‚‹ã®ã§ã“ã¡ã‚‰ã«ãŠãã‚ˆ\r\n# -------------------------------------------------------------------------\r\nsub dispatch_incentive_contents {\r\n    my $self = shift;\r\n\r\n    return $self->redirect(\'/\') unless $self->r->param(\'incentive_contents_id\');\r\n\r\n    my $contents = $self->_make_incentive_contents( $self->r->param(\'incentive_contents_id\')  );\r\n    my $fh       = IO::File->new( $contents->{file_path} , \"r\" );\r\n\r\n    # mime type ã¯æŒ‡å®šã™ã‚‹ã¨ã‚¨ãƒ©ãƒ¼èµ·ãã‚‹ã‚ˆ\r\n    $self->r->content_type($contents->{mime_type});\r\n    $contents->{data} = join(\'\',<$fh>);\r\n    $self->set_content_length(length $contents->{data});\r\n    $self->send_http_header;\r\n    $self->r->print($contents->{data});\r\n    $self->invoke_hook(\'AFTER_OUTPUT\');\r\n    $self->finished(1);\r\n}\r\n','2007-11-13 12:17:46','2007-11-13 03:17:46'),(167,'G5VaHIfWPS','ã—ã—ã‚ƒã‚‚ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ','sixamo.rb','* ãƒ­ã‚°ãƒ•ã‚¡ã‚¤ãƒ«ã®èª­ã¿è¾¼ã¿ã¨ä¿æŒæ–¹æ³•ï¼š\r\n\r\nCore->newã•ã‚ŒãŸã¨ãã«Dictionary->loadãŒå®Ÿè¡Œã•ã‚Œã¾ã™ã€‚\r\nãã®ä¸­ã§ã€load_textã§ã€Œsixamo.txtã€ã‹ã‚‰Dictionaryã‚¯ãƒ©ã‚¹ã®\r\ntextãƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã«èª­ã¿è¾¼ã¿ã¾ã™ã€‚\r\n\r\n>|perl|\r\n>  61 sub load_text {\r\n>  62     my $self = shift;\r\n>  63\r\n>  64     return unless( -e $self->{text_filename} );\r\n>  65\r\n>  66     my $io = IO::File->new( $self->{text_filename} , \"<:utf8\" );\r\n>  67\r\n>  68     while( my $line = <$io> ) {\r\n>  69         chomp($line);\r\n>  70\r\n>  71         push @{$self->{text}}, $line ;\r\n>  72     }\r\n>  73 }\r\n||<\r\n\r\nå®Ÿéš›ã®sixamo.txtã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«ãªã‚Šã¾ã™ã€‚\r\nã”ã‚‰ã‚“ã«ãªã‚Œã°ãŠåˆ†ã‹ã‚Šã«ãªã‚‹ã¨æ€ã„ã¾ã™ãŒã€\r\nå®Ÿéš›ã®ç™ºè¨€ãŒãã®ã¾ã¾ä¿å­˜ã•ã‚Œã¦ã„ã¾ã™ã€‚\r\n\r\n>||\r\n>   1 ã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\n>   2 ã¦ã™ã¨ã ã‚ˆ\r\n>   3 ã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\n>   4 OhYear\r\n>   5 ãˆãˆãˆãˆãˆãˆãˆ\r\n>   6 ãŠã®ã‚Œ\r\n||<\r\n\r\n* è¾žæ›¸ãƒ•ã‚¡ã‚¤ãƒ«ã®æ§‹é€ ã¨ä¿æŒï¼š\r\n\r\nè¾žæ›¸ãƒ•ã‚¡ã‚¤ãƒ«ã®æ§‹é€ ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«ãªã‚Šã¾ã™ã€‚ã“ã¡ã‚‰ã®æ§‹é€ ã‚’\r\nload_dictionaryãƒ¡ã‚½ãƒƒãƒ‰ã§èª­ã¿è¾¼ã‚“ã§ã„ã‚‹ã€‚\r\n\r\n>||\r\n  1 line_num: 48\r\n  2\r\n  3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n  4 ã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\n  5 ã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\n  6 test    10  100 9,17,18,22,23\r\n  7 ã¬ã‚    1   28  14,80,90\r\n  8 ã¯ã‚    0   22  38,85\r\n  9 ã„ãŸã„  0   21  26,87\r\n 10 aaa 1   40  10,19\r\n 11 ã“ã‚“    1   40  2,36\r\n 12 ãŠãƒ¼ã„  1   40  43,46\r\n 13 ã©ã†ã”  1   13  81,82\r\n 14 ãªã‚“ã   1   30  70,75\r\n 15 ã†ã”ã‹ã—ã¦  1   29  73,74\r\n 16 ãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\n 17 ã’ã‚“    0   20  0\r\n 18 ï½“ï½„    1   40  30\r\n 19 ãˆãˆãˆ  1   40  4\r\n||<\r\n\r\nã“ã¡ã‚‰ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¯ï¼“è¡Œç›®ã‹ã‚‰ãŒæœ¬ä½“ã§ã€ãŸã¨ãˆã°ä»¥ä¸‹ã‚’ä¾‹ã«å–ã‚‹ã¨\r\n\r\n>||\r\n>   3 ã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\n||<\r\nãã‚Œãžã‚ŒãŒã“ã†ã„ã†ãƒ‡ãƒ¼ã‚¿ã«å½“ã¦ã¯ã¾ã‚‹ã€‚\r\n\r\n>||\r\nword : ã¦ã™ã¨\r\nnum  : 37\r\nsum  : 206\r\noccur:1,12,54,55,56,60,63,65,69,71,76\r\n||<\r\n\r\nå®Ÿéš›ã«ã¯ã€Dictionaryã‚¯ãƒ©ã‚¹ã®ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã€Œrelã€ã¨ã€Œoccurã€ã¨ã—ã¦ä»¥ä¸‹ã®ã‚ˆã†ã«ä¿æŒã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n> $VAR1 = {\r\n>           \'rel\' => {\r\n>                      \'ã¦ã™ã¨\' => {\r\n>                                       \'num\' => 37,\r\n>                                       \'sum\' => 206\r\n>                                     }\r\n>                    },\r\n>           \'occur\' => {\r\n>                        \'ã¦ã™ã¨\' => [\r\n>                                         1,\r\n>                                         12,\r\n>                                         54,\r\n>                                         55,\r\n>                                         56,\r\n>                                         60,\r\n>                                         63,\r\n>                                         65,\r\n>                                         69,\r\n>                                         71,\r\n>                                         76\r\n>                                       ]\r\n>                      }\r\n>         };\r\n||<\r\n\r\nãã‚Œã§ã€ãã‚Œãžã‚Œã®ãƒ‡ãƒ¼ã‚¿ã®æ„å‘³ã§ã™ãŒã€\r\n\r\n** occur:\r\n\r\nå­¦ç¿’ã®ã¨ã“ã‚ã‚’ã¿ã‚‹ã¨åˆ†ã‹ã‚‹ã®ã§ã™ãŒã€å…·ä½“çš„ã«ã¯ä»¥ä¸‹ã®éƒ¨åˆ†ã§è¿½åŠ ã—ã¦ã„ã¾ã™ã€‚\r\n\r\n>|perl|\r\n> 295             for my $term (@words) {\r\n> 296                 if( not  $self->{occur}->{$term}  || $num > $self->{occur}->{$term}->{-1} ) {\r\n> 297                     $self->{occur}->{$term}->{num} += $num;\r\n> 298                 }\r\n> 299             }\r\n||<\r\n\r\nã“ã®ãƒ—ãƒ­ã‚°ãƒ©ãƒ é–“é•ã£ã¦ã‚‹ã‚“ã§ã™ãŒã€occurã«ãã®å˜èªžãŒå­˜åœ¨ã—ãªã‘ã‚Œã° line_numã®å€¤ã‚’ occurã«è¿½åŠ ã—ã¾ã™ã€‚\r\n\r\n\r\nã˜ã‚ƒã€line_numã£ã¦ãªã‚“ã ã¨ã„ã†ã¯ãªã—ã«ãªã‚‹ã‚“ã§ã™ãŒ\r\n\r\n>|perl|\r\n> 275 # å­¦ç¿’\r\n> 276 # -------------------------------------------------------------------------\r\n> 277 sub learn {\r\n> 278     my ($self, $lines, $idx ) = @_;\r\n> 279\r\n> 280     my @new_terms = Freq->extract_terms( $lines, 30 );\r\n> 281\r\n> 282     for my $term ( @new_terms ) {\r\n> 283         $self->add_term($term);\r\n> 284     }\r\n> 285\r\n> 286     if( $idx ) {\r\n> 287         my @words_all;\r\n> 288\r\n> 289         my $count=0;\r\n> 290         for my $line ( @{$lines} ) {\r\n> 291             my $num = $idx + 1;\r\n> 292             my @words = $self->split_into_terms($line);\r\n> 293             @words_all = (@words_all,@words);\r\n> 294\r\n> 295             for my $term (@words) {\r\n> 296                 if( not  $self->{occur}->{$term}  || $num > $self->{occur}->{$term}->{-1} ) {\r\n> 297                     $self->{occur}->{$term}->{num} += $num;\r\n> 298                 }\r\n> 299             }\r\n> 300         }\r\n> 301\r\n> 302         $self->weight_update(@words_all);\r\n> 303\r\n> 304         for my $term (@{$self->{terms}}) {\r\n> 305             my $occur = $self->{occur}->{$term};\r\n> 306             my $size  = scalar( keys %{$self->{occur}} );\r\n> 307\r\n> 308             if( $size < 4 && $size > 0 && $occur->{num} * $size * 150 < $idx ) {\r\n> 309                 $self->del_term($term);\r\n> 310             }\r\n> 311         }\r\n> 312     }\r\n> 313 }\r\n\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n>|perl|\r\n>  75 # -------------------------------------------------------------------------\r\n>  76 # è¾žæ›¸ã‚ˆã¿ã“ã¿\r\n>  77 # -------------------------------------------------------------------------\r\n>  78 sub load_dictionary {\r\n>  79     my $self = shift;\r\n>  80\r\n>  81     return unless( -e $self->{dic_filename} );\r\n>  82\r\n>  83     my @lines = IO::File->new($self->{dic_filename}, \"<:utf8\")->getlines;\r\n>  84\r\n>  85     # -------------------------------------------------------------------------\r\n>  86     # haed\r\n>  87     # -------------------------------------------------------------------------\r\n>  88     my $line_num = shift @lines;\r\n>  89     ($self->{line_num},) = ( $line_num =~ /line_num:\\s*(.*)\\s*$/i );\r\n>  90\r\n>  91     # -------------------------------------------------------------------------\r\n>  92     # body\r\n>  93     # -------------------------------------------------------------------------\r\n>  94     for my $line (@lines) {\r\n>  95         chomp $line;\r\n>  96\r\n>  97         my ($word,$num,$sum,$occur) = split(/\\t/, $line );\r\n>  98\r\n>  99         if( $occur ) {\r\n> 100             $self->{occur}->{$word} = [ map { int $_ } split( /,/, $occur ) ];\r\n> 101             $self->add_term($word);\r\n> 102             $self->{rel}->{$word} = {};\r\n> 103             $self->{rel}->{$word}->{num} = int $num;\r\n> 104             $self->{rel}->{$word}->{num} = int $sum;\r\n> 105         }\r\n> 106     }\r\n> 107 }\r\n||<\r\n\r\nã“ã†ã—ã¦ã¿ã‚‹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒã¯ã£ãã‚Šã™ã‚‹ãŒã€\r\n\r\n>|perl|\r\n> 365                 # body\r\n> 366                 fp.each do |line|\r\n> 367                     line.chomp!\r\n> 368                     word, num, sum, occur = line.split(/\\t/)\r\n> 369                     if occur\r\n> 370                         @occur[word] = occur.split(/,/).collect { |l| l.to_i }\r\n> 371                         add_term(word)\r\n> 372                         @rel[word] = Hash.new(0)\r\n> 373                         @rel[word][:num] = num.to_i\r\n> 374                         @rel[word][:sum] = sum.to_i\r\n> 375\r\n> 376                     end\r\n> 377                 end\r\n> 378\r\n> 379                 GC.enable\r\n> 380                 GC.start\r\n> 381\r\n> 382             end\r\n> 383         end\r\n\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ','2007-11-13 23:18:29','2007-11-17 15:19:17'),(168,'3002kJV7xe','Sign-up for an AJAX Search API Key','google','Your key is: \r\n\r\nABQIAAAAq-wwpMsswLBvYdfPnMU08xTm4OYX57-PmWgfu2YBrTrI2cKLOhT287ieX-oDwnz1ynfNjz5vlxb7aw\r\n','2007-11-14 11:05:52','2007-11-17 15:16:47'),(169,'VYIUkZRntE','è‡‚åŠ›ã®é¤Šæˆï¼ˆäºŒï¼‰ã§ã¶ã‚Œã‚‹ç†ç”±','åˆæ°—é“','è‡‚åŠ›ã®é¤Šæˆï¼ˆäºŒï¼‰ã§ã¶ã‚Œã‚‹ç†ç”±ãŒåˆ†ã‹ã£ãŸã€‚ç„¡æ„è­˜ã«å³è…•ãŒåŠ›ã‚“ã§ã„ãŸã‹ã‚‰ã ã€‚æ‰‹ã®è¿”ã—ãŒé‡è¦ã§ã€ãã†ã™ã‚‹ã“ã¨ã«ã‚ˆã£ã¦è§£æ¶ˆã•ã‚Œã‚‹ã€‚','2007-11-15 07:09:04','2007-11-14 22:09:04'),(176,'vpXwDp99Xq','å­¦ç¿’ã¨ãã®è»¢æ©Ÿ','sixamo.rb','* å­¦ç¿’ã®ç‚ºã®è»¢æ©Ÿã¨ãªã‚‹è“„ç©ã¯ã©ã“ã§åˆ¤æ–­ã™ã‚‹ã®ã‹\r\n\r\nä¸‹è¨˜ã®æ–‡ç« ã«ã‚ã‚‹ã¨ãŠã‚Šã€ã—ã—ã‚ƒã‚‚ã¯ã€æœ€åˆå­¦ç¿’ã‚’ã—ã¾ã›ã‚“ã€‚\r\n\r\n>||\r\næ–‡ç« ã®å­¦ç¿’\r\n\r\nèžã„ãŸæ–‡ç« ã¯ã€å…¨ã¦ãã®ã¾ã¾è¦šãˆã¦ãŠãã¾ã™ã€‚ã¨ã‚Šã‚ãˆãšã“ã®æ™‚ç‚¹ã§ã¯ã€\r\nä½•ã‚‚åŠ å·¥ã¯ã—ã¾ã›ã‚“ã€‚å…¥åŠ›ãŒä¸€å®šé‡ãŸã¾ã£ãŸã‚‰ã€ã—ã—ã‚ƒã‚‚ã¯ãã®ä¸­ã‹ã‚‰ã€Œæ³¨ç›®èªžã€ã‚’æŽ¢ã—å‡ºã—ã€ãã‚Œã‚’è¦šãˆã¾ã™ã€‚\r\nåŸºæœ¬çš„ã«ã€ã—ã—ã‚ƒã‚‚ãŒçŸ¥ã£ã¦ã„ã‚‹*2è¨€è‘‰ã¯ã“ã®æ³¨ç›®èªžã ã‘ã§ã™ã€‚\r\nå…·ä½“çš„ã«ã¯ã€ç¯„å›²å†…ã«ä½•åº¦ã‚‚å‡ºã¦ãã‚‹æ–‡å­—åˆ—ãŒã‚ã£ãŸã‚‰ã€\r\nã€Œä½•å›žã‚‚å‡ºã¦ãã‚‹ã‚“ã ã‹ã‚‰ã€ã“ã®æ–‡å­—åˆ—ãŒè©±é¡Œã«ãªã£ã¦ã‚‹ã‚“ã ãªã€\r\nã¨ã„ã†ã“ã¨ã§æ³¨ç›®èªžãƒªã‚¹ãƒˆã«è¨˜æ†¶ã—ã¾ã™ã€‚ã¾ãŸã€ãã®æ³¨ç›®èªžãŒãƒ­ã‚°ã®ä½•è¡Œç›®ã«å‡ºã¦ããŸã‹ã‚‚è¦šãˆã¦ãŠãã¾ã™ã€‚ \r\n||<\r\n\r\nãã‚Œã§ã¯ã€å®Ÿéš›ã«ã—ã—ã‚ƒã‚‚ãŒå­¦ç¿’ã‚’å§‹ã‚ã‚‹è»¢æ©Ÿã¨ãªã‚‹éƒ¨åˆ†ã¯ã©ã“ã§ã—ã‚‡ã†ã‹ã€‚ä»¥ä¸‹ã§ã™ã€‚\r\n\r\n>|perl|\r\nif( scalar( @buf_prev ) > 0 ) {\r\n    $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_num} );\r\n    $modified = 1;\r\n\r\n    $self->{line_num} += scalar( @buf_prev );\r\n}\r\n||<\r\n\r\nã§ã€@buf_prevã¨ã¯ä½•ã‹ã¨ã„ã„ã¾ã™ã¨ã€ã—ã—ã‚ƒã‚‚ãŒ<b>ç¾åœ¨æ³¨ç›®ã—ã¦ã„ã‚‹text ã®æ•°è¡Œ</b>ãŒå…¥ã£ã¦ã„ã¾ã™ã€‚\r\n\r\n>|perl|\r\nmy $modified = undef;\r\n\r\nmy $read_size = 0;\r\nmy @buf_prev;\r\nmy $end_flag  = undef;\r\nmy $idx       = $self->{line_num}; # line_numã¯ç¾åœ¨æ³¨ç›®ã—ã¦ã„ã‚‹textã®è¡Œæ•°\r\nwhile(1) {\r\n    my @buf;\r\n    # read_size ã‚’ tmpã¸ã„ã‚Œã‚‹ã‚ˆ\r\n    my $tmp = $read_size;\r\n    # tmp ã¨ read_sizeãŒä¸€ç·’ã®ã†ã¡ã¯å›žã‚Šã¾ã™ã€‚\r\n    # (ãªã‚“ã§ã“ã“ã§WindowSizeãŒå‡ºã¦ãã‚‹ã®ã‹ã¯åˆ†ã‹ã‚Šã¾ã›ã‚“ãŒï¼‰\r\n    while( $tmp/$WindowSize == $read_size/$WindowSize ) {\r\n        # idx ãŒã€€ä¿æŒã—ã¦ã„ã‚‹ text ã®è¡Œæ•°ã‚ˆã‚Šå¤šãããªã£ãŸã‚‰ loop è„±å‡º \r\n        # textãŒç©ºã®çŠ¶æ…‹ãªã‚‰ã°ã€ã“ã¡ã‚‰ãŒå®Ÿè¡Œã•ã‚Œã¦å­¦ç¿’ã¯è¡Œã‚ã‚Œãªã„ã€‚\r\n        if( $idx >= scalar( @{$self->{text}} ) ) {\r\n            $end_flag = 1;\r\n            last;\r\n        }\r\n\r\n        # idx ã®æŒ‡ã—ç¤ºã™ textã®è¡Œæ•°ã‚’ @buf ã¸è¿½åŠ ï¼ˆã¤ã¾ã‚Šã€@bufã«ã¯ textã®ã‚ã‚‹ï¼‘è¡ŒãŒå…¥ã£ã¦ã„ã‚‹ï¼‰\r\n        push @buf , $self->{text}->[$idx] ;\r\n        # tmp ã¸æ ¼ç´ã•ã‚Œã¦ã„ã‚‹ textã®è¡Œæ•°ã‚’ + ã™ã‚‹ã€‚\r\n        $tmp += scalar( @{$self->{text}} ) ;\r\n        # idx ã‚’å¢—åŠ \r\n        $idx++;\r\n    }\r\n\r\n    # read_sizeã«ã¯ã€ç¾åœ¨ã® text ã®è¡Œæ•°ãŒå…¥ã£ã¦ã„ã‚‹ï¼ˆã»ã¨ã‚“ã©ã®å ´åˆï¼‰\r\n    $read_size = $tmp;\r\n\r\n    # ã“ã®æ™‚ç‚¹ã§ end_flagãŒç«‹ã£ã¦ã„ã‚Œã° loopçµ‚äº†\r\n    last if $end_flag ;\r\n\r\n    # ï¼‘é€±ç›®ã¯ç¢ºå®Ÿã«å®Ÿè¡Œã•ã‚Œãªã„ã€‚\r\n    # ï¼’é€±ç›®ä»¥é™ã¯å‰å›žã®å‘¨ã§ @buf ã«çªã£è¾¼ã¾ã‚ŒãŸ text ãŒã‚ã‚‹ã®ã§ learnãŒå®Ÿè¡Œã•ã‚Œã‚‹ã€‚\r\n    if( scalar( @buf_prev ) > 0 ) {\r\n        $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_num} );\r\n        $modified = 1;\r\n\r\n        # line_nu(ã¤ã¾ã‚Šæ³¨ç›®ã®è¡Œæ•°ï¼‰ã¸å¾—ã‚‰ã‚ŒãŸ @bufã®ã‚µã‚¤ã‚ºæ–‡ã ã‘ï¼‹ã™ã‚‹ã€‚\r\n        $self->{line_num} += scalar( @buf_prev );\r\n    }\r\n\r\n    @buf_prev = @buf;\r\n}\r\n||<\r\n\r\nä»¥ä¸‹ã‹ã‚‰ learn ã®éƒ¨åˆ†ã‚’ã¿ã¾ã™ã€‚\r\n\r\n>|perl|\r\n> 233             $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_num} );\r\n||<\r\n\r\næ³¨ç›®ã® text ã®æ•°è¡Œã¨ã€€ç¾åœ¨æ³¨ç›®ã—ã¦ã„ã‚‹ line_numã‚’å¼•æ•°ã¨ã—ã¦å¾—ãŸ learnãƒ¡ã‚½ãƒƒãƒ‰ã¯ã€\r\nä»¥ä¸‹ã®ã‚ˆã†ã«ã€€Freq->extract_termsã€€ã«ã€€text ã®æ•°è¡Œã‚’æ¸¡ã—ã¦ @new_termsã‚’å¾—ã¾ã™ã€‚\r\n\r\n>|perl|\r\nsub learn {\r\n    my ($self, $lines, $idx ) = @_;\r\n\r\n    # $lines ä¸­ã‹ã‚‰å‡ºç¾é »åº¦ã®é«˜ã„å˜èªžã‚’æŠœãå‡ºã—ã¾ã™ã€‚\r\n    my @new_terms = Freq->extract_terms( $lines, 30 );\r\n\r\n||<\r\n\r\nextract_termsã¯ã€å—ã‘å–ã£ãŸ text ã®æ•°è¡Œã‚’ã€Œãƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã® bufã¨ã—ã¦ä¿æŒã€ã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\nsub extract_terms {\r\n    my ($class, $buf, $limit ) = @_;\r\n\r\n    return $class->new($buf)->_extract_terms($limit);\r\n}\r\n||<\r\n\r\nãã—ã¦ã€å†…éƒ¨ãƒ¡ã‚½ãƒƒãƒ‰ã€Œ_extract_termsã€ã‚’å‘¼ã³å‡ºã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n# \r\n# å‡ºç¾é »åº¦ã®é«˜ã„å˜èªžã®é…åˆ—ã‚’è¿”ã™ã€‚\r\n# \r\nsub _extract_terms {\r\n    my ($self, $limit) = @_;\r\n\r\n    my @terms = @{$self->extract_terms_sub($limit)};\r\n    # ä¸‹è¨˜ã®å‡¦ç†ã™ã‚‹ãƒ‡ãƒ¼ã‚¿åž‹\r\n    # before: [[\"hello world\", 1]]\r\n    # after:  [[\"dlrow olleh\", 1]]\r\n    @terms    = map { [  join(\'\',reverse split(//, $_->[0] ) )   , $_->[1] ] } @terms;\r\n    my @terms2;\r\n    # å¾—ãŸã€€ArrayRefã®æ•°ã ã‘å›žã™\r\n    for my $idx (0..(scalar( @terms - 1) ) ) {\r\n        # è©²å½“ ArrayRefã€€ã®ã€€æ–‡å­—ã‚’ splitã—ã¦å¾—ã‚‹ã€‚\r\n        # [qw/h e l l o w , W o r l d/]\r\n        my @terms_index_plus_1 = split //,$terms[$idx + 1]->[0];\r\n        if(\r\n            # ç¾åœ¨ã® idx ã®æ–‡å­—æ•°ãŒ idx + 1ã€€ã‚ˆã‚Šå¤§ã„ã‹\r\n            @{[split( //, $terms[$idx]->[0] )]}  >= @{[split( //, $terms[$idx + 1]->[0] )]}\r\n            ||\r\n            # idx ã®æ–‡å­—ã®æ•°ã ã‘ idx + 1 ã®æ–‡å­—ã€€ã¨ idx ã®æ–‡å­—ãŒåˆ¥ã§ã‚ã‚‹\r\n            $terms[$idx]->[0] ne  join(\'\' , map { $terms_index_plus_1[$_] } (0..scalar( @{[split //, $terms[$idx]->[0] ]} )) )\r\n        ) {\r\n            # ä¸Šè¨˜æ¡ä»¶ã‚’æº€ãŸã›ã° @terms ã¸ [\'hello world\' , 1 ] ã®é…åˆ—ã‚’è¿½åŠ ã™ã‚‹\r\n            push @terms2 , $terms[$idx];\r\n        }\r\n        # idx ã® é »åº¦ãŒ idx + 1 ã‚ˆã‚Šå¤§ãã„å ´åˆ\r\n        elsif( $terms[$idx]->[1] >= $terms[$idx + 1]->[1] + 2 ) {\r\n            # @terms2 ã¸ã€€$terms ã‚’è¿½åŠ \r\n            push @terms2 , $terms[$idx];\r\n        }\r\n    }\r\n    # @terms ãŒ 0 ã‚ˆã‚Šå¤§ãã„å ´åˆ æœ€å¾Œã®é…åˆ—ã‚’ @terms2 ã¸å…¥ã‚Œã‚‹\r\n    push @terms2, $terms[-1] if  @terms > 0 ;\r\n\r\n    # æ–‡å­—åˆ—ã‚’å…ƒã«æˆ»ã—ã¦ã€æ–‡å­—ãŒå…¥ã£ãŸé…åˆ—ã‚’è¿”ã™ã€‚\r\n    return  map { join \'\',reverse @{[split //, $_->[0]]} }  @terms2;\r\n\r\n}\r\n||<\r\n\r\nextract_terms_subã‹ã‚‰ @termsã‚’å¾—ã¾ã™ã€‚\r\n\r\n>|perl|\r\nsub extract_terms_sub {\r\n    my ($self, $limit, $str, $num, $width ) = @_;\r\n    $num ||= 1;\r\nã€€ã€€# FIXME: $str ||= \'\';\r\n\r\nã€€ã€€# freq ã‹ã‚‰ Hashã‚’å¾—ã¾ã™ã€‚\r\n    # å‡ºç¾é »åº¦ã®é«˜ã„ã€Œèªžã€ã¨ãã®ã€Œå›žæ•°ã€ã‚’è¿”ã—ã¾ã™ã€‚\r\n    # { word => num , ... }\r\n    my $h    = $self->freq($str);\r\n    # word ãŒ 4ä»¥ä¸‹ãªã‚‰ true\r\n    my $flag = ( scalar( keys %$h ) <= 4 ) ? 1 : 0 ;\r\n\r\n    my @result;\r\n    # limitãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã°å®Ÿè¡Œ\r\n    if( $limit > 0 ) {\r\n        # ã‚‚ã—ã€ $strãŒ $h ã«ã‚ã‚Œã°å‰Šé™¤\r\n        if( defined $h->{$str} ) {\r\n            delete $h->{$str};\r\n        }\r\n        # to_a:\r\n        # ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n        # p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n        # freqã® Hash ã§ å€¤ãŒï¼’ã‚ˆã‚Šå¤§ãã„ã‚‚ã®ã‚’å‡¦ç†\r\n        for my $key ( grep { $h->{$_} > 2 } sort { $h->{$a} <=> $h->{$b} }  keys %$h ) {\r\n            # limitã¯å†å¸°ã®åœæ­¢ã«ä½¿ã‚ã‚Œã¦ã„ã‚‹ã‚ã‘ã  \r\n            # \r\n            push @result, $self->extract_terms_sub( $limit - 1, $key , $h->{$key}, $flag );\r\n        }\r\n    }\r\n    # @resultãŒ 0 ã§ã€€flagãŒç«‹ã£ã¦ã„ã‚Œã°å®Ÿè¡Œ\r\n    if( scalar( @result ) == 0 && $width ) {\r\n        # [ æ–‡å­—åˆ— => 1 ] ã‚’è¿”ã™\r\n        return [ ( lc $str, $num ) ];\r\n    }\r\n\r\n    # [ æ–‡å­—åˆ— => 1 ] ã‚’è¿”ã™\r\n    return \\@result;\r\n}\r\n||<\r\n\r\nfreqã¯ä½•ã‚’è¿”ã™ã‹ã¨è¨€ã„ã¾ã™ã¨ã€buf ã® textä¸­ã«å‡ºã¦ãã‚‹å‡ºç¾é »åº¦ã®é«˜ã„ã€Œèªžã€ã¨ãã®ã€Œå›žæ•°ã€ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n>|perl|\r\n# freq:å‡ºç¾é »åº¦è¨ˆç®—ã‚’æŒ‡ã™ã€‚\r\n# ãƒ†ã‚­ã‚¹ãƒˆä¸­ã«ã‚„ãŸã‚‰ã«å‡ºã¦ãã‚‹æ–‡å­—ã‚’\r\nsub freq {\r\n    my ($self, $str ) = @_;\r\n\r\n    my $freq = {};\r\n    # $str ãŒ ç©ºãªã‚‰ã°ã€ã“ã£ã¡\r\n    if( scalar(  @{[split(//,$str)]}  ) == 0 ) {\r\n        # buf ã«å…¥ã£ã¦ã„ã‚‹ text ã‚’ã¾ã‚ã—ã¾ã™\r\n        for my $buf (@{$self->{buf}}) {\r\n            if( $buf =~ /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i ) {\r\n                $freq->{ $1 || $2 || $3 } += 1;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for my $buf (@{$self->{buf}}) {\r\n            {\r\n                if( $buf =~ /($str)[^\\0]?/io ) {\r\n                    $freq->{$1} += 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return $freq;\r\n}\r\n||<\r\n\r\n\r\nç°¡å˜ãªä¾‹ã‚’ç¤ºã™ã¨ä»¥ä¸‹ã®ã‚ˆã†ã«ãªã‚‹ã€‚\r\n\r\n** ä¾‹\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse utf8;\r\nuse Data::Dumper;\r\n\r\nmy $freq = {};\r\nmy $buf = \'ã“ã‚“ã«ã¡ã‚!ã©ã†ã„ãŸã—ã¾ã—ã¦\';\r\n\r\nif( $buf =~ /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i ) {\r\nwarn $1;\r\nwarn $2;\r\nwarn $3;\r\n    $freq->{ $1 || $2 || $3 } += 1;\r\n}\r\n\r\nwarn Dumper $freq;\r\n||<\r\n\r\n*** çµæžœ\r\n\r\n>|perl|\r\nUse of uninitialized value in warn at freq.pl line 10.\r\nWarning: something\'s wrong at freq.pl line 10.\r\nUse of uninitialized value in warn at freq.pl line 11.\r\nWarning: something\'s wrong at freq.pl line 11.\r\nã“ at freq.pl line 12.\r\n$VAR1 = {\r\n          \"\\x{3053}\" => 1\r\n        };\r\n\r\n||<\r\n\r\n\r\nã€Œmy @new_terms = Freq->extract_terms( $lines, 30 );ã€ã§å‡ºç¾é »åº¦ã®é«˜ã„å˜èªžã®é…åˆ—ã‚’å—ã‘å–ã£ãŸã‚‰ã€‚\r\n\r\n>|perl|\r\n\r\n    # add_termã§è¾žæ›¸ã«å˜èªžã‚’è¿½åŠ \r\n    for my $term ( @new_terms ) {\r\n        $self->add_term($term);\r\n    }\r\n    # idx ãŒæŒ‡å®šã•ã‚Œã¦ã„ã‚Œã°\r\n    if( $idx ) {\r\n        my @words_all;\r\n\r\n        #====================================================================\r\n        # ç¾åœ¨æ³¨ç›®ã®å˜èªžã‚’ä½¿ã£ã¦ occurã® updateã‚’è¡Œã£ã¦ã„ã‚‹\r\n        # occur: å˜èªžãŒå‡ºç¾ã—ãŸ text ã®ä½ç½®ã‚’æŒ‡ã™ã€‚\r\n        #====================================================================\r\n        my $count=0;\r\n        # textã®é…åˆ—ã‚’å›žã™\r\n        for my $line ( @{$lines} ) {\r\n            my $num = $idx + 1;\r\n            # æ–‡å­—åˆ—ã‹ã‚‰è¾žæ›¸ã‹ã‚‰è¾žæ›¸ã«ç™»éŒ²ã—ã¦ã‚ã‚‹å˜èªžã‚’æŠœãå‡ºã—ã¦ã„ã‚‹ã€‚\r\n            # [\'text\', ... ] ã¨ã„ã£ãŸå½¢ã§å˜èªžã®é…åˆ—ãŒè¿”ã‚‹ã€‚\r\n            my @words = @{$self->split_into_terms($line)};\r\n            # å¯¾è±¡é…åˆ—ä¸­ã®å˜èªžã®é…åˆ—ã¨å‡ºç¾é »åº¦ã®é«˜ã„å˜èªžã®é…åˆ—ã‚’ã¾ã¨ã‚ã‚‹\r\n            @words_all = (@words_all,@words);\r\n            # splito_into_termsã§å¾—ãŸå˜èªžã‚’ã¾ã‚ã™\r\n            for my $term (@words) {\r\n                # occurã®ä¸­ã«å˜èªžãŒç„¡ã„ã€€ã‚‚ã—ãã¯ã€$num ãŒ occurã®termã«å…¥ã£ã¦ã„ã‚‹æœ€å¾Œã®æ•°å€¤ã‚ˆã‚Šå¤§ãã‘ã‚Œã°ã€€$numè¿½åŠ \r\n                if( not  $self->{occur}->{$term}  || $num > $self->{occur}->{$term}->{-1} ) {\r\n                    push @{$self->{occur}->{$term}} , $num;\r\n                }\r\n            }\r\n        }\r\n\r\n        # \r\n        $self->weight_update(@words_all);\r\n\r\n        for my $term (@{$self->{terms}}) {\r\n            my $occur = $self->{occur}->{$term};\r\n            my $size  = scalar( keys %{$self->{occur}} );\r\n\r\n            if( $size < 4 && $size > 0 && $occur->{num} * $size * 150 < $idx ) {\r\n                $self->del_term($term);\r\n            }\r\n        }\r\n    }\r\n}\r\n||<\r\n\r\n\r\n** Dictionary.split_into_terms\r\n\r\nsplit_into_termsã¯Trieã®split_into_termsã‚’ä½¿ç”¨ã—ã¦ã„ã¦\r\n\r\n>|perl|\r\nsub split_into_terms {\r\n    my ($self, $str, $num ) = @_;\r\n\r\n    return $self->{trie}->split_into_terms($str,$num);\r\n}\r\n||<\r\n\r\n** Trie.split_into_terms\r\n\r\nTrieã¯åˆæœŸåŒ–ã—ãŸæ™‚ç‚¹ã§ã€rootã¨ã„ã†ç‰¹æ®Šãªæ§‹é€ æ–‡å­—åˆ—ãƒŽãƒ¼ãƒ‰ã‚’ä¿æŒã—ã¦ã„ã¾ã™ã€‚\r\nsplit_into_termsã¯ã€rootã®ãƒŽãƒ¼ãƒ‰ã«ä¿æŒã•ã‚Œã¦ã„ã‚‹æ–‡å­—åˆ—ãƒŽãƒ¼ãƒ‰ã¨æ¯”è¼ƒã—ã¦å¾—ãŸæ–‡å­—åˆ—ã‚’ä»¥ä¸‹ã®ã‚ˆã†ãªå½¢ã§è¿”ã™ã€‚\r\næ–‡å­—åˆ—ã‹ã‚‰è¾žæ›¸ã‹ã‚‰è¾žæ›¸ã«ç™»éŒ²ã—ã¦ã‚ã‚‹å˜èªžã‚’æŠœãå‡ºã—ã¦ã„ã‚‹ã€‚\r\n\r\n>|perl|\r\n[\"test\"]\r\n||<\r\n\r\n>|perl|\r\nsub split_into_terms {\r\n    my $self  = shift;\r\n    my $str   = shift;\r\n    my $num   = shift || \'\';\r\n\r\n    return [] unless $str;\r\n\r\n    my @result;\r\n    # while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n    # æ–‡å­—åˆ—ãŒã‚ã‚Šã€ã‹ã¤ã€€$num ãŒæ•°å­—ã€€è‹¥ã—ãã¯ã€€@result ãŒ $numeã€€ã‚ˆã‚Šå°ã•ã„å ´åˆã¯çœŸ\r\n    while( $str and  ( $num =~ /^\\D*?$/ || ( scalar( @result)  < $num ) )) {\r\n\r\n        # self->{root} ã®ä¸­ã§æ–‡å­—åˆ—ãŒå«ã¾ã‚Œã‚‹ã‚‚ã®ã®æœ€å¤§ã®é•·ã•ã®ã‚‚ã®ã‚’è¿”ã™\r\n        my $prefix = $self->longest_prefix_subword($str);\r\n\r\n        if( $prefix ) {\r\n            push @result , $prefix;\r\n            my @strs = split(//,$str);\r\n            # prefix ã®ã‚µã‚¤ã‚ºã‹ã‚‰ æœ€å¾Œã¾ã§ã®æ–‡å­—ã‚’ $strã¸å…¥ã‚Œã‚‹\r\n            # FIXME: bug resultã¸åæ˜ ã—ã¦ãªã„\r\n            $str = join(\'\', map { $strs[$_] } ( scalar( @{[split(//,$prefix)]} ) .. -1) );\r\n        }\r\n        # $self->{root}ã«ã¾ã£ãŸãè“„ç©ãŒãªã‘ã‚Œã° prefix ã¯ undef\r\n        else {\r\n            my ($char,@str_tmp ) = split(//, $str);\r\n            # ã‚‚ã— $num ãŒè¨­å®šã•ã‚Œã¦ã„ã‚Œã° å…ˆé ­ã®æ–‡å­—ã‚’ @resultã¸è¿½åŠ \r\n            push @result , $char if $num;\r\n            $str = join(\'\',@str_tmp );\r\n        }\r\n    }\r\n\r\n    return \\@result;\r\n}\r\n||<\r\n\r\n** Dictionary.weight_update\r\n\r\n@words: ç¾åœ¨æ³¨ç›®ã®å˜èªžã®é…åˆ—ã‚’å—ã‘å–ã‚Šã¾ã™ã€‚\r\n\r\n\r\n\r\n\r\n>|perl|\r\n#===========================================================================\r\n# sum ãŒæ¯æ•°ã§ num ãŒãã®å˜èªžãŒå¹…ã®ä¸­ã§å­˜åœ¨ã—ã¦ã„ã‚‹æ•°ã€‚\r\n# width ã®å¹…ã§ã®å˜èªžã®å‡ºç¾ã®é »åº¦ã®å…ƒã«ãªã‚‹å€¤ã‚’æ±‚ã‚ã¦ã„ã‚‹ã€‚\r\n#\r\n#===========================================================================\r\nsub weight_update {\r\n    my ($self, @words) = @_;\r\n    my $width = 20;\r\n\r\n    # rel ã«ç™»éŒ²ã•ã‚Œã¦ã„ãªã„å˜èªžãŒã‚ã‚Œã° {} ã‚’ã„ã‚Œã‚‹\r\n    for my $term (@words) {\r\n        $self->{rel}->{$term} = {} unless defined $self->{rel}->{$term};\r\n    }\r\n\r\n    # å˜èªžã®é‡ã‚’ä¿æŒ\r\n    my $size = scalar @words;\r\n    # 0.. @words ã®ã‚µã‚¤ã‚ºã‹ã‚‰ - 20 ã¾ã§ã‚’å›žã™ã€‚\r\n    for my $idx1 (0..($size-$width)) {\r\n        # indx1ã®å˜èªžã‚’å¾—ã‚‹\r\n        my $word1 = $words[$idx1];\r\n\r\n        # idx1 + 1 .. idx + 20 ã‚’å›žã™ã€‚\r\n        for my $idx2 ( ($idx1+1)..($idx1+$width) ) {\r\n            # ã‚‚ã—ç¾åœ¨ã®idx1ã®å˜èªžã¨åŒä¸€ãªã‚‰ã°ã€num + 1\r\n            $self->{rel}->{$word1}->{num} += 1 if $word1 eq $words[$idx2];\r\n            $self->{rel}->{$word1}->{sum} += 1;\r\n        }\r\n    }\r\n\r\n    # 0 .. 21 ã‹ã„å›žã™\r\n    for my $idx1 ( 0..($width + 1 ) ) {\r\n        my $word1 = $words[$idx1];\r\n\r\n        # è©²å½“ idx1ã« wordãŒã‚ã‚Œã°\r\n        if( $word1 ) {\r\n            # \r\n            for my $idx2 ( reverse ( 1..($idx1 -1)) ) {\r\n                $self->{rel}->{$word1}->{num} += 1 if $word1 eq $words[-$idx2];\r\n                $self->{rel}->{$word1}->{sum} += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ','2007-11-18 01:13:39','2007-11-18 20:38:03'),(170,'tA2Vp3vBRc','Sukinaã®ç§»è¡Œæ‰‹é †ã¾ã¨ã‚','works','>||\r\nSukinaç§»è¡Œæ‰‹é †ï¼š\r\n\r\n=====================================================================================\r\næœ¬æ—¥ï¼š\r\n	ãƒ»DNSã®è¨­å®šå¤‰æ›´\r\n		ãƒ»TTLã‚’600ã¸å¤‰æ›´\r\n	ãƒ»ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆæ©Ÿèƒ½ã®ä¿®æ­£ç‰ˆã‚’ã‚ã’ã‚‹\r\n		ãƒ»æœ¬ç•ªã®DBä¿®æ­£å¾Œã«UP\r\n	ãƒ»ç§»è¡Œã®å¿…è¦ã®ã‚ã‚‹ãƒ†ãƒ¼ãƒ–ãƒ«ãƒ‡ãƒ¼ã‚¿ã‚’ç§»è¡Œã•ã›ã‚‹\r\n		ï¼šSukinaè‡ªä½“ãŒãƒ¡ãƒ³ãƒãƒ¼ã‚‚ã‚¢ã‚¯ã‚»ã‚¹ã‚‚ãã‚Œã»ã©ç„¡ã„ç‚ºã€ç¾çŠ¶ã€Scriptã‚ã‚‹éƒ¨åˆ†ã¯å¯¾å¿œæ¸ˆã¿ã§ã™ã€‚ã€‚\r\n		ãƒ»member		ï¼š13æ—¥åˆ†ã¾ã§ãƒ†ã‚¹ãƒˆæ¸ˆã¿ç©ºã®DBã«ã„ã‚Œã¦ã‚ã‚‹ã®ã§ãã®ã¾ã¾çªã£è¾¼ã‚ã°OKã€‚\r\n		ãƒ»access_log		ï¼š13æ—¥åˆ†ã¾ã§ã¯AccessLogã«çªã£è¾¼ã‚“ã§ã‚ã‚‹ã€‚ãƒ†ã‚¹ãƒˆã—ãŸæ„Ÿã˜ã¯ãã‚Œã»ã©æŽ›ã‹ã£ã¦ãªã„ã®ã§å¤§ä¸ˆå¤«ã€‚\r\n		ãƒ»down_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»sample_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»unsubscribe_enquete	ï¼š13æ—¥åˆ†ã¾ã§ã¯ç§»è¡Œãƒ†ã‚¹ãƒˆçµ‚äº†ã€‚\r\n	ãƒ»æœ¬ç•ªç’°å¢ƒè¨­å®š\r\n		ãƒ»previewã¨åŒæ™‚ã«æœ¬ç•ªã¸ç’°å¢ƒã‚’æ§‹ç¯‰ã™ã‚‹ã€‚\r\n		ãƒ»ã‚¢ã‚¯ã‚»ã‚¹è§£æžç³»ãŒå‹•ã‹ãªã„ã‚ˆã†ã«sukina.jpã ã‘å›žé¿ã•ã›ã‚‹ã€‚\r\n		ãƒ»ç´°ã‹ã„æ©Ÿèƒ½ã®ç¢ºèªã¨ä¿®æ­£ã‚’è¡Œã†ã€‚\r\n	ãƒ»\r\n=====================================================================================\r\n19æ—¥ï¼š	\r\n	ãƒ»ç§»è¡Œãƒ†ãƒ¼ãƒ–ãƒ«ã®å·®åˆ†ã‚’çªã£è¾¼ã‚€\r\n		ãƒ»ï¼‘ï¼”æ—¥ã‹ã‚‰18æ—¥ã¾ã§ã®åˆ†ã‚’ç§»è¡Œã€‚ï¼ˆã“ã®æ™‚ç‚¹ã§ã™ã§ã«æ–¹æ³•ã¯ç¢ºç«‹ã—ã¦ã„ã‚‹ç‚ºï¼‰\r\n	ãƒ»DNSè¨­å®š\r\n		ãƒ»Perlbalã¸å‘ã‘ã‚‹\r\n			ãƒ»Perlbalã‹ã‚‰Poundã¸å‘ã‘ã‚‹\r\n	ãƒ»Sukinaã§ä½¿ç”¨ã—ã¦ã„ã‚‹ç‰¹é›†ã®ãƒªã‚¹ãƒˆã‚’ä½œã£ã¦å–¶æ¥­ï¼ˆä¹…ç•™ç±³ã•ã‚“ï¼Ÿï¼‰ã¸æŠ•ã’ã¦ç‰¹é›†ä½œã£ã¦ã‚‚ã‚‰ã†ã€‚\r\n		ãƒ»Scriptã§çªã£è¾¼ã‚“ã ã»ã†ãŒæ—©ã‘ã‚Œã°Scriptã§çªã£è¾¼ã‚€ã€‚\r\n=====================================================================================\r\nå½“æ—¥ï¼š\r\n	ãƒ»æ®‹ã‚Šã®ãƒ‡ãƒ¼ã‚¿ã‚’ä¸€æ‹¬ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n		ãƒ»ï¼’ï¼æ—¥ã®åœæ­¢åˆ†ã¾ã§ã®ãƒ‡ãƒ¼ã‚¿ã‚’ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n	ãƒ»ç¢ºèªãƒ•ã‚§ãƒ¼ã‚º\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nï¼‘ï¼•æ—¥å‡¦ç†åˆ†ï¼š\r\n\r\nJukeBoxç³»ã®å‡¦ç†ï¼š\r\n		ï¼š\r\n\r\nå½“æ—¥ï¼š\r\n	ãƒ»down_log\r\n		ï¼šsite_perl/JukeBox/Script/Cron/SiteDownLogToJukeBox.pm\r\n		ãƒ»åœæ­¢ã•ã›ã‚‹ã€‚\r\n	ãƒ»sample_log\r\n		ï¼šsite_perl/JukeBox/Script/Maintenance/Import/CheckSample.pm\r\n\r\n\r\n\r\nï¼‘ï¼Žãƒ€ã‚¦ãƒ³ãƒ­ã‚°\r\nï¼’ï¼Žã‚µãƒ³ãƒ—ãƒ«ãƒ•ãƒ©ã‚°\r\nï¼“ï¼Žãƒ©ãƒ³ã‚­ãƒ³ã‚°ä½œã‚‹\r\n	ãƒ»ç®¡ç†ç”»é¢ã‹ã‚‰ä½œæˆã§ãã‚‹\r\n	ãƒ»æ—¥åˆŠãƒ»æœˆé–“\r\n	ãƒ»å‰ã€…æ—¥ã®ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã‚’ä½œã£ãŸã†ãˆã§å‰æ—¥ã®ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã‚’ä½œã‚‹ã€‚\r\nï¼”ï¼Žç‰¹é›†\r\n	ãƒ»\r\n\r\n\r\nï¼•ï¼Žç„¡æ–™PICKUPã‚’æŽ¢ã™\r\nï¼–ï¼Žã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆç‰¹é›†\r\n	URL:http://sukina-feature.melop.jp/artist/\r\n	å®Ÿéš›ã«ä½¿ç”¨ã—ã¦ã„ã‚‹å ´æ‰€ã¯ã‚³ã‚³ã ã£ãŸã€‚\r\n\r\nï¼—ï¼ŽAmazonãŒã‚ã‚‹ã‘ã©ã¤ã‹ã£ã¦ã‚‹ï¼Ÿ\r\n	ãƒ»ä½¿ã£ã¦ã‚‹ã‹ã‚‰ã€JukeBoxã®ã‚¢ãƒžã‚¾ãƒ³ã«å¯¾å¿œã•ã›ã‚‹ã€‚\r\n\r\nï¼˜ï¼ŽPerlbalã®å¯¾å¿œ\r\n	ï¼‘ï¼™æ—¥ï¼š\r\n		ãƒ»DNSã‚’å¤‰æ›´ã—ã¦ã€Perlbalã¸å‘ã‘ã‚‹ã€‚\r\n			ãƒ»Perlbalâ†’Poundâ†’APPã®é †ã«ã‚¢ã‚¯ã‚»ã‚¹ã•ã›ã‚‹ã€‚\r\n	ï¼’ï¼æ—¥ï¼š\r\n		ãƒ»PerlBalâ†’APPã¸å¤‰æ›´\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\namazon:\r\n\r\nhitrank.jpã§ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«å¯¾å¿œã—ã¦ã„ã‚‹ã®ã§ã€configã¸amazonã‚’è¿½åŠ ã—ã¦\r\nå¯¾å‡¦ã™ã‚Œã°OKã®ã¯ãšã€‚ã“ã‚Œã¯ã€æ‰‹å‹•ã§å¯¾å‡¦ã™ã‚‹ã€‚\r\n||<\r\n\r\n>|html|\r\n> <!-- amazon -->\r\n> <div style=\"background-color:#FFCBAF;padding:1px;\">\r\n> <table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\">\r\n> <tr>\r\n> [% IF agent.device_id == \'TS29\' %]\r\n> <td bgcolor=\"#FD6000\"><a name=\"pickup\">ãƒ”ãƒƒã‚¯ã‚¢ãƒƒãƒ—ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆ</a></td>\r\n> [% ELSE %]\r\n> <td bgcolor=\"#FD6000\"><a name=\"pickup\"><img src=\"/custom/ttl-pickup.gif\" alt=\"ãƒ”ãƒƒã‚¯ã‚¢ãƒƒãƒ—ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆ\" width=\"127\" height=\"24\" border=\"0\" /></a></td>\r\n> [% END %]\r\n> </tr>\r\n> </table>\r\n> <table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\" style=\"background-color:#fff;\">\r\n>   [% FOR amazon = amazons.data %]\r\n>     <tr>\r\n>       [% UNLESS agent.device_id == \'TS29\' %]\r\n>       <td align=\"center\" bgcolor=\"#ffffff\">\r\n>         [% amazon.link_s | html_unescape %]\r\n>       </td>\r\n>       [% END %]\r\n>       <td align=\"left\" bgcolor=\"#ffffff\">\r\n>         <font size=\"1\">\r\n>         <img localsrc=\"291\" />[% amazon.title  %]<br />\r\n>         <img localsrc=\"288\" />[% amazon.name %]<br />\r\n>         [% IF amazon.melody_content_id %]<a href=\"/sound/detail/?content_rid=[% amazon.melody_content_id %]&amazon_rid=[% amazon.rid %]\">ç€ãƒ¡ãƒ­</a><br />[% END %]\r\n>         [% IF amazon.uta_content_id    %]<a href=\"/sound/detail/?content_rid=[% amazon.uta_content_id %]&amazon_rid=[% amazon.rid %]\">ç€ã†ãŸ</a><br />[% END %]\r\n>         </font>\r\n>       </td>\r\n>     </tr>\r\n>   [% END %]\r\n> </table>\r\n> <!-- /amazon -->\r\n||<\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nPerlbalã®å¯¾å¿œ\r\n	ãƒ»\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-11-15 18:00:35','2007-11-17 15:15:38'),(171,'CDkGgpCDVO','sukina ç§»è¡Œã¾ã¨ã‚','works','â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nSukinaç§»è¡Œæ‰‹é †ï¼š\r\n\r\n=====================================================================================\r\næœ¬æ—¥ï¼š\r\n	ãƒ»DNSã®è¨­å®šå¤‰æ›´\r\n		ãƒ»TTLã‚’600ã¸å¤‰æ›´\r\n	ãƒ»ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆæ©Ÿèƒ½ã®ä¿®æ­£ç‰ˆã‚’ã‚ã’ã‚‹\r\n		ãƒ»æœ¬ç•ªã®DBä¿®æ­£å¾Œã«UP\r\n	ãƒ»ç§»è¡Œã®å¿…è¦ã®ã‚ã‚‹ãƒ†ãƒ¼ãƒ–ãƒ«ãƒ‡ãƒ¼ã‚¿ã‚’ç§»è¡Œã•ã›ã‚‹\r\n		ï¼šSukinaè‡ªä½“ãŒãƒ¡ãƒ³ãƒãƒ¼ã‚‚ã‚¢ã‚¯ã‚»ã‚¹ã‚‚ãã‚Œã»ã©ç„¡ã„ç‚ºã€ç¾çŠ¶ã€Scriptã‚ã‚‹éƒ¨åˆ†ã¯å¯¾å¿œæ¸ˆã¿ã§ã™ã€‚ã€‚\r\n		ãƒ»member		ï¼š13æ—¥åˆ†ã¾ã§ãƒ†ã‚¹ãƒˆæ¸ˆã¿ç©ºã®DBã«ã„ã‚Œã¦ã‚ã‚‹ã®ã§ãã®ã¾ã¾çªã£è¾¼ã‚ã°OKã€‚\r\n		ãƒ»access_log		ï¼š13æ—¥åˆ†ã¾ã§ã¯AccessLogã«çªã£è¾¼ã‚“ã§ã‚ã‚‹ã€‚ãƒ†ã‚¹ãƒˆã—ãŸæ„Ÿã˜ã¯ãã‚Œã»ã©æŽ›ã‹ã£ã¦ãªã„ã®ã§å¤§ä¸ˆå¤«ã€‚\r\n		ãƒ»down_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»sample_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»unsubscribe_enquete	ï¼š13æ—¥åˆ†ã¾ã§ã¯ç§»è¡Œãƒ†ã‚¹ãƒˆçµ‚äº†ã€‚\r\n	ãƒ»æœ¬ç•ªç’°å¢ƒè¨­å®š\r\n		ãƒ»previewã¨åŒæ™‚ã«æœ¬ç•ªã¸ç’°å¢ƒã‚’æ§‹ç¯‰ã™ã‚‹ã€‚\r\n		ãƒ»ã‚¢ã‚¯ã‚»ã‚¹è§£æžç³»ãŒå‹•ã‹ãªã„ã‚ˆã†ã«sukina.jpã ã‘å›žé¿ã•ã›ã‚‹ã€‚\r\n		ãƒ»ç´°ã‹ã„æ©Ÿèƒ½ã®ç¢ºèªã¨ä¿®æ­£ã‚’è¡Œã†ã€‚\r\n	ãƒ»\r\n=====================================================================================\r\n19æ—¥ï¼š	\r\n	ãƒ»ç§»è¡Œãƒ†ãƒ¼ãƒ–ãƒ«ã®å·®åˆ†ã‚’çªã£è¾¼ã‚€\r\n		ãƒ»ï¼‘ï¼”æ—¥ã‹ã‚‰18æ—¥ã¾ã§ã®åˆ†ã‚’ç§»è¡Œã€‚ï¼ˆã“ã®æ™‚ç‚¹ã§ã™ã§ã«æ–¹æ³•ã¯ç¢ºç«‹ã—ã¦ã„ã‚‹ç‚ºï¼‰\r\n	ãƒ»DNSè¨­å®š\r\n		ãƒ»Perlbalã¸å‘ã‘ã‚‹\r\n			ãƒ»Perlbalã‹ã‚‰Poundã¸å‘ã‘ã‚‹\r\n	ãƒ»Sukinaã§ä½¿ç”¨ã—ã¦ã„ã‚‹ç‰¹é›†ã®ãƒªã‚¹ãƒˆã‚’ä½œã£ã¦å–¶æ¥­ï¼ˆä¹…ç•™ç±³ã•ã‚“ï¼Ÿï¼‰ã¸æŠ•ã’ã¦ç‰¹é›†ä½œã£ã¦ã‚‚ã‚‰ã†ã€‚\r\n		ãƒ»Scriptã§çªã£è¾¼ã‚“ã ã»ã†ãŒæ—©ã‘ã‚Œã°Scriptã§çªã£è¾¼ã‚€ã€‚\r\n=====================================================================================\r\nå½“æ—¥ï¼š\r\n	ãƒ»æ®‹ã‚Šã®ãƒ‡ãƒ¼ã‚¿ã‚’ä¸€æ‹¬ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n		ãƒ»ï¼’ï¼æ—¥ã®åœæ­¢åˆ†ã¾ã§ã®ãƒ‡ãƒ¼ã‚¿ã‚’ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n	ãƒ»ç¢ºèªãƒ•ã‚§ãƒ¼ã‚º\r\n\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nï¼‘ï¼•æ—¥å‡¦ç†åˆ†ï¼š\r\n\r\nJukeBoxç³»ã®å‡¦ç†ï¼š\r\n		ï¼š\r\n\r\nå½“æ—¥ï¼š\r\n	ãƒ»down_log\r\n		ï¼šsite_perl/JukeBox/Script/Cron/SiteDownLogToJukeBox.pm\r\n		ãƒ»åœæ­¢ã•ã›ã‚‹ã€‚\r\n	ãƒ»sample_log\r\n		ï¼šsite_perl/JukeBox/Script/Maintenance/Import/CheckSample.pm\r\n\r\n\r\n\r\nï¼‘ï¼Žãƒ€ã‚¦ãƒ³ãƒ­ã‚°\r\nï¼’ï¼Žã‚µãƒ³ãƒ—ãƒ«ãƒ•ãƒ©ã‚°\r\nï¼“ï¼Žãƒ©ãƒ³ã‚­ãƒ³ã‚°ä½œã‚‹\r\n	ãƒ»ç®¡ç†ç”»é¢ã‹ã‚‰ä½œæˆã§ãã‚‹\r\n	ãƒ»æ—¥åˆŠãƒ»æœˆé–“\r\n	ãƒ»å‰ã€…æ—¥ã®ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã‚’ä½œã£ãŸã†ãˆã§å‰æ—¥ã®ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã‚’ä½œã‚‹ã€‚\r\nï¼”ï¼Žç‰¹é›†\r\n	ãƒ»\r\n\r\n\r\nï¼•ï¼Žç„¡æ–™PICKUPã‚’æŽ¢ã™\r\nï¼–ï¼Žã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆç‰¹é›†\r\n	URL:http://sukina-feature.melop.jp/artist/\r\n	å®Ÿéš›ã«ä½¿ç”¨ã—ã¦ã„ã‚‹å ´æ‰€ã¯ã‚³ã‚³ã ã£ãŸã€‚\r\n\r\nï¼—ï¼ŽAmazonãŒã‚ã‚‹ã‘ã©ã¤ã‹ã£ã¦ã‚‹ï¼Ÿ\r\n	ãƒ»ä½¿ã£ã¦ã‚‹ã‹ã‚‰ã€JukeBoxã®ã‚¢ãƒžã‚¾ãƒ³ã«å¯¾å¿œã•ã›ã‚‹ã€‚\r\n\r\nï¼˜ï¼ŽPerlbalã®å¯¾å¿œ\r\n	ï¼‘ï¼™æ—¥ï¼š\r\n		ãƒ»DNSã‚’å¤‰æ›´ã—ã¦ã€Perlbalã¸å‘ã‘ã‚‹ã€‚\r\n			ãƒ»Perlbalâ†’Poundâ†’APPã®é †ã«ã‚¢ã‚¯ã‚»ã‚¹ã•ã›ã‚‹ã€‚\r\n	ï¼’ï¼æ—¥ï¼š\r\n		ãƒ»PerlBalâ†’APPã¸å¤‰æ›´\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\namazon:\r\n\r\nhitrank.jpã§ã¯ä»¥ä¸‹ã®ã‚ˆã†ã«å¯¾å¿œã—ã¦ã„ã‚‹ã®ã§ã€configã¸amazonã‚’è¿½åŠ ã—ã¦\r\nå¯¾å‡¦ã™ã‚Œã°OKã®ã¯ãšã€‚ã“ã‚Œã¯ã€æ‰‹å‹•ã§å¯¾å‡¦ã™ã‚‹ã€‚\r\n\r\n\r\n> <!-- amazon -->\r\n> <div style=\"background-color:#FFCBAF;padding:1px;\">\r\n> <table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\">\r\n> <tr>\r\n> [% IF agent.device_id == \'TS29\' %]\r\n> <td bgcolor=\"#FD6000\"><a name=\"pickup\">ãƒ”ãƒƒã‚¯ã‚¢ãƒƒãƒ—ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆ</a></td>\r\n> [% ELSE %]\r\n> <td bgcolor=\"#FD6000\"><a name=\"pickup\"><img src=\"/custom/ttl-pickup.gif\" alt=\"ãƒ”ãƒƒã‚¯ã‚¢ãƒƒãƒ—ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆ\" width=\"127\" height=\"24\" border=\"0\" /></a></td>\r\n> [% END %]\r\n> </tr>\r\n> </table>\r\n> <table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\" style=\"background-color:#fff;\">\r\n>   [% FOR amazon = amazons.data %]\r\n>     <tr>\r\n>       [% UNLESS agent.device_id == \'TS29\' %]\r\n>       <td align=\"center\" bgcolor=\"#ffffff\">\r\n>         [% amazon.link_s | html_unescape %]\r\n>       </td>\r\n>       [% END %]\r\n>       <td align=\"left\" bgcolor=\"#ffffff\">\r\n>         <font size=\"1\">\r\n>         <img localsrc=\"291\" />[% amazon.title  %]<br />\r\n>         <img localsrc=\"288\" />[% amazon.name %]<br />\r\n>         [% IF amazon.melody_content_id %]<a href=\"/sound/detail/?content_rid=[% amazon.melody_content_id %]&amazon_rid=[% amazon.rid %]\">ç€ãƒ¡ãƒ­</a><br />[% END %]\r\n>         [% IF amazon.uta_content_id    %]<a href=\"/sound/detail/?content_rid=[% amazon.uta_content_id %]&amazon_rid=[% amazon.rid %]\">ç€ã†ãŸ</a><br />[% END %]\r\n>         </font>\r\n>       </td>\r\n>     </tr>\r\n>   [% END %]\r\n> </table>\r\n> <!-- /amazon -->\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nPerlbalã®å¯¾å¿œ\r\n	ãƒ»\r\n\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nãƒ†ãƒ¼ãƒ–ãƒ«ã®ç§»è¡Œï¼š\r\n\r\n=========================================================================\r\nãƒ»member\r\n	ãƒ»Member\r\n	ãƒ»AccessLogMembe\r\n\r\nå½“æ—¥ã—ã‹å‹•ã‹ã›ãªã„ã€‚\r\n\r\n=========================================================================\r\nãƒ»access_logï¼š\r\n\r\n-------------------------------------------------------------------------\r\nAccessLog.pm\r\n\r\nmysql -umf -pk4Dhl2e -h192.168.200.46 -B -D sukina -e \'SELECT * FROM access_log WHERE route_code IN (\"TOP\",\"TOTAL\",\"MEMBER\",\"NO_MEMBER\") ORDER BY date ASC;\' > /tmp/sukina_access.sql\r\n\r\nãƒ†ã‚¹ãƒˆå®Œäº†\r\n\r\n-------------------------------------------------------------------------\r\nAccessLogTracking.pm\r\n\r\n> mysql -uroot -B -D sukina.jp -e \'SELECT * FROM access_log WHERE route_code NOT IN (\"TOP\",\"TOTAL\",\"MEMBER\",\"NO_MEMBER\") ORDER BY date ASC;\' > sukina_access_tr.tsv\r\n> perl phoenix/script/runner.pl sukina.jp Temp::Import::AccessLogTracking --file=./20071113/sukina_access_tr.tsv\r\n\r\nãƒ†ã‚¹ãƒˆä¸­ï¼š\r\n\r\n=========================================================================\r\nãƒ»unsubscribe_enquete	ï¼š13æ—¥åˆ†ã¾ã§ã¯ç§»è¡Œãƒ†ã‚¹ãƒˆçµ‚äº†ã€‚\r\n\r\n> perl phoenix/script/runner.pl sukina.jp Temp::Import::UnsubscribeEnquete::Sukina --file=./sukina_unsubscribe_enquete.sql\r\n\r\n> [root@localhost] phoenix_sukina> select COUNT(*) from unsubscribe_enquete order by id DESC;\r\n> +----------+\r\n> | COUNT(*) |\r\n> +----------+\r\n> |    26699 |\r\n> +----------+\r\n> 1 row in set (0.02 sec)\r\n\r\n13æ—¥ã¾ã§ã®éŽåŽ»åˆ†ã§ï¼‘ï¼Œï¼’åˆ†ãã‚‰ã„ã€‚ï¼ˆãƒ†ã‚¹ãƒˆç’°å¢ƒã§ï¼‰\r\n\r\nFIXME:\r\n	ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®éŽåŽ»åˆ†ã‚’è¦‹ã‚‹ã‚„ã¤ãŒç„¡ã‘ã‚Œã°è¿½åŠ ã™ã‚‹ã€‚\r\n	çµè«–ã¨ã—ã¦ãªã„ã®ã§è¿½åŠ ã™ã‚‹ã€‚\r\n\r\n=========================================================================\r\nãƒ»down_log\r\n\r\nJukeBox::Script::Maintenance::Import::ContentUseLog\r\n\r\n=========================================================================\r\nãƒ»sample_log\r\n\r\nJukeBox::Script::Maintenance::Import::CheckSample\r\nJukeBox::Script::Maintenance::Import::ContentUseLogFromSample\r\n\r\n\r\n==========================================================================\r\nãƒ»feature\r\n\r\nSukinaã®ç‰¹æ®Šã®æ§‹é€ ã¯ã€\r\n\r\n./runner.pl JukeBox::Script::Maintenance::Import::Feature 28(site_id) /path/to/file\r\n\r\n\r\nmysql -uroot -B -D sukina -e \'SELECT title, top_text, body, contents_uid, place FROM feature WHERE delete_fg = 0 AND place IN (\"back_num\",\"normal\",\"pickup\",\"unsubscribe\");\' > ./sukina_feature.sql\r\n\r\n JukeBox::Script::Maintenance::Import::Feature ã¯ã‚µã‚¤ãƒˆIDãŒå¿…è¦ãªã®ã§ä¸‹è¨˜\r\n\r\n> [root@localhost] juke_box> select * from site where name = \'sukina\';\r\n> +----+------------+--------+----------------+----------------------+-------------------------+-----------------------+------------+--------------+---------------------+---------------------+\r\n> | id | rid        | name   | log_table_name | client_name          | client_mail             | site_name             | cost_share | unclaimed_fg | created_on          | updated_on          |\r\n> +----+------------+--------+----------------+----------------------+-------------------------+-----------------------+------------+--------------+---------------------+---------------------+\r\n> | 11 | Ll5bEZ5q4g | sukina | sukina         | æ ªå¼ä¼šç¤¾ã‚·ãƒ³ã‚¯ã‚¦ã‚§ã‚¢ | cp-thinkware@ml.mfac.jp | å¥½ããªã ã‘â˜†JPOP189å†† |         50 |            0 | 2007-07-10 16:49:04 | 2007-08-24 12:10:39 |\r\n> +----+------------+--------+----------------+----------------------+-------------------------+-----------------------+------------+--------------+---------------------+---------------------+\r\n> 1 row in set (0.00 sec)\r\n\r\n\r\n\r\n==========================================================================\r\nãƒ»feature_artist\r\n\r\n\r\nsukinaã¯ã€€MF::Sledge::Plugin::FeatureArtistã‚’ä½¿ç”¨ã—ã¦ FeatureArtistã‚’ä½¿ã£ã¦ã„ã‚‹ã€‚\r\n\r\n\r\n> sub import {\r\n>     my $pkg  = caller;\r\n> \r\n>     no strict \'refs\';\r\n>     *{\"$pkg\\::features_artist\"  }  = \\&_features_artist;\r\n> }\r\n> \r\n> sub _features_artist {\r\n>     my ($self , $name ) = @_;\r\n> \r\n>     return  Features::Data::Site->artist_by_site_name($name) ;\r\n> }\r\n\r\n\r\n\r\n\r\n> [mf@192.168.200.102] features> desc artist;\r\n> +-----------+--------------+------+-----+-------------------+----------------+\r\n> | Field     | Type         | Null | Key | Default           | Extra          |\r\n> +-----------+--------------+------+-----+-------------------+----------------+\r\n> | id        | int(11)      |      | PRI | NULL              | auto_increment |\r\n> | rid       | varchar(10)  |      | UNI |                   |                |\r\n> | site_rid  | varchar(10)  |      |     |                   |                |\r\n> | order_num | int(11)      |      |     | 0                 |                |\r\n> | name      | varchar(255) |      | MUL |                   |                |\r\n> | delete_fg | tinyint(4)   |      |     | 0                 |                |\r\n> | timestamp | timestamp    | YES  |     | CURRENT_TIMESTAMP |                |\r\n> +-----------+--------------+------+-----+-------------------+----------------+\r\n> 7 rows in set (0.00 sec)\r\n> \r\n\r\n> [mf@192.168.200.102] features> select * from artist where site_rid = \'Mtpcfkmxov\' AND delete_fg = 0 ;\r\n> +-----+------------+------------+-----------+--------------------+-----------+---------------------+\r\n> | id  | rid        | site_rid   | order_num | name               | delete_fg | timestamp           |\r\n> +-----+------------+------------+-----------+--------------------+-----------+---------------------+\r\n> | 199 | UqoJDeiJr0 | Mtpcfkmxov |        13 | L\'Arcï½ženï½žCiel    |         0 | 2007-10-24 18:27:05 |\r\n> | 205 | 2RKPGwjxQB | Mtpcfkmxov |        10 | çŸ¢äº•ç”°çž³           |         0 | 2007-11-14 14:19:56 |\r\n> | 206 | uy6wfQvkoY | Mtpcfkmxov |         9 | ã„ãã‚‚ã®ãŒã‹ã‚Š     |         0 | 2007-11-14 14:20:19 |\r\n> | 207 | tNeNLYnMLr | Mtpcfkmxov |         8 | BUMP OF CHICKEN    |         0 | 2007-11-14 14:22:07 |\r\n> | 209 | 0AiwRu1aSi | Mtpcfkmxov |         6 | ä¼Šè—¤ç”±å¥ˆ           |         0 | 2007-11-14 14:22:15 |\r\n> | 210 | SgtrYpI2Pu | Mtpcfkmxov |         5 | Mr.Children        |         0 | 2007-11-14 14:23:07 |\r\n> | 211 | vrjw1RoZYF | Mtpcfkmxov |         4 | FUNKY MONKEY BABYS |         0 | 2007-11-14 14:23:51 |\r\n> | 212 | LnLg9LlL2L | Mtpcfkmxov |         3 | GLAY               |         0 | 2007-11-14 14:24:11 |\r\n> | 213 | 6noKaTwr1F | Mtpcfkmxov |         2 | å®‰è—¤è£•å­           |         0 | 2007-11-14 14:24:32 |\r\n> | 214 | O9NgKgx5Su | Mtpcfkmxov |         0 | NEWS               |         0 | 2007-11-14 14:24:44 |\r\n> | 215 | f3aq7FwgEV | Mtpcfkmxov |         0 | ã‚³ãƒ–ã‚¯ãƒ­           |         0 | 2007-11-14 14:25:01 |\r\n> +-----+------------+------------+-----------+--------------------+-----------+---------------------+\r\n> 11 rows in set (0.00 sec)\r\n\r\nç™»éŒ²ArtistãŒã“ã®äººãŸã¡ã§ã€ã“ã‚Œã‚’ä½¿ç”¨ã—ã¦æ¤œç´¢ã—ã¦ã‚‹ã ã‘ã ã£ãŸã€‚\r\n\r\n> [% FOR artist IN artist_list %]\r\n>     [%- IF artist.contents %]\r\n>         <a href=\"/melody/show.cgi?uid=[% artist.contents.uid | html %]\">[% artist.name | html %]</a>/\r\n>     [%- ELSE %]\r\n>         <a href=\"/melody/search.cgi?target=all&keyword=[% artist.name | html | sjis | uri %]\">[% artist.name | html %]</a>/\r\n>     [% END -%]\r\n> [% END %]\r\n\r\nãªã®ã§ã€ã“ã¡ã‚‰ã¯ç›´ã«å…¥åŠ›ã—ã¦ã‚ã’ãŸã»ã†ãŒã¯ã‚„ã„ã€‚\r\n\r\nå…¨éƒ¨ã€uta ã§JukeBoxã‹ã‚‰å…¥åŠ›ã—ãŸã®ã§ã‚³ãƒ¼ãƒ‰ã®æ–¹ã‚’å¤‰ãˆã¦ã‚ã’ã‚Œã°ã„ã‘ã‚‹ã¯ãšã€‚\r\n\r\n\r\nå…¨éƒ¨å¯¾å¿œã—ãŸã€‚\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\næœ¬æ—¥ï¼š\r\n	ãƒ»DNSã®è¨­å®šå¤‰æ›´\r\n		ãƒ»TTLã‚’600ã¸å¤‰æ›´\r\n	ãƒ»ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆæ©Ÿèƒ½ã®ä¿®æ­£ç‰ˆã‚’ã‚ã’ã‚‹\r\n		ãƒ»æœ¬ç•ªã®DBä¿®æ­£å¾Œã«UP\r\n	ãƒ»ç§»è¡Œã®å¿…è¦ã®ã‚ã‚‹ãƒ†ãƒ¼ãƒ–ãƒ«ãƒ‡ãƒ¼ã‚¿ã‚’ç§»è¡Œã•ã›ã‚‹\r\n		ï¼šSukinaè‡ªä½“ãŒãƒ¡ãƒ³ãƒãƒ¼ã‚‚ã‚¢ã‚¯ã‚»ã‚¹ã‚‚ãã‚Œã»ã©ç„¡ã„ç‚ºã€ç¾çŠ¶ã€Scriptã‚ã‚‹éƒ¨åˆ†ã¯å¯¾å¿œæ¸ˆã¿ã§ã™ã€‚ã€‚\r\n		ãƒ»member		ï¼š13æ—¥åˆ†ã¾ã§ãƒ†ã‚¹ãƒˆæ¸ˆã¿ç©ºã®DBã«ã„ã‚Œã¦ã‚ã‚‹ã®ã§ãã®ã¾ã¾çªã£è¾¼ã‚ã°OKã€‚\r\n		ãƒ»access_log		ï¼š13æ—¥åˆ†ã¾ã§ã¯AccessLogã«çªã£è¾¼ã‚“ã§ã‚ã‚‹ã€‚ãƒ†ã‚¹ãƒˆã—ãŸæ„Ÿã˜ã¯ãã‚Œã»ã©æŽ›ã‹ã£ã¦ãªã„ã®ã§å¤§ä¸ˆå¤«ã€‚\r\n		ãƒ»down_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»sample_log		ï¼šç§»è¡ŒScriptã«ç„¡ã‹ã£ãŸã®ã§ã™ãŒã€ã“ã‚Œã²ã‚‡ã£ã¨ã—ã¦ã‚‚ã†ã„ã‚‰ãªã„ï¼Ÿ\r\n		ãƒ»unsubscribe_enquete	ï¼š13æ—¥åˆ†ã¾ã§ã¯ç§»è¡Œãƒ†ã‚¹ãƒˆçµ‚äº†ã€‚\r\n	ãƒ»æœ¬ç•ªç’°å¢ƒè¨­å®š\r\n		ãƒ»previewã¨åŒæ™‚ã«æœ¬ç•ªã¸ç’°å¢ƒã‚’æ§‹ç¯‰ã™ã‚‹ã€‚\r\n		ãƒ»ã‚¢ã‚¯ã‚»ã‚¹è§£æžç³»ãŒå‹•ã‹ãªã„ã‚ˆã†ã«sukina.jpã ã‘å›žé¿ã•ã›ã‚‹ã€‚\r\n		ãƒ»ç´°ã‹ã„æ©Ÿèƒ½ã®ç¢ºèªã¨ä¿®æ­£ã‚’è¡Œã†ã€‚\r\n	ãƒ»\r\n=====================================================================================\r\n19æ—¥ï¼š	\r\n	ãƒ»ç§»è¡Œãƒ†ãƒ¼ãƒ–ãƒ«ã®å·®åˆ†ã‚’çªã£è¾¼ã‚€\r\n		ãƒ»ï¼‘ï¼”æ—¥ã‹ã‚‰18æ—¥ã¾ã§ã®åˆ†ã‚’ç§»è¡Œã€‚ï¼ˆã“ã®æ™‚ç‚¹ã§ã™ã§ã«æ–¹æ³•ã¯ç¢ºç«‹ã—ã¦ã„ã‚‹ç‚ºï¼‰\r\n	ãƒ»DNSè¨­å®š\r\n		ãƒ»Perlbalã¸å‘ã‘ã‚‹\r\n			ãƒ»Perlbalã‹ã‚‰Poundã¸å‘ã‘ã‚‹\r\n	ãƒ»Sukinaã§ä½¿ç”¨ã—ã¦ã„ã‚‹ç‰¹é›†ã®ãƒªã‚¹ãƒˆã‚’ä½œã£ã¦å–¶æ¥­ï¼ˆä¹…ç•™ç±³ã•ã‚“ï¼Ÿï¼‰ã¸æŠ•ã’ã¦ç‰¹é›†ä½œã£ã¦ã‚‚ã‚‰ã†ã€‚\r\n		ãƒ»Scriptã§çªã£è¾¼ã‚“ã ã»ã†ãŒæ—©ã‘ã‚Œã°Scriptã§çªã£è¾¼ã‚€ã€‚\r\n=====================================================================================\r\nå½“æ—¥ï¼š\r\n	ãƒ»æ®‹ã‚Šã®ãƒ‡ãƒ¼ã‚¿ã‚’ä¸€æ‹¬ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n		ãƒ»ï¼’ï¼æ—¥ã®åœæ­¢åˆ†ã¾ã§ã®ãƒ‡ãƒ¼ã‚¿ã‚’ã‚¤ãƒ³ãƒãƒ¼ãƒˆ\r\n	ãƒ»ç¢ºèªãƒ•ã‚§ãƒ¼ã‚º\r\n\r\nâ– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– â– \r\nç¾åœ¨å®Ÿè¡Œä¸­ã®ãƒ—ãƒ­ã‚°ãƒ©ãƒ ã€‚\r\n\r\nnice -19 ã«ã—ã¦ã‚ã‚‹ã‹ã‚‰å¤§ä¸ˆå¤«ãªã¯ãšã€‚\r\n\r\necho \"now Temp::Import::AccessLog\"\r\nnice -n19 /usr/bin/perl/usr/local/mf/phoenix/script/runner.pl sukina.jp Temp::Import::AccessLog --file=./20071113/sukina_access.sql\r\n\r\necho \"now Temp::Import::AccessLogTracking\"\r\nnice -n19 /usr/bin/perl/usr/local/mf/phoenix/script/runner.pl sukina.jp Temp::Import::AccessLogTracking --file=./20071113/sukina_access_tr.tsv\r\n\r\n\r\n\r\n ','2007-11-15 23:31:25','2007-11-15 14:49:46'),(172,'BCEJpA8qmZ','Sukinaã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãƒ†ãƒ¼ãƒ–ãƒ«ã‚ã‚‹ãŸãƒ¼ã¶ã‚“','works','\r\nALTER æ–‡ã¯ã“ã‚“ãªæ„Ÿã˜ã€‚\r\n\r\n>|sql|\r\nALTER TABLE unsubscribe_enquete ADD mobile_id       VARCHAR(255) AFTER member_id;\r\nALTER TABLE unsubscribe_enquete ADD best_genre      text         AFTER  bad_genres;\r\nALTER TABLE unsubscribe_enquete ADD sex             varchar(6)   AFTER comment;\r\nALTER TABLE unsubscribe_enquete ADD age             INT UNSIGNED AFTER sex;\r\nALTER TABLE unsubscribe_enquete ADD prefecture_id   INT UNSIGNED AFTER age;\r\n||<\r\n\r\n\r\n\r\n>|perl|\r\n| phoenix_sukina         |\r\n\r\n\r\n__END__\r\n| phoenix_decobit        |\r\n| phoenix_hitrank        |\r\n| phoenix_decobo         |\r\n| phoenix_decogets       |\r\n| phoenix_decolove       |\r\n| phoenix_decorin        |\r\n| phoenix_decotan        |\r\n| phoenix_dekomail_happy |\r\n| phoenix_dekomail_love  |\r\n| phoenix_meloking       |\r\n||<\r\n  ','2007-11-15 23:51:46','2007-11-17 15:12:14'),(173,'ybSJpi8baS','bug fixed','bug','ã“ã®ãƒã‚°ã®æ„å‘³ãŒã‚ˆã†ã‚„ãã‚ã‹ã£ãŸã€‚\r\n\r\n\r\n>|perl|\r\nUse of uninitialized value in string eq at /usr/local/share/perl/5.8.8/HTML/TagCloud/Extended.pm line 219.\r\n||<','2007-11-16 12:26:56','2007-11-16 03:26:56'),(174,'CBTFQfjDlA','Hatenaã¸VimColoré©ç”¨','ãƒã‚¿','* [perl] [vimcolor] [hatena]\r\n\r\nç”¨äº‹ã®é–“ã«ï¼‘æ™‚é–“ãã‚‰ã„é–‹ã„ãŸã‹ã‚‰ã™ã“ã—ã‚¤ã‚¸ãƒƒã‚¿ã€‚\r\nsupre_preã« vim_colorã‚’ã‚„ã£ã¦ã‚„ã‚ŠãŸã‹ã£ãŸã€‚ãƒ¡ãƒ¢ã€‚\r\n\r\n>|perl|\r\n  1 package Hoge::Hatena;\r\n  2 use strict;\r\n  3 use warnings;\r\n  4 use base q/Text::Hatena/;\r\n  5 \r\n  6 use Text::VimColor;\r\n  7\r\n  8 \r\n  9 sub super_pre {\r\n 10     my $class = shift;\r\n 11     my $items = shift->{items};\r\n 12     my $filter = $1 || \'\'; # todo\r\n 13     my $texts = $class->expand($items->[1]);\r\n 14     my $super_pre = $items->[0];\r\n 15\r\n 16     if( $super_pre =~ m{>\\|([^\\n]+?)\\|}msg ) {\r\n 17         my $syntax = Text::VimColor->new(string => $texts, filetype => $1);\r\n 18         $texts     = $syntax->html;\r\n 19     }\r\n 20\r\n 21     return \"<pre>\\n$texts</pre>\\n\";\r\n 22 }\r\n 231; \r\n||<\r\n\r\n','2007-11-16 13:39:37','2007-11-17 15:07:28'),(175,'jDFsXUs5MC','Catalystã‚’ä½¿ã£ã¦ä½œã‚‰ã‚ŒãŸã‚ªãƒ¼ãƒ—ãƒ³ã‚½ãƒ¼ã‚¹ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢','perl','\r\nã“ã‚“ãªã«ã‚ã‚‹ã‚‰ã—ã„ã€‚å¾Œã§è¦—ã„ã¦å‚è€ƒã«ã™ã‚‹ã€‚\r\n\r\n- Agave (software) ï¼ˆãƒ–ãƒ­ã‚°ï¼‰\r\n- Angerwhale ï¼ˆãƒ–ãƒ­ã‚°ï¼‰ Trac Site\r\n- Devel::ebug ï¼ˆPerlã®ãƒ‡ãƒãƒƒã‚¬ï¼‰ CPANã®ã‚µã‚¤ãƒˆ\r\n- Handel (software) (commerce framework) ã‚µã‚¤ãƒˆ\r\n- Meios\r\n- MojoMojo ï¼ˆã‚¦ã‚£ã‚­ï¼‰\r\n- Sosa (software)\r\n\r\n','2007-11-17 23:51:37','2007-11-17 14:51:37'),(177,'7a6r1MFdbk','ã—ã—ã‚ƒã‚‚FAQ','sixamo.rb','* ä¸€å®šé‡å…¥åŠ›ãŒãŸã¾ã£ãŸã¨åˆ¤æ–­ã™ã‚‹å ´æ‰€ã¯ã©ã“ã§ã™ã‹ã€‚\r\n\r\nã—ã—ã‚ƒã‚‚ã¯ã€learnãƒ¡ã‚½ãƒƒãƒ‰ã§å­¦ç¿’ã—ã¾ã™ã€‚\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ãŒå‘¼ã³å‡ºã•ã‚Œã¦ã„ã‚‹å ´æ‰€ã‚’èª¿ã¹ã‚‹ã¨å¤§ä½“åˆ†ã‹ã‚Šã¾ã™ã€‚\r\n\r\n** Dictionary.learn_from_text\r\n\r\nlearn_from_textã®ä»¥ä¸‹ã®å ´æ‰€ã§ãã®åˆ¤æ–­ã‚’è¡Œã£ã¦ã„ã¾ã™ã€‚@buf_prevã«ã¯\r\n<b>ã—ã—ã‚ƒã‚‚ãŒç¾åœ¨æ³¨ç›®ã—ã¦ã„ã‚‹text ã®æ•°è¡Œ</b>ãŒå…¥ã£ã¦ã„ã¾ã™ã€‚\r\nã“ã¡ã‚‰ã¯ã€$self->{line_num}ã‚’å…ƒã«$self->{text}ã‹ã‚‰å‘¼ã³å‡ºã•ã‚Œã¦ã„ã¦ã€\r\nä¸€å®šé‡ã®è“„ç©ãŒ $self->{text}ã«ç„¡ã‘ã‚Œã°å­¦ç¿’ã¯èµ·ã“ã‚Šã¾ã›ã‚“ã€‚\r\n\r\n\r\n>|perl|\r\nif( scalar( @buf_prev ) > 0 ) {\r\n    $self->learn(  [ (@buf_prev , @buf) ] , $self->{line_num} );\r\n    $modified = 1;\r\n\r\n    $self->{line_num} += scalar( @buf_prev );\r\n}\r\n||<\r\n\r\nçŸ¥ã‚ŠãŸã„ã§ã‚ã‚ã†ã“ã¨ã‚’åˆ—æŒ™\r\n=============================================================================================\r\n* ã—ã—ã‚ƒã‚‚ã¨ã¯ã©ã†ã„ã†ã‚‚ã®ã§ã‚ã‚‹ã‹ã€‚\r\n\r\nã—ã—ã‚ƒã‚‚ã¨ã¯ã€ã”å­˜çŸ¥ã®ã¨ãŠã‚Šruby ã§ã‹ã‹ã‚ŒãŸäººå·¥ç„¡èƒ½ã§ã™ã€‚éžå¸¸ã«ç«¯çš„ã«ã—ã—ã‚ƒã‚‚ã®ç‰¹å¾´ã‚’èª¬æ˜Žã„ãŸã—ã¾ã™ã¨ã€\r\nãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã‚’ä½¿ç”¨ã—ãŸæ–‡è„ˆä¾å­˜åž‹ã®äººå·¥ç„¡èƒ½ã§ã™ã€‚Ngramã¨ãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã‚’ä½¿ç”¨ã—ãŸå‰²åˆãƒãƒ”ãƒ¥ãƒ©ãƒ¼ãªã‚¿ã‚¤ãƒ—ãªã®\r\nã§ã™ãŒå®Ÿéš›ã«ã¯è¨€èªžå‡¦ç†ç­‰ã®æ€æƒ³ã‚„çŸ¥è­˜ã®ãƒãƒƒã‚¯ãƒœãƒ¼ãƒ³ã¨ã—ã¦ã‚‹ç‚¹ã¨ãƒ‡ãƒ¼ã‚¿æ§‹é€ ãŒé¢å€’ãªæ§‹é€ ã«ãªã£ã¦ã„ã‚‹ãŸã‚åˆ†ã‹ã‚Šã¥ã‚‰ããªã£ã¦ã„ã¾ã™ã€‚\r\nPerlã«ç§»æ¤ã™ã‚‹éš›ã«æœ€åˆã¯ãã‚‚ãã‚‚å‡¦ç†ãŒä½•ã‚’ã‚„ã£ã¦ã„ã‚‹ã‹ãŒã‚ã‹ã‚‰ãªãã¦è‹¦åŠ´ã—ã¾ã—ãŸã€‚\r\n\r\n\r\n- Ngram\r\n	: æ—¥æœ¬èªžã‚„è‹±èªžãªã©ã®è‡ªç„¶è¨€èªžã§è¨˜è¿°ã•ã‚ŒãŸæ–‡ç« ã®ç‰¹å¾´ã‚’å®šé‡çš„ã«æŠŠæ¡ã™ã‚‹ãŸã‚ã«é–‹ç™ºã•ã‚ŒãŸè§£æžæ‰‹æ³•ã€‚\r\n	åŸºæœ¬çš„ãªè€ƒãˆæ–¹ã¯ã€éžå¸¸ã«ç´ æœ´ã§ã€ã‚ã‚‹æ–‡ç« ã®ä¸­ã«ã©ã‚“ãªæ–‡å­—ã®ä¸¦ã³ãŒä½•å›žå‡ºç¾ã—ãŸã‹ã‚’æ•°ãˆã‚‹ã¨ã„ã†ã‚‚ã®ã€‚\r\n\r\n- ãƒžãƒ«ã‚³ãƒ•é€£éŽ–\r\n	ï¼šã‚ã‚‹å‡ºæ¥äº‹ãŒã„ã¤ã§ã‚‚ãã®ç›´è¿‘ã®å‡ºæ¥äº‹ã®ã¿ã«å½±éŸ¿ã‚’å—ã‘ã¦ç¢ºçŽ‡çš„ã«ç”Ÿã˜ã‚‹ã¨ã„ã†ã“ã¨ã€‚ãŸã¨ãˆã°ã€ã™ã”ã‚ãã‚’ä¾‹ã«å–ã‚‹ã¨\r\n	ã‚ã‚‹ã¾ã™ç›®ã«ã¨ã¾ã£ã¦ã„ã‚‹å ´åˆã€ã•ã„ã“ã‚ã‚’æŒ¯ã£ã¦æ¬¡ã«åˆ°é”ã§ãã‚‹ã¾ã™ç›®ã¯ã€ã¨ã¾ã£ã¦ã„ã‚‹ã¾ã™ç›®ã®ã™ãéš£ã®ã¾ã™ç›®ã‹ã‚‰é€£ç¶š\r\n	ã—ãŸï¼–ãƒžã‚¹ã®ã©ã“ã‹ã«ãªã‚Šã¾ã™ã€‚ã¤ã¾ã‚Šã€å½±éŸ¿ã‚’å—ã‘ã‚‹ã®ã¯ä»Šæ­¢ã¾ã£ã¦ã„ã‚‹ã¾ã™ç›®ã ã‘ã«å¯„ã‚Šã¾ã™ã€‚å‰ã«ã©ã“ã«å±…ãŸã‹ã¯å½±éŸ¿ã‚’å—ã‘ã¾ã›ã‚“ã€‚\r\n	ã“ã®å ´åˆã€ã“ã¾ã®ç§»å‹•ã¯ãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã«æ…•ã£ã¦ã„ã‚‹ã¨ã„ã„ã¾ã™ã€‚\r\n\r\nNgramã§è§£æžã—ãŸã‚‚ã®ã‚’ãƒžãƒ«ã‚³ãƒ•é€£éŽ–ã«å¾“ã£ã¦é€£çµã™ã‚‹\r\n\r\nã—ã—ã‚ƒã‚‚ã®ã™ã”ã„ã¨ã“ã‚ã¯ã€æ™®é€šã®äººå·¥ç„¡èƒ½ã¯å½¢æ…‹ç´ è§£æžç­‰ã‚’è¡Œã£ã¦ã‹ã‚‰å‡¦ç†ã‚’è¡Œã†ã®ã§ã™ãŒã€ä¸€åˆ‡ã‚„ã£ã¦ã¾ã›ã‚“ã€‚\r\nç´”ç²‹ã«ä¸Šè¨˜ã®ç†è«–ã‚’ãƒ™ãƒ¼ã‚¹ã«ã—ãŸå¼ã¸æ–‡å­—åˆ—ã‚’å…¥åŠ›ã—ã¦æ±‚ã‚ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\n=============================================================================================\r\n* æ§‹é€ ã¯ã©ã†ãªã£ã¦ã„ã‚‹ã®ã‹\r\n\r\nã—ã—ã‚ƒã‚‚ã¯ã€ã€Œsixamo.dicã€ã¨ã€Œsixamo.txtã€ã¨ã„ã†ï¼’ã¤ã®ãƒ•ã‚¡ã‚¤ãƒ«ã§ãƒ‡ãƒ¼ã‚¿ã‚’ç®¡ç†ã—ã¦ã„ã¾ã™ã€‚\r\n\r\n\r\nã€Žsixamo.dicã€\r\n\r\n>||\r\nline_num: 48\r\n\r\nã¦ã™ã¨  37  206 1,12,54,55,56,60,63,65,69,71,76\r\nã»ã’    41  178 8,41,42,47,50,57,67,77,78,79,82\r\nã‚ã‚ã‚ã‚    6   83  29,49,52,64,83\r\ntest    10  100 9,17,18,22,23\r\nã¬ã‚    1   28  14,80,90\r\nã¯ã‚    0   22  38,85\r\nã„ãŸã„  0   21  26,87\r\naaa 1   40  10,19\r\nã“ã‚“    1   40  2,36\r\nãŠãƒ¼ã„  1   40  43,46\r\nã©ã†ã”  1   13  81,82\r\nãªã‚“ã   1   30  70,75\r\nã†ã”ã‹ã—ã¦  1   29  73,74\r\nãªã‚“ã§ã‚„ã­ã‚“    1   40  37,39\r\nã’ã‚“    0   20  0\r\nï½“ï½„    1   40  30\r\nãˆãˆãˆ  1   40  4\r\n||<\r\n\r\n\r\nã€Žsixamo.txtã€\r\n\r\n>||\r\nã’ã‚“ãã§ã™ã‹ï¼Ÿ\r\nã¦ã™ã¨ã ã‚ˆ\r\nã“ã‚“ãªã‚“ã§ã„ã‘ã‚‹ã®ã‹ï¼Ÿ\r\nOhYear\r\nãˆãˆãˆãˆãˆãˆãˆ\r\nãŠã®ã‚Œ\r\næ”¯ç¤¾ã‚‚ã®ãã›ã«\r\nä»Šç•œç”Ÿ\r\nã»ã’\r\ntest\r\naaa\r\nä½•ã§ã‚„å¹´\r\nã¦ã™ã¨\r\nãªã‚“ã§ã™ã¨\r\nã¬ã‚\r\nã‚‚ã†ã‚„\r\nã€€\r\ntest\r\ntest\r\naaa\r\nã¸ãˆ\r\nã‚€ããƒ¼\r\ntest\r\ntest\r\nã“ã‚ŒãŒè‹¥ã•ã‹\r\nã‚ã‚\r\n||<\r\n\r\n\r\n','2007-11-19 05:52:07','2007-11-18 23:08:45'),(179,'CBAjO346X0','æ¬¡å›žç™ºè¡¨','sixamo.rb','æ¬¡å›žã®ç™ºè¡¨ã¯ã€ã€Œæ–‡ç« ã‚’ç”Ÿæˆã—ã¦ã„ã‚‹æ‰€ã€‚ã€\r\n\r\n- ã‚³ãƒ¼ãƒ‰\r\n- ã‚¯ãƒ©ã‚¹å›³\r\n\r\nãŒã¤ã„ã¦ã„ã‚Œã°ã‚ˆã„ã€‚\r\n\r\næ¯Žæ—¥ã¡ã¾ã¡ã¾ã¨ã‚³ã‚³ã«æ›¸ãè¨˜ãã†ã€‚','2007-11-19 19:12:15','2007-11-19 10:12:15'),(180,'uiMEr6P4ym','DBICã§ sql ã‚’åãã‚„ã¤','perl','\r\n>|svn|\r\n[t2 atsushi@gj054]$ svn diff                                                                       [/home/atsushi/project/CPAN/lib/DBIx/Class] 07-11-20 14:14\r\nIndex: Storage/DBI.pm\r\n===================================================================\r\n--- Storage/DBI.pm      (revision 24823)\r\n+++ Storage/DBI.pm      (working copy)\r\n@@ -867,8 +867,14 @@\r\n   my ($sql, $bind) = $self->_prep_for_execute($op, $extra_bind, $ident, \\@args);\r\n\r\n   if ($self->debug) {\r\n-      my @debug_bind =\r\n-        map { defined ($_ && $_->[1]) ? qq{\'$_->[1]\'} : q{\'NULL\'} } @$bind;\r\n+    my @debug_bind;\r\n+      for my $col (@{$bind}) {\r\n+        if( scalar(@{$col}) == 1 ) {\r\n+            push @debug_bind , q{\'NULL\'};\r\n+        } else {\r\n+            push @debug_bind , join(\', \', @{$col}[1..scalar(@{$col})-1]);\r\n+        }\r\n+      }\r\n       $self->debugobj->query_start($sql, @debug_bind);\r\n   }\r\n||<','2007-11-20 14:16:19','2007-11-20 05:16:19'),(181,'FNW7Ao0yqF','access_routeã®å‡¦ç†','works','\r\n>|perl|\r\n[yamanaka@gj053.mfac.jp]$ mysql -umf -pk4Dhl2e -h192.168.200.46 -B -D sukina -e \'SELECT * FROM access_log WHERE route_code = \'TOP\' ORDER BY date DESC;\' > route_code.sql\r\nsukina.jp Temp::Import::AccessLogPVTOP --file=/home/yamanaka/route_code.sql\r\n||<\r\n\r\n\r\n','2007-11-20 23:40:08','2007-11-20 14:40:08'),(182,'STokexgBaR','Phoenixç§»è¡Œã®æ‰‹é †','works','* èª¿æŸ»\r\n\r\n- ftp\r\n- database\r\n- script\r\n\r\n** ãƒã‚¤ãƒ³ãƒˆ\r\n\r\n** ftp\r\n\r\n192.168.200.25ã®æ–°FTPã‚µãƒ¼ãƒãƒ¼ã¸ç§»è¡Œã—ã¦ã„ãªã„å ´åˆã«ã¯ã“ã¡ã‚‰ã¸ç§»ã‚‹ã‚ˆã†ã«\r\nã™ã‚‹ã€‚\r\n\r\n*** database\r\n\r\né€šå¸¸ã®ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨é•ã†ã‚‚ã®ãŒãªã„ã‹ã©ã†ã‹ã‚’ãƒã‚§ãƒƒã‚¯ã‚’è¡Œã†ã€‚\r\né•ã†ã‚‚ã®ãŒã‚ã£ãŸå ´åˆã¯ã€ãã¡ã‚‰ç”¨ã®ç§»è¡Œç”¨Scriptã‚’è¿½åŠ ã™ã‚‹ã€‚\r\n\r\n*** script\r\n\r\nkccsç­‰ã®æ›´æ–°\r\n\r\n* æ§‹ç¯‰\r\n\r\n- Phoenixã¸æ§‹ç¯‰\r\n- dns\r\n\r\n** ãƒã‚¤ãƒ³ãƒˆ\r\n\r\n*** Phoenixã¸æ§‹ç¯‰\r\n\r\nãªã‚‹ã¹ãæ—©ã‚ã«æ§‹ç¯‰ã—ã¦ã€å–¶æ¥­ã®æ–¹ã«å”åŠ›ã—ã¦ã‚‚ã‚‰ã„ç´°ã‹ã„ç‚¹ã‚’æ´—ã„å‡ºã™ã“ã¨ã€‚\r\n\r\n*** dns\r\n\r\nè¨­å®šã®ã‚¿ã‚¤ãƒ ã‚¹ãƒ‘ãƒ³ã‚’ 600 ã«å¤‰ãˆã‚‹ã€‚\r\næ³¨æ„ã™ã¹ãç‚¹ã¯ã€img.sukina.jp ã®ã‚ˆã†ã« img. ã®è¨­å®šã‚’è¿½åŠ ã™ã‚‹ã“ã¨ã¯å¿˜ã‚Œãªã„ã“ã¨ã€‚\r\næ„å¤–ã¨å¿˜ã‚ŒãŒã¡ãªã®ã§ã€ã¯ã¾ã‚Šã¾ã™ã€‚\r\n\r\n\r\n* ç§»è¡Œ\r\n\r\n- \r\n\r\n\r\n\r\n\r\n\r\n\r\nãƒ»DNSã®è¨­å®šå¤±æ•—\r\nãƒ»\r\n\r\n\r\n* \r\n\r\n\r\n ','2007-11-21 08:36:09','2007-11-21 01:22:37'),(183,'4TEdxwAp6H','KCCSç²¾æŸ»','works','\r\n>|sql|\r\nSELECT COUNT(*) \r\nFROM member \r\nWHERE unsubscribed_on IS NULL \r\nAND DATE_FORMAT( subscribed_on, \"%Y%m%d\")  < \'20071121\';\r\n||<\r\n\r\n','2007-11-21 19:45:26','2007-11-21 10:45:26'),(184,'wBUyH7EDWD','Imodeç«¯æœ«ã®æ®‹ã‚Šæ¤œè¨Žä¸­','works','\r\n>||\r\nãƒ¢ãƒˆãƒ­ãƒ¼ãƒ©ã§å¯¾å¿œã™ã‚‹ã‹ã©ã†ã‹ä¿ç•™\r\n\r\nM702iS  \r\nM702iG  \r\nNM850iG \r\n\r\n||<\r\n','2007-11-22 21:39:23','2007-11-22 12:39:23'),(185,'MgpRgmLxag','ã‚¨ã‚¯ã‚»ãƒ«ã«ä¹—ã£ã¦ã„ãªã„Vodaã®ç«¯æœ«','works','>||\r\nV201SH\r\nV702NK2\r\n\r\n815T\r\nV201SH\r\n||<\r\n','2007-11-22 22:16:39','2007-11-22 13:16:40'),(186,'FimSlx2WDu','Email::Japaneseå¯¾å¿œ','perl','ã†ãƒ¼ã‚“ã€ã“ã‚Œã€utf8ã ã¨ã¾ãšã„ã‚“ã˜ã‚ƒ\r\n\r\n\r\n>|perl|\r\n    use Catalyst qw/Email::Japanese/;\r\n    \r\n    # config base parameters\r\n    __PACKAGE__->config(\r\n        email => {\r\n            Template => \'email.tt\',\r\n            From => \'typester@cpan.org\',\r\n        }\r\n    );\r\n    \r\n    # and later in your controller\r\n    $c->email(\r\n        To => \'example@example.com\',\r\n        Subject => \'Hi!\',\r\n    );\r\n||<','2007-11-25 11:33:00','2007-11-25 02:33:00'),(188,'XhyFVQ4yMw','QRCodeã‚’è¿½åŠ ã—ãŸã„','perl','Ajaxã‚’ä½¿ç”¨ã—ã¦QRCodeã‚’å‡ºã›ã‚‹ã‚ˆã†ã«ä¿®æ­£ã—ãŸæ–¹ãŒã„ã„ã€‚ã‚„ã£ã±ã‚Šã‚ã‚‹ã»ã†ãŒã‚ã‚ŠãŒãŸã„ã‚ˆã­ã€‚\r\nã¨ã‚Šã‚ãˆãšã€ãªã‚“ã¨ã‹Email::Japanseã¯å‹•ãã‚ˆã†ã«ãªã£ãŸã‘ã©ã€å¾®å¦™ã ã‚ˆã­ã€‚\r\n\r\næ¬²ã—ã„ã‚‚ã®ã¯ã€\r\n\r\n- QRCode\r\n- FillinFormã‚’å‹•ã‹ã™\r\n- å†™çœŸã‚’è¿”ã™ã‚‚ã®\r\n\r\ndiffã®ãƒ¡ãƒ¼ãƒ«ãŒæ¥ã‚‹ã‚ˆã†ã«ãªã£ãŸã€‚\r\n\r\n>|perl|\r\n  # detailed list\r\n  my $diff = String::Diff::diff_fully(\'this is Perl\', \'this is Ruby\');\r\n  for my $line (@{ $diff->[0] }) {\r\n      print \"$line->[0]: \'$line->[1]\'\\n\";\r\n  }\r\n  # u: \'this is \'\r\n  # -: \'Perl\'\r\n\r\n  for my $line (@{ $diff->[1] }) {\r\n      print \"$line->[0]: \'$line->[1]\'\\n\";\r\n  }\r\n  # u: \'this is \'\r\n  # +: \'Ruby\'\r\n||<','2007-11-25 12:00:57','2007-11-25 03:56:24'),(189,'1vkJej3fPT','CSSã¨JavaScriptã®å‹‰å¼·','css','CSSã®æ–¹ã¯æ§‹é€ åŒ–ã€JavaScriptã®æ–¹ã¯åŸºæœ¬çš„ãªã¨ã“ã‚ã‚’æŠ‘ãˆãªã„ã¨ã ã‚ã‹ã€‚\r\n\r\nã•ã‚ã€ã©ã†ã ã€‚\r\n\r\nã†ãƒ¼ã‚“ã€‚fasdfasdfasfdasdf\r\n\r\nãŒã‚“ã°ã‚Œasdfasdfasdfaf\r\nã„ã‘ãŸã‹ï¼Ÿ\r\nfdsfasdfafa\r\nasdfa\r\nsdfasdfa\r\n\r\n\r\nã“ã‚“ã©ã“ãã„ã£ã¦ãã‚Œã‚ˆ\r\n','2007-11-25 12:05:25','2007-11-25 05:36:00'),(190,'pQmhGkud5x','Catalyst::Plugin::FillInForm ãŒå‹•ã‹ãªã„ç†ç”±','perl','ãã‚‚ãã‚‚ã€ã‚³ãƒ¼ãƒ‰ã¨æŒ™å‹•ã‚’è¦‹ã‚Œã°ã‚ã‹ã‚‹ã®ã ã‘ã©ã€\r\n\r\nã“ã‚“ãªæ„Ÿã˜ã«ã€Œ$c->response->{body}ã€ãŒå­˜åœ¨ã—ã¦ã„ã¦ã„ã‚‹ã“ã¨ãŒå‰æã®å‡¦ç†ãªã®ã§\r\n\r\n>|perl|\r\nsub fillform {\r\n    my $c    = shift;\r\n    my $fdat = shift || $c->request->parameters;\r\n\r\n    $c->response->output(\r\n        HTML::FillInForm->new->fill(\r\n            scalarref => \\$c->response->{body},\r\n            fdat      => $fdat\r\n        )\r\n    );\r\n}\r\n||<\r\n\r\nforwardã®ã‚ã¨ã§ãªã„ã¨å‹•ã‹ãªã„ã€‚\r\n\r\n>|perl|\r\n	$c->stash->{template} = \'template/album/add.html\';\r\n	$c->forward(\'CD::V::TT\') unless $c->res->output;\r\n	$c->fillform;\r\n||<\r\n\r\n[http://blog.hide-k.net/archives/2005/09/catalystpluginf.php]','2007-11-26 00:08:16','2007-11-25 15:08:16'),(191,'WhMnZ3lUjk','èª¿æŸ»ã—ãŸã„','TODO','\r\n- å…¨æ–‡æ¤œç´¢ã‚¨ãƒ³ã‚¸ãƒ³Senna\r\n- c.req.uri_withã®æŒ™å‹•\r\n\r\n\r\nå…¨æ–‡æ¤œç´¢ã‚¨ãƒ³ã‚¸ãƒ³ã¯ã€ãƒ¡ãƒ¢ã®æ¤œç´¢ã«ä½¿ç”¨ã™ã‚‹ã€‚\r\npagerãŒä¾¿åˆ©ã«ãªã‚‹ã¯ãšãªã®ã§ã€ä¸‹è¨˜ã‚’èª¿æŸ»\r\n\r\n\r\n[http://search.cpan.org/~mramberg/Catalyst-Runtime-5.7011/lib/Catalyst/Request.pm]\r\n','2007-11-26 14:23:48','2007-11-26 05:23:48'),(192,'cYRqmmVbXk','Sukinaã‚’ãƒªã‚µã‚¤ã‚¯ãƒ«ã¸','works','\r\nç§»è¡Œç”¨ ã‚³ãƒžãƒ³ãƒ‰\r\n\r\n>|svn|\r\nsvn mv -m \"Sukinaã¯Phoenixã¸ç§»è¡Œã—ã¾ã—ãŸã€‚\" file:///var/SVNROOT/Sukina file:///var/SVNROOT/recycle/Sukina\r\n||<','2007-11-26 14:35:26','2007-11-26 05:35:26'),(193,'IyQEPDeAf0','MySQL æ–‡å­—åŒ–ã‘','mysql','MySQLã§dumpã—ã¦ã¶ã£ã“ã‚€æ™‚ã¯ã€default-character-setã‚’æŒ‡å®šã—ãªã„ã¨æ–‡å­—åŒ–ã‘ã™ã‚‹ã‚ˆ\r\n\r\n>|sql|\r\n--default-character-set=ujis\r\n||<','2007-11-26 15:35:32','2007-11-26 06:35:32'),(194,'476ciO3sUm','ãƒªãƒ“ã‚¸ãƒ§ãƒ³ã®æˆ»ã—æ–¹','subversion','\r\n\r\nè©²å½“ãƒ•ã‚¡ã‚¤ãƒ« or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªãŒã©ã®ãƒªãƒ“ã‚¸ãƒ§ãƒ³ã§å‰Šé™¤ã•ã‚ŒãŸã‹ã‚’ãƒã‚§ãƒƒã‚¯\r\n\r\n>|sh|\r\n$ svn log -v\r\n||<\r\n\r\nå‰Šé™¤ã•ã‚ŒãŸãƒªãƒ“ã‚¸ãƒ§ãƒ³ã®ä¸€ã¤å‰ã®ãƒªãƒ“ã‚¸ãƒ§ãƒ³ã‹ã‚‰ãƒ•ã‚¡ã‚¤ãƒ« or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã‚’ã‚³ãƒ”ãƒ¼\r\n\r\n>|sh|\r\n$ svn cp -r[å‰Šé™¤ã•ã‚ŒãŸãƒªãƒ“ã‚¸ãƒ§ãƒ³ - 1] [Subversionã®ãƒªãƒã‚¸ãƒˆãƒªãƒ‘ã‚¹]trunk/[ãƒ•ã‚¡ã‚¤ãƒ«å or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªå] .\r\n||<\r\n\r\nå¤‰æ›´å†…å®¹ç¢ºèª\r\n\r\n>|sh|\r\n$ svn st A  +   [ãƒ•ã‚¡ã‚¤ãƒ«å or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªå]\r\n||<\r\n\r\nã‚³ãƒ”ãƒ¼ã—ã¦æˆ»ã—ãŸãƒ•ã‚¡ã‚¤ãƒ« or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã‚’ã‚³ãƒŸãƒƒãƒˆ\r\n\r\n>|sh|\r\n$ svn ci [ãƒ•ã‚¡ã‚¤ãƒ«å or ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªå]\r\n||<','2007-11-26 15:48:38','2007-11-26 06:48:38'),(195,'fVp2o01BK2','Catalystã®èµ·å‹•','perl','Catalystã®æŒ™å‹•ã¯ã€ä»¥ä¸‹ã®ã€Œhandle_requestã€ã‹ã‚‰è¿½ãˆã‚‹ã€‚\r\n\r\n>|perl|\r\n1501 sub handle_request {\r\n1502     my ( $class, @arguments ) = @_;\r\n1503\r\n1504     # Always expect worst case!\r\n1505     my $status = -1;\r\n1506     eval {\r\n1507         if ($class->debug) {\r\n1508             my $secs = time - $START || 1;\r\n1509             my $av = sprintf \'%.3f\', $COUNT / $secs;\r\n1510             my $time = localtime time;\r\n1511             $class->log->info(\"*** Request $COUNT ($av/s) [$$] [$time] ***\");\r\n1512         }\r\n1513\r\n1514         my $c = $class->prepare(@arguments);\r\n1515         $c->dispatch;\r\n1516         $status = $c->finalize;\r\n1517     };\r\n1518\r\n1519     if ( my $error = $@ ) {\r\n1520         chomp $error;\r\n1521         $class->log->error(qq/Caught exception in engine \"$error\"/);\r\n1522     }\r\n1523\r\n1524     $COUNT++;\r\n1525     $class->log->_flush() if $class->log->can(\'_flush\');\r\n1526     return $status;\r\n1527 }\r\n||<\r\n\r\nç‰¹ã«ã€ä»¥ä¸‹ã®prepare,dispatch, finalizeã¯é‡è¦ã€‚\r\n\r\n>|perl|\r\n1514         my $c = $class->prepare(@arguments);\r\n1515         $c->dispatch;\r\n1516         $status = $c->finalize;\r\n||<\r\n\r\n\r\n\r\n','2007-11-26 23:01:20','2007-11-26 14:01:20'),(196,'l2Ezfpje6M','svn ã®å¤‰æ›´å±¥æ­´å‚ç…§æ–¹æ³•','subversion','\r\nã“ã†ã™ã‚‹ã¨èª°ãŒã©ã“ã‚’ä¿®æ­£ã—ãŸã‹ãŒä¸€ç™ºã§ã‚ã‹ã‚‹ã€‚\r\n\r\n>|sh|\r\nsvn annotate file_name\r\n||<','2007-11-27 15:07:42','2007-11-27 06:07:42'),(197,'NiLBOcH89G','melpã®ã‚¹ã‚¯ãƒªãƒ—ãƒˆ','works','dieã®ãƒ¡ãƒƒã‚»ãƒ¼ã‚¸ãŒç«¯çš„éŽãŽã¦åˆ†ã‹ã‚‰ãªã„ã®ã§ä¿®æ­£ã‚’åŠ ãˆã‚‹\r\n\r\n\r\n>|perl|\r\n      1 #!/usr/bin/perl\r\n      2\r\n      3 use strict;\r\n      4 use lib qw(/usr/local/mf/site_perl);\r\n      5\r\n      6 use MLP::Data::Contents;\r\n      7 use MLP::Data::File;\r\n      8 use MLP::Data::Output;\r\n      9\r\n     10 my $output_dir = \'/usr/local/mf/mld\';\r\n     11\r\n     12 my @uid = ();\r\n     13 for my $arg ( @ARGV ){\r\n     14     if( $arg =~ m|^(\\d+)-(\\d+)$| ){\r\n     15         push @uid,($1 .. $2);\r\n     16     }elsif( $arg =~ m|^\\d+$| ){\r\n     17         push @uid,$arg;\r\n     18     }else{\r\n     19         die;\r\n     20     }\r\n     21 }\r\n     22 #æ›´æ–°ã™ã‚‹æ¥½æ›²ãŒæŒ‡å®šã•ã‚Œãšã«æ›´æ–°ãƒœã‚¿ãƒ³ã‚’æŠ¼ã—ãŸã‚‰ã§ã‚‹\r\n     23 #â†“é€šå¸¸æ›´æ–°(ãƒ¡ãƒ­é‡‘ã€ã†ãŸæ°´åœŸ)ã®å‡¦ç†ãŒã•ã‚Œã¦ã„ãŸã‚‰ã“ã“ã§dieã—ã¦ã¦ã‚‚ã‚ˆã—\r\n     24 die \"no uid @ARGV\" if @uid == 0;\r\n     25\r\n     26 my $sql = \"uid in (\" . join(\",\",@uid) . \")\";\r\n     27\r\n     28 my @contents = MLP::Data::Contents->retrieve_from_sql(\"WHERE public_fg AND type!=\'uta\' AND $sql\");\r\n     29\r\n     30 for my $contents ( @contents ){\r\n     31\r\n     32     for my $file ( MLP::Data::File->search(contents_id => $contents->uid) ){\r\n     33     my ($output) = MLP::Data::Output->search(file_id => $file->uid);\r\n     34\r\n     35     my $dir = sprintf(\'%s/%03d\',$output_dir,$contents->uid);\r\n     36     $dir .= \'V\' if $contents->type eq \'voice\';\r\n     37\r\n     38     my $filename = sprintf(\'%s/%03d_%s.%s\',\r\n     39                    $dir,$contents->uid,$file->type,\r\n     40                    $file->ext);\r\n     41     unless( -d $dir ){\r\n     42         mkdir($dir,0777) or die($!);\r\n     43     }\r\n     44\r\n     45 #   unless( -e $filename ){\r\n     46         open FILE,\">$filename\" or die($!);\r\n     47         print FILE $output->output;\r\n     48         close(FILE);\r\n     49 #   }\r\n     50     }\r\n     51\r\n     52\r\n     53 }\r\n     54\r\n     55 # phoenixã•ã‚“ãŒFTPã§ãƒ•ã‚¡ã‚¤ãƒ«ã‚’å—ã‘å–ã‚‹ãŸã‚ã‚³ãƒ”ãƒ¼\r\n     56 system(\"/usr/local/bin/rsync -auvzC -e /usr/bin/ssh /usr/local/mf/mld/ 192.168.200.8:/usr/local/mf/mld/\");\r\n     57\r\n||<','2007-11-27 18:46:43','2007-11-27 09:46:43'),(198,'oRubRE9ABy','KCCSãƒã‚§ãƒƒã‚¯ã‚¹ã‚¯ãƒªãƒ—ãƒˆ','works','>||\r\nKDDIçš„ã«é€€ä¼šã—ã¦ã„ã‚‹ãŒã€ã†ã¡ã®ãƒ‡ãƒ¼ã‚¿çš„ã«é€€ä¼šã—ã¦ã„ãªã„ä¼šå“¡ã€‚\r\n\r\n\"2H\"    \"00323\" \"40023  \"   \"07031460349242_mh.ezweb.ne.jp           \"  \"20051209\"  \"20071125\"  \"20071125115813\"\r\n\r\n\r\nSELECT * FROM member \r\nWHERE \r\n	unsubscribed_on IS NULL AND \r\n	DATE_FORMAT( subscribed_on , \"%Y%m%d\") < \'20071125\' AND \r\n	mobile_id = \'07031460349242_mh.ezweb.ne.jp\'\r\n;\r\n||<\r\n\r\n>|sql|\r\nALTER TABLE memeber ADD unsubscribed_reason varchar(255) AFTER unsubscribed_on;\r\nALTER TABLE memeber ADD unsubscribed_reason varchar(255) AFTER unsubscribed_on;\r\nALTER TABLE memeber ADD subscribed_reason   varchar(255) AFTER subscribed_on;\r\n||<','2007-11-27 20:18:01','2007-11-27 11:21:33'),(199,'GkHrlqoIEE','ç¹°ã‚Šè¿”ã—æ–‡','python','\r\n\r\n>|python|\r\n  1 for x in [\'cat\', \'window\', \'defenestrate\']:\r\n  2     print x, len(x)\r\n||<\r\n','2007-11-27 23:51:13','2007-11-27 14:51:13'),(200,'aVv8Zucuek','æ­£è¦è¡¨ç¾ã®ç½®æ›ï¼ˆé€£ç¶šæ–‡å­—ï¼‰','perl','\r\nç›´å‰ã®æ–‡å­—ã‚’ãƒžãƒƒãƒã•ã›ãŸã„å ´åˆã€\r\n\r\nã€Œ\\1ã€ã¨ã‹ã§ã—ã¦ã„ã™ã‚‹ã€‚\r\n\r\n>|perl|\r\n$name =~ s/(([^aiueo-])\\2([aiueo]))/t-$2$3/g;\r\n||<','2007-11-28 13:10:56','2007-11-28 04:10:56'),(201,'ZkPoYdOZmF','Lingua::JA::Romajiã€€ã®ã‚ã»ãªå¤‰æ›å¯¾å¿œ','tag','>||\r\nashiddoburakkucheri- at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 41.\r\nã‚ã—ã£ã©ã¶ã‚‰ at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 42.\r\n\r\nandoryu-roidoeba- at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 41.\r\nã‚ã‚“ã©ã‚Šã‚…ãƒ¼ã‚ã„ã©ãˆã°ãƒ¼ at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 42.\r\n\r\nãŠã ã‚†ã†ã˜ã†ãƒãšã¶ã£ã¡ãŠãƒ¼ã‹ãƒ¼ at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 42.\r\n[Wed Nov 28 11:27:53 2007] [error] [client 127.0.0.1] File does not exist: /home/yamanaka/apache/mf/hit_c/htdocs/favicon.ico\r\n\r\nkurisutexi-naagireraandomisshi-eriotto at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 41.\r\nãã‚Šã™ã¦ãƒãƒ¼ãªã‚ãŽã‚Œã‚‰ã‚ã‚“ã©ã¿ã£ã—ãƒ¼ãˆã‚ŠãŠ at /home/yamanaka/apache/mf/site_perl/HitC/Pages/Melody/Artist.pm line 42.\r\n\r\n\r\n> http://hit-c.jp/melody/artist/ashiddoburakkucheri-.html\r\n\r\n> http://hit-c.jp/melody/artist/andoryu-roidoeba-.html\r\n\r\n> http://hit-c.jp/melody/artist/odayuujiwizubutchio-ka-.html\r\n\r\n> http://hit-c.jp/melody/artist/kurisutexi-naagireraandomisshi-eriotto.html\r\n\r\n\r\n\r\n|  2286 | Wake Me Up Go! Go!                 | ãŠã ã‚†ã†ã˜ã†ãƒãšã¶ã£ã¡ã†ã‰ãƒ¼ã‹ãƒ¼                   |\r\n| 19751 | Black Cherry                       | ã‚ã—ã£ã©ã¶ã‚‰ã£ãã¡ã‡ã‚Šãƒ¼                           |\r\n|  3669 | Car Wash (Shark Tale Mix)          | ãã‚Šã™ã¦ãƒãƒ¼ãªã‚ãŽã‚Œã‚‰ã‚ã‚“ã©ã¿ã£ã—ãƒ¼ãˆã‚ŠãŠã£ã¨     |\r\n|  3147 | The Phamtom of The Opera(ï½µï¾ï¾Ÿï¾—åº§ã®æ€ªäºº)                         | 	                       |\r\n\r\n\r\noxtuto\r\nex\r\n\r\nashiddoburakkucheri\r\nashiddoburakt-kucheri\r\nt-\r\n||<\r\n\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nuse Lingua::JA::Romaji qw/romajitokana kanatoromaji/;\r\n\r\nmy @names = qw(\r\n    kurisutexi-naagireraandomisshi-eriotto\r\n    odayuujiwizubutchio-ka-\r\n    andoryu-roidoeba-\r\n    ashiddoburakkucheri-\r\n);\r\n\r\nfor my $name ( @names ) {\r\n    warn $name;\r\n    $name =~ s/(([^aiueo-])\\2([aiueo]))/t-$2$3/g;\r\n    warn $name;\r\n    warn romajitokana($name);\r\n}\r\n||<\r\n\r\nWebber\r\n\r\n>|sql|\r\n[mf@192.168.200.102] hit_c> select uid,title, artist, artist_kana from contents where   artist_kana LIKE \'%ãˆã°ãƒ¼%\';\r\n+-------+---------------------------+--------------------------+--------------------------------+\r\n| uid   | title                     | artist                   | artist_kana                    |\r\n+-------+---------------------------+--------------------------+--------------------------------+\r\n| 11641 | I Will Buy You A New Life | Everclear                | ãˆã°ãƒ¼ãã‚Šã‚                   |\r\n| 11859 | Father Of Mine            | Everclear                | ãˆã°ãƒ¼ãã‚Šã‚                   |\r\n| 11995 | What It\'s Like            | Everlast                 | ãˆã°ãƒ¼ã‚‰ã™ã¨                   |\r\n| 12245 | Put Your Lights On        | Santana with Everlast    | ã•ã‚“ãŸãªã†ãƒãšãˆã°ãƒ¼ã‚‰ã™ã¨     |\r\n| 12647 | AM Radio                  | Everclear                | ãˆã°ãƒ¼ãã‚Šã‚                   |\r\n| 12788 | Brown Eyed Girl           | Everclear                | ãˆã°ãƒ¼ãã‚Šã‚                   |\r\n| 13614 | Alley Oop                 | Dante And The Evergreens | ã ã‚“ã¦ã‚ã‚“ã©ã˜ãˆã°ãƒ¼ãã‚Šãƒ¼ã‚“ãš |\r\n| 15686 | Wonderful                 | Everclear                | ãˆã°ãƒ¼ãã‚Šã‚                   |\r\n+-------+---------------------------+--------------------------+--------------------------------+\r\n8 rows in set (0.09 sec)\r\n||<','2007-11-28 14:47:17','2007-11-28 05:47:17'),(202,'hnhjjuzLoc','ICO','memo','http://astrange.ithinksw.net/ico/\r\n\r\nICOã®ã‚½ãƒ¼ã‚¹ã‚³ãƒ¼ãƒ‰ã‚‚ã‚‰ãˆã‚‹ã‹ã‚‚ã—ã‚Œãªã„ã€‚','2007-11-28 16:46:20','2007-11-28 07:46:20'),(203,'KwYJKmnOdU','ã‚ã‚‹æœŸé–“ã®æ—¥ä»˜ãŒæ¬²ã—ã„ã°ã‚ã„','perl','>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nuse MF::DateTime;\r\n\r\nfor my $base_date ( map { MF::DateTime->now->subtract( days => $_ )->ymd } (1..7) ) {\r\n    warn $base_date;\r\n}\r\n||<','2007-11-30 17:00:28','2007-11-30 08:00:28'),(204,'K1KaiVbfCG','subversion ãƒªãƒ“ã‚¸ãƒ§ãƒ³æˆ»ã—','subversion','æœˆæ›œæ—¥ã«ä»¥ä¸‹ã®ãƒ‘ãƒƒãƒã§ç›´ã™ã€‚\r\n\r\n>|perl|\r\nsvn diff -r25180 | patch -p0 -R\r\n||<','2007-11-30 22:14:27','2007-11-30 13:14:27'),(205,'AXWWSLAiVi','livedoor clipã® javascript','javascript','\r\njavascriptã§æƒ…å ±ã‚’æŒã£ã¦ã“ã•ã›ã‚‹\r\n\r\n>|javascript|\r\njavascript:location.href=\'http://clip.livedoor.com/clip/add?link=\'+encodeURIComponent(location.href)+\'&title=\'+encodeURIComponent(document.title);\r\n||<','2007-12-03 14:27:39','2007-12-03 05:27:39'),(206,'4GKOMlJt63','Excelã§ 0 ãŒå›žé¿ã•ã‚Œã¦ã—ã¾ã†å•é¡Œ','excel','\r\nã“ã‚“ãªè§£æ±ºæ–¹æ³•\r\n\r\n>||\r\n16:12:50 nekokak_   > ã‚¨ã‚¯ã‚»ãƒ«ã§é–‹ãå‰æã§é ­ã«\'ã‚’ã„ã‚Œã‚‹ã¨ã‹ï¼žã—ã˜ã‚‡ã†ã•ã‚“\r\n16:13:01 yuki       > ã‚ãŸã¾ã«ã‚«ãƒ³ãƒžï¼Ÿ\r\n16:13:12 nekokak_   > ã™ã‚‹ã¨\r\n16:13:18 nekokak_   > æ–‡å­—åˆ—ã¨ã—ã¦ã‚ã¤ã‹ã£ã¦ãã‚Œã¾ã™ï¼œãˆãã›ã‚‹\r\n16:13:19 nekokak_   > ãªã®ã§\r\n16:13:22 nekokak_   > ï¼ãŒã‹ã‘ãªã„ã™\r\n16:13:41 yuki       > CSVãƒ‡ãƒ¼ã‚¿ã¨ã—ã¦ã©ã†ãªã®ã‹ãªããƒ»ãƒ»ãƒ»\r\n16:13:57 nekokak_   > ã©ã£ã¡ã«ã—ã‚ã‚¨ã‚¯ã‚»ãƒ«ã§ã—ã‹ã¤ã‹ã‚ã‚Œãªã„ã™ã‹ã‚‰ã­\r\n16:14:39 kan        > \"\"ã§å›²ã†ã ã‘ã˜ã‚ƒã ã‚ã§ã—ãŸã£ã‘ï¼Ÿ\r\n16:14:47 hiroyuki   > ãªã‚“ã‹ã€ãã†ã„ã†ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ«ã‚ã£ãŸããŒ\r\n16:14:50 yuki       > ãã‚Œã§ã„ã‘ã‚‹ã‚“ã ã£ã‘ã‹ï¼Ÿ\r\n16:15:32 nekokak_   > ãƒ€ãƒ–ãƒ«è‹¦ã‚ªãƒ¼ãƒˆã¯ã ã‚ãªã¯ãš\r\n16:16:04 kan        > \'ã‚’ä»˜ã‘ã‚‹ã¨\r\n16:16:11 kan        > \'001 ã¿ãŸã„ã«è¡¨ç¤ºã•ã‚Œã¡ã‚ƒã„ã¾ã™ã­ãˆ\r\n16:16:22 nekokak_   > ã‚ã‚Œã‚Œ\r\n16:16:28 nekokak_   > ã‚¨ã‚¯ã‚»ãƒ«ã®æŠ€ã®ã¯ãšãªã‚“ã ã‘ã©\r\n16:16:32 nekokak_   > ã‚ˆãã‚„ã£ãŸã‘ã©ãª\r\n16:16:36 nekokak_   > CSVã‹ã‚‰ã ã¨ã ã‚ãªã®ã‹ãª\r\n16:18:00 kan        > http://trendy.nikkeibp.co.jp/article/tec/excel/20040309/107674/\r\n16:18:10 kan        > ã“ã†ã‚„ã‚‹ã®ãŒä¸€ç•ªæ­£çµ±ï¼Ÿ\r\n16:18:25 nekokak_   > ã¾ã‚ãã†ã ã­\r\n16:19:00 yuki       > ã“ã‚Œãã®ã¾ã¾ã‚‚ã‚‰ã£ãŸãï½—\r\n||<\r\n','2007-12-04 16:27:29','2007-12-04 07:27:30'),(207,'ykXaoipkaQ','svn ã®ãƒãƒƒã‚¯ã‚¢ãƒƒãƒ—','subversion','\r\nã“ã‚“ãªæ„Ÿã˜ã®ã‚³ãƒžãƒ³ãƒ‰ã§ã„ã‘ã¾ã—ãŸã€‚\r\n\r\n>|svn|\r\nsvnadmin dump /usr/local/svnroot > 20071204_svn_backup\r\n||<','2007-12-04 22:57:31','2007-12-04 13:57:31'),(208,'VKfh6RePNH','ãƒ•ã‚¡ã‚¤ãƒ«ç®¡ç†ã®å¤‰æ›´','perl','ãƒ•ã‚¡ã‚¤ãƒ«ç®¡ç†ã«è‡ªå‹•ã§ typeã‚’ä»˜åŠ ã™ã‚‹æ©Ÿèƒ½ã‚’è¿½åŠ ã—ã¦ã€\r\nç”»åƒç³»ã«é–¢ã—ã¦ã¯ã€imgã‚¿ã‚°ã§å‘¼ã¹ã‚‹ã‚ˆã†ã«ä¿®æ­£ã—ãŸã„ã€‚ã‚„ã£ã±ã‚Šã€è³‡æ–™ç®¡ç†ã¯\r\nç”»åƒã‚’ã¤ã‘ãªã„ã¨é¢ç™½ããªã„ã—ã­ã€‚','2007-12-04 23:04:18','2007-12-04 14:04:18'),(209,'ch89MLu4VJ','è­°äº‹éŒ²ä½œæˆ','works','å¿…è¦ãªæ©Ÿèƒ½\r\n\r\n- è­°äº‹éŒ²\r\n-- http://oshiete1.goo.ne.jp/qa43184.html\r\n- ã‚«ãƒ¬ãƒ³ãƒ€ãƒ¼\r\n- ãƒ•ã‚¡ã‚¤ãƒ«ã‚¢ãƒƒãƒ—æ©Ÿèƒ½\r\n-- ç”»åƒ\r\n-- å‹•ç”»\r\n-- éŸ³å£°\r\n- Staffã¨ã®é€£æº\r\n- mailé€ä¿¡æ©Ÿèƒ½\r\n-- è­°äº‹éŒ²é–¢ä¿‚è€…å…¨å“¡ã«ãƒ¡ãƒ¼ãƒ«ã‚’é€ã‚‹','2007-12-05 15:42:34','2007-12-05 07:34:49'),(210,'em5t75YGV9','perlbal ssl è¨­å®š','perl','\r\nperlbalã®sslã®è¨­å®šã¯ã“ã‚“ãªæ„Ÿã˜ã€‚\r\n\r\n>|perl|\r\nCREATE SERVICE ssl\r\n    SET listen          = 0.0.0.0:443\r\n    SET role            = selector\r\n    SET plugins         = vhosts\r\n\r\n    SET enable_ssl      = on\r\n    SET ssl_key_file    = /path/to/private.pem\r\n    SET ssl_cert_file   = /path/to/cert.pem\r\n    SET ssl_cipher_list = ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\r\n\r\n    VHOST *.hiroyuki.jp = hiroyuki\r\nENABLE _ssl\r\n||<','2007-12-06 15:39:08','2007-12-06 06:39:08'),(211,'eZuP0HqBGY','ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã§è¶³ã‚Šãªã„é …ç›®ã‚’å–å¾—ã™ã‚‹ãƒãƒ¼ã‚¸ãƒ§ãƒ³ï¼ˆå»ƒæ¡ˆï¼‰','works','ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®è¶³ã‚Šãªã„é …ç›®ã‚’å–å¾—ã™ã‚‹ãƒãƒ¼ã‚¸ãƒ§ãƒ³ã€‚\r\n\r\n>|perl|\r\nsub init {\r\n    my ($class, $site) = @_;\r\n\r\n    $site->add_trigger(PHOENIX_ROOT_PAGE => sub {\r\n        my ($self, $page, $redirect_to ) = @_;\r\n\r\n        return unless $page->stash->{member};                        # memberã˜ã‚ƒãªã„ãªã‚‰é§„ç›®\r\n        return unless $page->site->config->eqnuete->{require_items}; # è¦æ±‚ã‚¢ã‚¤ãƒ†ãƒ ãŒç„¡ã„ãªã‚‰ã‚„ã‚‰ãªã„ã‚ˆ\r\n\r\n        # è¦æ±‚ã—ã¦ã„é …ç›®ã§æº€ãŸã•ã‚Œã¦ã„ãªã„ã‚‚ã®ãŒã‚ã‚‹ã®ã‹èª¿æŸ»ã™ã‚‹ã¨åŒæ™‚ã«ã‚ã‚‹ãªã‚‰ã€é …ç›®ã‚’å¾—ã‚‹ã‚ˆ\r\n        if( my @require_items =  grep { not $page->stash->{member}->$_ } @{[$page->site->config->eqnuete->{require_items}]} ) {\r\n            $page->stash->{enqute_require_items} = \\@require_items;\r\n        }\r\n\r\n    };\r\n}\r\n||<','2007-12-06 18:29:00','2007-12-07 04:04:19'),(212,'RZV5pUUrjH','ç”»åƒã‚’ä½¿ãˆã‚‹ã‚ˆã†ã«ã—ã¦ã¿ãŸã€‚','perl','ã“ã‚“ãªæ„Ÿã˜ã«ç”»åƒã‚’ä½¿ãˆã‚‹ã‚ˆã†ã«ã—ã¦ã¿ãŸãŒã€\r\njavascriptã§ã‚‚ã†å°‘ã—é ‘å¼µã‚ŠãŸã„ã€‚\r\n\r\n>|html|\r\n<img src=\"/note/file/show_image?file_rid=9d17EIGyKl\" width=\"20%\" height=\"20%\" />\r\n||<\r\n\r\n<img src=\"/note/file/show_image?file_rid=9d17EIGyKl\" width=\"20%\" height=\"20%\" align=\"left\" />\r\nãƒ†ã‚­ã‚¹ãƒˆã®å·¦å¯„ã›å‡ºæ¥ã‚‹ã‚ˆã†ã«ã—ã¦ã¿ã¾ã—ãŸã€‚ãã®ã‚ã¨ã«ã¤ã¥ã‘ãˆã‚‹ã¨ã©ã†ãªã‚‹ã‹ï¼Ÿ\r\n','2007-12-07 13:05:50','2007-12-08 17:26:20'),(213,'oAZO6M8Iwv','YahooUIã‚’ä½¿ã†','javascript','\r\n\r\n>|html|\r\nhttp://sourceforge.net/project/downloading.php?group_id=165715&filename=yui_2.4.0.zip\r\nhttp://www.openspc2.org/JavaScript/Ajax/ref/YahooUI/ver2.2.0/index.html\r\n||<','2007-12-07 16:42:59','2007-12-07 07:42:59'),(214,'1M8RfDpWE4','CSSãƒ¡ãƒ¢','css','>|html|\r\nhttp://oshiete1.goo.ne.jp/qa3223137.html\r\n||<\r\n\r\n<img src=\"/note/file/show_image?file_rid=Ekc8M9Luqg\" width=\"30%\" height=\"30%\" align=\"left\" />\r\n\r\nCSS ã®æœ¬æ¬²ã—ã„ã€‚\r\n\r\n\r\n','2007-12-09 02:12:18','2007-12-09 13:14:38'),(215,'ddmjLNz7dW','mysql ã§ãƒ¦ãƒ¼ã‚¶ãƒ¼ä½œæˆï¼ˆGRANT)','mysql','mysql ã§ãƒ¦ãƒ¼ã‚¶ãƒ¼ä½œæˆã—ãŸã€‚\r\n\r\nå…¨ã¦ã®ãƒ‡ãƒ¼ã‚¿ãƒ™ãƒ¼ã‚¹ã¨ãƒ†ãƒ¼ãƒ–ãƒ«ã«å¯¾ã—ã¦ã®æ¨©é™ã‚’ã€€hiroyuki@192.168.11.110 ã®ãƒ¦ãƒ¼ã‚¶ãƒ¼ã«ä¸Žãˆã‚‹ã€‚\r\n\r\n>|sql|\r\nGRANT ALL ON *.* TO hiroyuki@192.168.11.110 IDENTIFIED BY \'naisho\';\r\n||<\r\n\r\nãªãœã‹ã€å¤‰ãªã‚¨ãƒ©ãƒ¼ãŒå‡ºã‚‹ã®ã§\r\n\r\n>|sql|\r\nsudo /usr/local/mysql/bin/mysqld_safe -uroot &\r\n||<\r\n\r\nã“ã¡ã‚‰ã§èµ·å‹•ã—ãªãŠã—ãŸã€‚\r\n\r\n>>\r\n[error] DBIx::Class::ResultSet::first(): DBI Connection failed: Can\'t connect to local MySQL server through socket \'/var/run/mysqld/mysqld.sock\' (2) at /home/hiroyuki/project/Memote/lib/Memote/Controller/Note.pm line 35\r\n[error] Couldn\'t render template \"undef error - DBIx::Class::ResultSet::next(): DBI Connection failed: Can\'t connect to local MySQL server through socket \'/var/run/mysqld/mysqld.sock\' (2) at /home/hiroyuki/project/Memote/root/include/new.html line 10\r\n<<\r\n\r\n','2007-12-09 22:13:55','2007-12-09 13:53:32'),(216,'N1ueeuXsHg','DBIx::Class ã§ã® Sennaã®ä½¿ã„æ–¹','perl','search_literalã‚’ä½¿ç”¨ã™ã‚‹ã¨ä½¿ãˆã‚‹ã‚ˆã†ã«ãªã‚Šã¾ã™ã€‚\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use utf8;\r\n  4\r\n  5 use Memote::Script;\r\n  6 use Data::Dumper;\r\n  7\r\n  8 my $script = Memote::Script->new;\r\n  9 my $rs     = $script->{schema}->resultset(\'Note\')->search({},{ order_by => \'id DESC\' });\r\n 10\r\n 11 $rs = $rs->search_literal(\'MATCH(me.title)  AGAINST( ? ) OR MATCH(me.body)  AGAINST( ? )\', qw/ã—ã—ã‚ƒã‚‚ ã—ã—ã‚ƒã‚‚/ );\r\n 12\r\n 13 while( my $result = $rs->next ) {\r\n 14     print $result->title.\"\\n\";\r\n 15 }\r\n||<\r\n\r\n\r\n[http://search.cpan.org/~ash/DBIx-Class-0.08008/lib/DBIx/Class/ResultSet.pm]\r\n','2007-12-09 23:54:18','2007-12-09 14:54:18'),(217,'lO0rYSBkq7','site_nameã‚’å–å¾—ã™ã‚‹ç‚ºã®å‡¦ç†','works','site_nameã‚’å–å¾—ã™ã‚‹ç‚ºã®å‡¦ç†\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nmy @sites = qw{\r\n    hitrank.jp\r\n    phoenix.mfac.jp\r\n    decorin.jp\r\n    dekomail.com/happy\r\n    decogets.jp\r\n    decotan.jp\r\n    dekomail.com/love\r\n    decolove.jp\r\n    decobit.jp\r\n    decobo.jp\r\n    melo-king.com\r\n    sukina.jp\r\n};\r\n\r\nfor my $site ( @sites ) {\r\n    if( $site =~ /^(.*?)\\.(jp|com)\\/?(.*)?/ ) {\r\n        if( $3 ) {\r\n            warn $1.\'_\'.$3;\r\n        }\r\n        else {\r\n            warn $1;\r\n        }\r\n    }\r\n\r\n}\r\n||<\r\n\r\nTest::Baseã§ãƒ†ã‚¹ãƒˆã‚’ã‹ã„ãŸ\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Test::Base;\r\n\r\nplan tests => 1 * blocks;\r\n\r\nfilters {\r\n    input    => [qw/chomp/],\r\n    expected => [qw/chomp/],\r\n};\r\n\r\nrun {\r\n    my $block = shift;\r\n\r\n    $block->input =~ /^(.*?)\\.(jp|com)\\/?(.*)?/;\r\n    is( $1 , $block->expected, $block->expected);\r\n\r\n};\r\n\r\n__END__\r\n=== hitrank.jp\r\n--- input\r\nhitrank.jp\r\n--- expected\r\nhitrank\r\n||<\r\n\r\n','2007-12-10 11:04:53','2007-12-10 03:30:36'),(218,'SkUiSbtxis','å…¬å¼ç³»å…¨ã‚µã‚¤ãƒˆã®checkoutã¨ site_perlã¸ãƒªãƒ³ã‚¯','works','\r\nå…¬å¼ç³»å…¨ã‚µã‚¤ãƒˆã®checkoutã¨ site_perlã¸ãƒªãƒ³ã‚¯\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\n=pod\r\n    $HOME/project ä»¥ä¸‹ã§å®Ÿè¡Œã—ã¦ã­ã€‚\r\n=cut\r\n\r\nmy @projects = <DATA>;\r\nchomp @projects;\r\n\r\nfor my $project (@projects) {\r\n    print $project .\"\\n\";\r\n\r\n    # check out\r\n    chdir $ENV{HOME} . \'/project\';\r\n    system(\"svn co svn+ssh://192.168.200.53/var/SVNROOT/@{[$project]}/trunk/@{[$project]}\");\r\n\r\n    # make link\r\n    chdir $ENV{HOME} . \'/site_perl\';\r\n    system(\"ln -s @{[$ENV{HOME}]}/project/@{[$project]}/site_perl/@{[$project]} @{[$project]}\");\r\n}\r\n\r\n\r\n__END__\r\nAniTen\r\nAniUta\r\nChakuAnime\r\nChakuJPOP\r\nChakuTV\r\nGekiTV\r\nHitC\r\nIUtaKami\r\nJSound\r\nJtori\r\nKyukyoku\r\nMeloUta\r\nMotteke\r\nMottekeTV\r\nNamaJ\r\nNamaTori\r\nNamaToriAnime\r\nNamaUta\r\nRankMelo\r\nRankUta\r\nSukinaAnime\r\nSukinaCM\r\nTetsujin\r\nTtori\r\nUtaGets\r\nUtaKami\r\n||<\r\n','2007-12-10 14:22:20','2007-12-10 05:22:20'),(219,'RigpmNqJj9','ä¿ºã‚ªãƒ¬ã‚«ãƒ¬ãƒ³ãƒ€ãƒ¼ä½œæˆã®ç‚ºã®èª¿æŸ»','memo','ã‚«ãƒ¬ãƒ³ãƒ€ãƒ¼ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ \r\n\r\nä¿ºä¿ºã‚«ãƒ¬ãƒ³ãƒ€ãƒ¼ãŒæ¬²ã—ã„ã®ã§ã€èª¿æŸ»ã€‚\r\n\r\n\r\n>|html|\r\nhttp://www.stackasterisk.jp/tech/java/javaPractice06_06.jsp\r\n||<','2007-12-10 15:02:11','2007-12-10 06:02:11'),(220,'xV99KV8DOp','JSã‚·ã‚§ãƒ«','javascript','javascriptã‚’ã“ã‚“ããƒ¼ã‚‹ã‹ã‚‰ä½¿ç”¨ã§ãã‚‹æ–¹æ³•ç™ºè¦‹ã—ãŸã€‚\r\nè«–ç†ãƒ¬ãƒ™ãƒ«ã®ãƒ†ã‚¹ãƒˆã‚„ã€HTMLã®ç”Ÿæˆã§ä½¿ãˆãã†ã€‚\r\n\r\n>|javascript|\r\n  1 function display() {\r\n  2     print( \"name: \" +  this.name + \" age: \" + this.age );\r\n  3 }\r\n  4\r\n  5 var MyObj = {\r\n  6     name:\"hiroyuki\",\r\n  7     age: 28,\r\n  8     display:  display,\r\n  9 };\r\n 10\r\n 11 MyObj.display();\r\n 12 var array = [\"hoge\" , \"page\", \"age\" ];\r\n 13 for( var v in array ) {\r\n 14     print(array[v]);\r\n 15 }\r\n 16\r\n 17 print( array.sort().join(\"-\") );\r\n 18\r\n 19 print( Math.sin(1.56) );\r\n 20\r\n 21 /*\r\n 22 for( var  myobj in MyObj ) {\r\n 23     print(MyObj[myobj]);\r\n 24 }\r\n 25 */\r\n||<\r\n\r\nãƒªãƒ•ã‚¡ãƒ¬ãƒ³ã‚¹ï¼š\r\n[http://developer.mozilla.org/ja/docs/Introduction_to_the_JavaScript_shell]\r\n','2007-12-11 20:40:46','2007-12-11 12:43:37'),(221,'EzJx6w87TN','javascriptã®æ–‡å­—åˆ—é–¢æ•°ã®ãƒ†ã‚¹ãƒˆ','javascript','æ–‡å­—åˆ—é–¢æ•°ã®ãƒ†ã‚¹ãƒˆ\r\n\r\n>|javascript|\r\n  1 print( \"Hello World\".anchor(\'test\') );\r\n  2 print( \"Hello World\".link(\"http://hoge.com/\") );\r\n  3\r\n  4 var ary = \"Hello World,test\".split(\",\") ;\r\n  5\r\n  6 for( var i in ary ) {\r\n  7     print(ary[i].toLowerCase());\r\n  8 }\r\n  9\r\n 10 print( encodeURI(\"ã»ã’\") );\r\n||<\r\n\r\n>|html|\r\n<a name=\"test\">Hello World</a>\r\n<a href=\"http://hoge.com/\">Hello World</a>\r\nhello world\r\ntest\r\n%C3%A3%C2%81%C2%BB%C3%A3%C2%81%C2%92\r\n||<','2007-12-11 20:54:20','2007-12-11 11:55:22'),(222,'vjHEHEmAAX','javascriptã®ç¶™æ‰¿','javascript','>|javascript|\r\n  1 function Employee () {\r\n  2     this.name = \"\";\r\n  3     this.dept = \"general\";\r\n  4 }\r\n  5\r\n  6 function Manager () {\r\n  7     this.reports = [];\r\n  8 }\r\n  9 // ã“ã¡ã‚‰ã®prototypeãŒè‚ã§ã€ã“ã¡ã‚‰ã«ã‚¤ãƒ³ã‚¹ã‚¿ãƒ³ã‚¹ã‚’å…¥ã‚Œã‚‹ã¨ç¶™æ‰¿ã•ã‚Œã‚‹ã€‚\r\n 10 Manager.prototype = new Employee;\r\n||<\r\n\r\n[http://developer.mozilla.org/ja/docs/Core_JavaScript_1.5_Guide:Details_of_the_Object_Model]','2007-12-11 21:24:35','2007-12-11 12:25:08'),(223,'E9aIzQLzaz','Ajaxã®ãƒšãƒ¼ã‚¸','javascript','>|html|\r\nhttp://developer.mozilla.org/ja/docs/XMLHttpRequest\r\n||<','2007-12-11 21:45:51','2007-12-11 12:45:51'),(224,'GhhLpw1jYK','ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆDecop','works','ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã«é–¢ã™ã‚‹ãƒ¡ãƒ¢ã€‚\r\n\r\n>||\r\n16:08:00 kuramata   > 15:17 (hiroyuki) ãã‚‰ã¾ãŸã•ã‚“ã€ã“ã®â€ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã‚’ä»»æ„ã§è¡Œã„ã€å›žç­”ã™ã‚‹ã¾ã§å‡ºã—ç¶šã‘ã‚‹ã€‚â€ã¨ã„ã†ã®ã¯ã€ä»»æ„ã˜ã‚ƒ\r\n16:08:38 natsumi    > ç‰¹é›†ã®ç”»åƒã¯ä¸Šä¸‹åˆã‚ã›ã¦2KBã‚‚ãªã„ã‹ã‚‰\r\n16:08:38 kuramata   > 15:17 (hiroyuki) ãã‚‰ã¾ãŸã•ã‚“ã€ã“ã®â€ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã‚’ä»»æ„ã§è¡Œã„ã€å›žç­”ã™ã‚‹ã¾ã§å‡ºã—ç¶šã‘ã‚‹ã€‚â€ã¨ã„ã†ã®ã¯ã€ä»»æ„ã˜ã‚ƒãªã„ã‹ã¨æ€ã†ã®ã§ã™ãŒã€å¼·åˆ¶ã£ã¦ã“ã¨ã§OKã§ã™ã‹ï¼Ÿ\r\n16:08:44 natsumi    > ã‚ã‚“ã¾ã‚Šå¤‰ã‚ã‚‰ãªã„ã‹ã‚‚\r\n16:09:06 kuramata   > ç­”ãˆãŸããªã„å ´åˆã¯ãã®ã¾ã¾DLå‡ºæ¥ã‚‹ã‚“ã§ã™ãŒ\r\n16:09:06 natsumi    > ç´ æãƒãƒŠãƒ¼ã®å‹•ãã¨ã‚ã¡ã‚ƒã†ã­\r\n16:09:16 kuramata   > æ¯Žå›žå‡ºã™ã¨ã„ã†æ„å‘³ã§ã™!ï¼žã‚„ã¾ãªã‹ã•ã‚“\r\n16:09:34 kuramata   > ã¡ã‚‡ã£ã¨ã‚‚ã£ãŸã„ãªã„ã‘ã©\r\n16:09:51 kuramata   > ä»Šæ—¥ã¯ã¨ã‚Šã‚ãˆãšãã®æ–¹å‘ã§ãŠé¡˜ã„ã—ã¾ã™ã€‚ï¼žãªã¤ã¿ã•ã‚“\r\n16:09:58 natsumi    > äº†è§£ã§ã™ãƒ¼\r\n16:10:12 natsumi    > ã‚ã¹ã•ã‚“ã€ï¼´ï¼¯ï¼°ã®æ–°ç€ã‚„ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã§å‡ºã—ã¦ã‚‹ç”»åƒã§ã™ãŒã€\r\n16:10:16 natsumi    > ã“ã‚Œã£ã¦ã‚µãƒ ãƒã‚¤ãƒ«ã§ã™ã‚ˆã­ï¼Ÿ\r\n16:10:23 natsumi    > ã“ã‚ŒãŒã‚¤ãƒãƒãƒ³å°ã•ã„ã‚µã‚¤ã‚ºã§ã™ã‹ï¼Ÿï¼Ÿ\r\n16:11:20 abe        > ãã†ã§ã™\r\n16:12:00 abe        > ãã‚‰ã¾ãŸã•ã‚“ã€ã„ã¾ãƒ‡ã‚³ãƒ¡ã‚µã‚¤ãƒˆä¸Šã§ã‚„ã£ã¦ã‚‹ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆ(å…¥ä¼šã€é€€ä¼š)ã¯\r\n16:12:14 abe        > ç„¡å›žç­”ã®ã¾ã¾é€ä¿¡ã‚’ãŠã—ã¦ã‚‚çµ‚ã‚ã‚Šã¾ã™ã‚‹\r\n16:12:52 kuramata   > ãŠãƒ¼ãƒ¼\r\n16:13:29 kuramata   > ã¨ã„ã†ã“ã¨ã¯\r\n16:14:11 kuramata   > ãã‚Œã¯ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã«ç­”ãˆãŸäº‹ã«ãªã£ã¦ã—ã¾ã„æ¬¡å›žã‹ã‚‰ã¯å‡ºãªã„ã¨ã„ã†ã“ã¨ã§ã™ã­ï¼Ÿ\r\n16:15:27 abe        > ã‚‚ã£ã¨ã„ã†ã¨é€ä¿¡ãƒœã‚¿ãƒ³ãŠã•ãšã«ã€Œãƒˆãƒƒãƒ—ã¸ã€è¡Œã£ã¦ã‚‚å‡ºã¦ãã¾ã›ã‚“\r\n16:15:55 abe        > ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã‚’æç¤ºã™ã‚‹ã®ãŒãŸã ä¸€å›žã£ã¦ã“ã¨ã§ã™ãª\r\n16:16:11 kuramata   > ãªã‚‹ã»ã©\r\n16:16:23 abe        > å…¥ä¼šã¯å¿…ãšè¡Œã†ã®ã§ã€ãã“ã§å‡ºã›ã°ã€ã“ã‚Œã‹ã‚‰ã®å…¥ä¼šè€…ã«ã¯ã¿ãˆã‚‹ã‘ã©ã€\r\n16:17:15 abe        > æ—¢ã«ä¼šå“¡ã®äººã¯ã©ã†ã—ã¾ã™ã‹ => å‡ºã—ã¦ãã ã•ã„  ã£ã¦ãªã£ãŸã‚“ã ã¨èªè­˜ã—ã¦ã¾ã™ã‚‹\r\n16:17:20 natsumi    > ã‚ã¹ã•ã‚“ã€ãƒ©ãƒ–ãƒ‡ã‚³ã®æœ¬ç•ªï¼µï¼°ã‚’ã—ã¦ã‚‚ã‚‰ã„ãŸã„ã‚“ã§ã™ãŒã€\r\n16:17:25 natsumi    > æ›´æ–°æ—¥ãŒä»Šæ—¥ã®ãƒ•ã‚¡ã‚¤ãƒ«å…¨ã¦\r\n16:17:32 natsumi    > ã£ã¦æŒ‡å®šã®ä»•æ–¹ã§å¤§ä¸ˆå¤«ã§ã™ã‹ãƒ»ãƒ»ãƒ»ï¼Ÿ\r\n16:17:33 natsumi    > ãã‚Œã¨ã‚‚\r\n16:17:40 natsumi    > ãƒ•ã‚¡ã‚¤ãƒ«åæŒ™ã’ãŸã»ã†ãŒã„ã„ã§ã™ã‹ã­ï¼Ÿ\r\n16:18:07 abe        > ao kiç’°å¢ƒã«ã‚ã‚‹ãªã‚‰ã“ã¡ã‚‰ã§åˆ¤åˆ¥ã—ã¾ã™\r\n16:18:09 abe        > >ãªã¤ã¿ã‚“\r\n16:18:11 natsumi    > ãŠãŠ\r\n16:18:13 natsumi    > ã‚ã‚Šã¾ã™ï¼\r\n16:18:17 natsumi    > ãŠé¡˜ã„ã—ã¾ã™ï¼\r\n16:18:23 abe        > æœ¬ç•ªã¨é•ã†ã‚‚ã®ã¯ã‚ã‹ã‚‹ã‚ˆã†ã«ãªã£ã¦ã¾ã™\r\n16:18:29 natsumi    > ãªã‚‹ã»ã©ãƒ¼\r\n16:18:31 natsumi    > ãœã²\r\n16:18:36 natsumi    > ã‚ˆã‚ã—ããŠé¡˜ã„ã—ã¾ã™\r\n16:18:41 kuramata   > ã“ã‚Œã‚’å›žç­”ã—ãªã„ã¨æ¯Žå›žå‡ºã‚‹è¨­å®šã«ã—ã¦ã„ãŸã ããŸã„ã®ã§ã™ãŒã€å›žç­”ã—ãªã„ã‹ã‚‰ã£ã¦DLãŒå‡ºæ¥ãªã„ã¨ã‹ã§ã¯ãªã„ã‚“ã§ã™ã€‚å¼·åˆ¶ã§ã¯ãªã„ã‘ã©ã—ã¤ã“ã„ã§ã™ã‹ã­ï¼Ÿã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆã®æ„è¦‹ã¨ã—ã¦ã“ã‚“ãªæ„Ÿã˜ã§ã—ãŸã€‚ï¼žã‚ã¹ã•ã‚“\r\n16:19:54 natsumi    > ãã‚‰ã¾ã¦ãƒã€å®¹é‡ã®ä»¶ãªã‚“ã ã‘ã©ã€ï¼´ï¼¯ï¼°ã«å‡ºã—ã¦ã‚‹ãã‚Œãžã‚Œã®ç”»åƒå®¹é‡ã¯\r\n16:19:59 natsumi    > ã‚‚ã†ä¸‹ã’ã‚‰ã‚Œãªã„ã¨ã“ã‚ã¾ã§ä¸‹ã’ã¦ã‚ã‚‹ã‹ã‚‰\r\n16:20:00 natsumi    > ã‚ã¨ã¯\r\n16:20:04 natsumi    > æ•°ã‚’æ¸›ã‚‰ã™ã‹\r\n16:20:06 natsumi    > çµµæ–‡å­—ã‚’æ¸›ã‚‰ã™ã‹\r\n16:20:12 natsumi    > è¡¨ç¤ºã—ã¦ã‚‹ç´ æã‚’æ¸›ã‚‰ã™ã‹\r\n16:20:15 natsumi    > ãªã‚“ã ã‚ˆã­ï½ž\r\n16:20:25 natsumi    > çµµæ–‡å­—ã‚‚ã•ã‚Šã’ãªãï¼‘ã‚³1KBãã‚‰ã„é£Ÿã£ã¦ã‚‹ã‹ã‚‰ã€‚ã€‚ã€‚\r\n16:20:48 natsumi    > ã©ã“ã‚’ã©ã†å‰Šã‚‹ã‹ã¯ãŠä»»ã›ã—ã¾ã™ï¼\r\n16:20:53 natsumi    > Happyã‚‚ãŽã‚ŠãŽã‚Šã‹ã‚‚\r\n16:21:24 natsumi    > ã‚ã€ã‚ã¹ã•ã‚“ã€Happyãƒ‡ã‚³ã‚‚ã¡ã‚‡ã£ã¨å¤‰æ›´ã—ã¦ã‚ã‚‹ã®ã§\r\n16:21:34 natsumi    > ä»Šæ—¥æ›´æ–°ã®ãƒ•ã‚¡ã‚¤ãƒ«ã‚’æœ¬ç•ªåæ˜ ãŠé¡˜ã„ã—ã¾ã£ã™\r\n16:21:41 natsumi    > æ˜Žæ—¥ã‹ã‚‰ã®ä»•æ§˜å¤‰æ›´ã«å¯¾ã™ã‚‹æ–½ç­–ãªã®ã§ã€\r\n16:21:49 natsumi    > ä»Šæ—¥ã®æ—©ã„æ®µéšŽã§UPãŠé¡˜ã„ã—ã¾ã™ãƒ¼\r\n16:21:52 abe        > ãŠã‚ŒãŒå®¢ã ã£ãŸã‚‰ã€ã“ãŸãˆãŸããªã„ã¨ãã¯ã§ãŸã‚‰ã‚(å…¨éƒ¨æœ€åˆã®é¸æŠžè‚¢)ç­”ãˆã¡ã‚ƒã„ã¾ã™ã‘ã©ã­ã€‚ãã‚Œã§ç„¡å›žç­”ã‚’è¨±ã—ãŸå ´åˆã‚ˆã‚Šã‚‚çµ±è¨ˆãŒç‹‚ã£ã¦ã‚‚çŸ¥ã£ãŸã“ã¨ã‹ã€ã¨ > ãã‚‰ã¾ãŸã•ã‚“\r\n16:22:09 abe        > ã ã‹ã‚‰ãŠã‚ŒãŒã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆã ã£ãŸã‚‰ç„¡å›žç­”ã¯è¨±ã™\r\n16:22:23 abe        > å°‘ãªãã¨ã‚‚ã€Œç„¡å›žç­”ã€ã¨ã„ã†é¸æŠžè‚¢ã‚’å‡ºã™\r\n16:23:00 kuramata   > ãŸã—ã‹ã«\r\n16:23:14 kuramata   > å¤‰ãªå›žç­”ã•ã‚Œã‚‹ãã‚‰ã„ãªã‚‰\r\n16:23:20 abe        > 1900å¹´ç”Ÿã¾ã‚Œã¯ã¾ã‚ãƒã‚¸ã‘ã‚‹ã‘ã© ç”·ãŒå¤šããªã£ã¦ã‚‚ã‚·ãƒ©ãƒŠã‚¤ãƒ¨\r\n16:23:29 kuramata   > ç„¡å›žç­”ã®ã»ã†ãŒã„ã„ã§ã™ã€‚\r\n16:23:50 kuramata   > ç„¡å›žç­”é¸æŠžè‚¢æœ‰ã‚Šã§ãŠé¡˜ã„ã—ã¾ã™ã€‚\r\n16:24:12 abe        > ç„¡è¦–ã—ã¦DLã¯ã¾ãŸãããŒã€ç„¡å›žç­”ã‚’ç©æ¥µçš„ã«é¸æŠžã—ãŸã‚‰ãŠã‚ã‚Šã€ãŒã¡ã‚‡ã†ã©ã„ã„ã‹ã‚‚ã§ã™ã­\r\n16:24:42 abe        > ã§ã‚‚ãã®å ´åˆå·¥æ•°ã¯å¼·åˆ¶ã¨ã‹ã‚ã‚‰ã‚“ã‘ã©www ã‚¹ãƒžãƒ³å¤‰ãªæ–¹å‘ã«ãªã£ãŸ>ã‚„ã¾ãªã‹ã•ã‚“\r\n16:24:59 abe        > ã»ã„ > ãªã¤ã¿ã‚“\r\n16:25:13 natsumi    > ãŠé¡˜ã„ã—ã¾ã£ã™\r\n16:26:56 abe        > ã‚ã¨ãŠã‚Œã®ã¨ãã¯ãƒˆãƒƒãƒ—ãƒšãƒ¼ã‚¸ã‚’è¡¨ç¤ºã™ã‚‹ã‚¿ã‚¤ãƒŸãƒ³ã‚°ã§(å¿…è¦ãªã‚‰)ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆå‡ºã™ã£ã¦ã¤ã‚‚ã‚Šã§ã—ãŸãŒ > ãã‚‰ã¾ãŸã•ã‚“\r\n16:27:09 abe        > ãã®å¾Œã®ã‚„ã‚Šã¨ã‚Šã§ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰æ™‚ã«ãªã£ãŸã‚“ã§ã™ã­?\r\n16:27:19 kuramata   > ã¯ã„ï¼\r\n16:27:24 abe        > ã»ã»ã„ãƒ¼\r\n16:27:56 kuramata   > ä¼šå“¡ãŒã‚µã‚¤ãƒˆã«è¨ªã‚ŒãŸã¨ãã¯\r\n16:28:10 kuramata   > ãã®ã¾ã¾Topã§DLå‰ã«ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã§ãŠã­ãŒã—ã¾ã†ï¼\r\n16:28:44 hiroyuki   > ã™ã¿ã¾ã›ã‚“ã€ä½•ãŒã—ãŸã„ã®ã‹ã‚ã‹ã‚Šã¾ã›ã‚“ã€‚\r\n16:28:54 abe        > Topã§DLå‰ã£ã¦ãªã‚“ã˜ã‚ƒãƒ¼\r\n16:29:13 kuramata   > ã‚ã‚Œï¼Ÿ\r\n16:29:53 abe        > ã¯ã˜ã‚ã¦å…¥ä¼š ã—ãŸå ´åˆ â†’ å…¥ä¼šå®Œäº†ã®ç”»é¢ã§ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆ (ãƒˆãƒƒãƒ—ãƒšãƒ¼ã‚¸ã¸ã®ãƒªãƒ³ã‚¯ã‚‚ã‚ã‚‹ã®ã§ç„¡è¦–ã‚‚å¯)\r\n16:30:10 yoshida    > ã‚ã¹ã•ã‚“ã™ã„ã¾ã›ã‚“\r\n16:30:11 abe        > ç­”ãˆã¦ãªã„äºº â†’ ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰ãƒšãƒ¼ã‚¸ã§ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒå‡ºã‚‹\r\n16:30:14 yoshida    > ã¾ãƒ¼ã¦ãƒãŒ\r\n16:30:16 yoshida    > è©±ã—ã¦ã‚‹ã®ã¯\r\n16:30:20 yoshida    > æ—¢å­˜ä¼šå“¡ã®è©±ã§ã™\r\n16:30:20 kuramata   > ä¼šå“¡\r\n16:30:38 yoshida    > æ–°è¦ã«é–¢ã—ã¦ã¯å…¥ä¼šå®Œäº†å¾Œã®ç”»é¢ã§OKã§ã™\r\n16:30:49 kuramata   > ä¼šå“¡ã®å ´åˆã¯\r\n16:30:53 miyagi     > ãŸã ã§ã•ãˆãƒ‡ã‚³ãƒ¡ã‚µã‚¤ãƒˆã¯æ™®é€šã‚ˆã‚Šé‡ããªã‚ŠãŒã¡ãªã®ã§50kbãã‚‰ã„ã§æŠ‘ãˆã‚‹ã‚ˆã†ã«ã—ãŸæ–¹ãŒã„ã„æ°—ãŒã—ã¾ã™ã€happyã¯80kbãã‚‰ã„ã‚ã‚‹ã®ã§æ™®é€šã®ã‚µã‚¤ãƒˆã®ï¼’ï½žï¼“å€ã®ãƒ­ãƒ¼ãƒ‰æ™‚é–“ãŒç™ºç”Ÿã—ã¦ã—ã¾ã†ã‹ã‚‚ï¼Ÿä»Šå¾Œæ‰‹ã‚’åŠ ãˆã‚‹æ™‚ã¯ãã®è¾ºã‚‚è€ƒãˆã‚‹ã¨ã„ã„ã‹ã‚‚ã§ã™ï¼žãªã¤ã¿ã•ã‚“\r\n16:31:15 natsumi    > äº†è§£ã—ã¾ã—ãŸ\r\n16:31:41 miyagi     > ãƒ­ãƒ¼ãƒ‰æ™‚é–“ãŒé•·ã„ã¨å¸°ã£ã¡ã‚ƒã†ãŠå®¢ã•ã‚“ã‚‚ã„ã‚‹ã®ã§\r\n16:31:52 abe        > å…¥ä¼šæ™‚ã®ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã§ç„¡è¦–(é€ä¿¡ãƒœã‚¿ãƒ³ã‚’æŠ¼ã•ãªã„)ã—ã¦ãƒˆãƒƒãƒ—ã¸ã®è¡Œã‘ã‚‹ã‚ã‘ã§ã€ãã‚Œã‚’ã‚„ã£ãŸã‚‰ã€Œç­”ãˆã¦ãªã„æ—¢æˆä¼šå“¡ã€ã«ãªã‚‹ã‚ˆã­\r\n16:32:15 abe        > ã§ã€Œç­”ãˆã¦ãªã„æ—¢æˆä¼šå“¡ã€ã«ã¯ã€ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰æ™‚ã«ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒã§ã‚‹\r\n16:33:02 abe        > ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆã®ç­”ãˆã‚’é¸ã‚“ã§(ç„¡å›žç­”ã‚‚ã‚ã‚‹)é€ä¿¡ã™ã‚‹ã¨ã€ã‚‚ã†å‡ºãªã„\r\n16:33:49 kuramata   > éžä¼šå“¡ã«ã¯ç„¡å›žç­”ä»¥å¤–ã«ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆæ‹’å¦ï¼ˆãƒˆãƒƒãƒ—ã¸æˆ»ã‚‹ï¼‰ãŒã‚ã‚‹ã£ã¦äº‹ã§ã™ã­ã€‚\r\n16:33:52 kuramata   > ãªã‚‹ã»ã©ã€‚\r\n16:34:09 abe        > ç„¡è¦–ã—ã¦ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰ã™ã‚‹ã®ã¨åŒã˜ã ã­\r\n16:35:32 abe        > æŠ€è¡“çš„ã«ã€å…¥ä¼šæ™‚ã®ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒè¡¨ç¤ºã•ã‚Œã¦ã‚‹æ™‚ç‚¹ã§ã¯ã€ã‚‚ã†ä¼šå“¡ãªã®ã§\r\n16:35:49 abe        > ãƒˆãƒƒãƒ—ã¸ã®ãƒªãƒ³ã‚¯ã‚’æ¶ˆã™ãªã©ã—ã¦é€ä¿¡ã‚’å¼·åˆ¶ã—ã¦ã‚‚ã€\r\n16:36:11 abe        > ãƒ–ãƒ©ã‚¦ã‚ºä¸€å›žã‚„ã‚ã¡ã‚ƒã£ã¦ã‚ã‚‰ãŸã‚ã¦ã‚µã‚¤ãƒˆã«æ¥ã‚‹ã“ã¨ãŒã§ãã¡ã‚ƒã†ã®ã§\r\n16:37:06 abe        > ã„ã¾è¿°ã¹ãŸã‚ˆã†ãªæµã‚Œã§ãªã„ã¨å…¨å“¡ã«é€ä¿¡ã•ã›ã‚‰ã‚Œãªã„ãƒŽãƒ‡ã‚¹\r\n16:38:33 kuramata   > åˆ†ã‹ã‚Šã¾ã—ãŸï¼ã¡ã‚‡ã£ã¨ä¸Šè¨˜è¸ã¾ãˆã¦å†åº¦ã‚¯ãƒ©ã‚¤ã‚¢ãƒ³ãƒˆã«ç¢ºèªã—ã¾ã™ï¼ã™ã¿ã¾ã›ã‚“ã€‚ï¼žã‚ã¹ã•ã‚“ã€ã‚„ã¾ãªã‹ã•ã‚“\r\n16:40:56 abe        > éžä¼šå“¡  > å…¥ä¼š > å…¥ä¼šæ™‚ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒã§ã‚‹ > é€ä¿¡                 > ã€Œç­”ãˆãŸä¼šå“¡ã€ã«ãªã‚‹(ãŠã‚ã‚Š)\r\n16:40:56 abe        > éžä¼šå“¡  > å…¥ä¼š > å…¥ä¼šæ™‚ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒã§ã‚‹ > ç„¡è¦–ã—ã¦ãƒˆãƒƒãƒ—ã¸     > ã€Œç­”ãˆã¦ãªã„ä¼šå“¡ã€ã«ãªã‚‹\r\n16:40:56 abe        > ç­”ãˆã¦ãªã„ä¼šå“¡ > DLæ™‚ã«ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒå‡ºã‚‹ > é€ä¿¡                 > ã€Œç­”ãˆãŸä¼šå“¡ã€ã«ãªã‚‹(ãŠã‚ã‚Š)\r\n16:40:56 abe        > ç­”ãˆã¦ãªã„ä¼šå“¡ > DLæ™‚ã«ã‚¢ãƒ³ã‚±ãƒ¼ãƒˆãŒå‡ºã‚‹ > ç„¡è¦–ã—ã¦ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰ > ã€Œç­”ãˆã¦ãªã„ä¼šå“¡ã€ã®ã¾ã¾\r\n16:41:31 abe        > FYI > ãã‚‰ã¾ãŸã•ã‚“\r\n16:42:00 kuramata   > ãƒ©ã‚¤ï¼\r\n16:42:15 kuramata   > ã‚ã¹ã•ã‚“ã‚ã‚ŠãŒã¨ã†ã”ã–ã„ã¾ã™ï¼\r\n||<','2007-12-12 16:52:47','2007-12-12 07:52:47'),(225,'kVPt8OgY9F','ä¸‰è§’é–¢æ•°','math','ã“ã®è¾ºã‚’ã¿ã¦å­¦ç¿’ã—ã¦ãŠãã€‚\r\n\r\n[http://www8.plala.or.jp/ap2/suugaku/sankakukansuunoshoho.html]\r\n[http://shigihara.hp.infoseek.co.jp/sin.htm]','2007-12-13 09:46:02','2007-12-13 00:46:02'),(226,'u8BdMfBIUM','chakujpopã®æ¥½æ›²ãƒªã‚¹ãƒˆ','works','melodyã®JPOPã¨Mailã€ãã—ã¦Orgelã‚’å«ã‚“ã æ¥½æ›²ã®ãƒªã‚¹ãƒˆ\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse ChakuJPOP::Data::Melop;\r\nuse Text::CSV_XS;\r\n\r\nmy $contents_itr = ChakuJPOP::Data::Contents->retrieve_from_sql(\r\n    q{\r\n        type      = \'melody\' AND\r\n        public_fg = 1        AND\r\n        registed  = 1        AND\r\n        (\r\n            FIND_IN_SET(\'jpop\',  genre ) OR\r\n            FIND_IN_SET(\'mail\',  genre ) OR\r\n            FIND_IN_SET(\'orgel\', genre )\r\n        )\r\n    }\r\n);\r\n\r\nmy $csv = Text::CSV_XS->new({ binary => 1 });\r\n\r\nwhile( my $content = $contents_itr->next ) {\r\n\r\n    $csv->combine(\r\n        map { $content->$_ } qw{uid title artist},\r\n    );\r\n\r\n    print $csv->string . \"\\n\";\r\n}\r\n||<\r\n\r\nranking_utaã«å«ã¾ã‚Œã¦ã„ã‚‹æ¥½æ›²ãƒªã‚¹ãƒˆ\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse ChakuJPOP::Data::Melop;\r\nuse Text::CSV_XS;\r\n\r\n\r\nChakuJPOP::Data::Contents->set_sql( \'_get_uta_list_form_ranking\' => q{\r\nSELECT\r\n    DISTINCT c.uid, c.title, c.artist\r\nFROM\r\n    ranking_uta AS ru,\r\n    contents    AS c\r\nWHERE\r\n    ru.contents_uid = c.uid\r\nORDER BY\r\n    c.uid;\r\n});\r\n\r\nmy $contents_itr = ChakuJPOP::Data::Contents->search__get_uta_list_form_ranking;\r\nmy $csv          = Text::CSV_XS->new({ binary => 1 });\r\n\r\nwhile( my $content = $contents_itr->next ) {\r\n\r\n    $csv->combine(\r\n        map { $content->{$_} } qw{uid title artist},\r\n    );\r\n\r\n    print $csv->string . \"\\n\";\r\n}\r\n||<\r\n\r\n','2007-12-13 10:36:52','2007-12-13 02:07:09'),(227,'xFsVssH2xv','chakutvã®æ¥½æ›²ãƒªã‚¹ãƒˆ','works','jpop,mail,kiwa,dasaã®å«ã¾ã‚Œã‚‹melodyã®ãƒªã‚¹ãƒˆ\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse ChakuTV::Data::Melop;\r\nuse Text::CSV_XS;\r\n\r\nmy $contents_itr = ChakuTV::Data::Contents->retrieve_from_sql(\r\n    q{\r\n        type      = \'melody\' AND\r\n        public_fg = 1        AND\r\n        registed  = 1        AND\r\n        (\r\n            FIND_IN_SET(\'jpop\', genre )  > 0  OR\r\n            FIND_IN_SET(\'mail\', genre )  > 0 OR\r\n            FIND_IN_SET(\'kiwa\', genre )  > 0OR\r\n            FIND_IN_SET(\'dasa\', genre ) > 0\r\n        )\r\n        ORDER BY uid\r\n    }\r\n);\r\n\r\nmy $csv = Text::CSV_XS->new({ binary => 1 });\r\nwhile( my $content = $contents_itr->next ) {\r\n\r\n    $csv->combine(\r\n        map { $content->$_ } qw/uid title artist/,\r\n    );\r\n\r\n    print $csv->string . \"\\n\";\r\n}\r\n||<\r\n\r\nutaã®ãƒªã‚¹ãƒˆ\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse ChakuTV::Data::Melop;\r\nuse Text::CSV_XS;\r\n\r\nsub get_genre {\r\n    my $genres = shift;\r\n\r\n    for my $gen ( qw/tv cm movie anime/ ) {\r\n        if( ( \',\' . $genres . \',\' )  =~ /,($gen),/ ) {\r\n            $genres = $1;\r\n            return $genres;\r\n        }\r\n    }\r\n\r\n    return ;\r\n}\r\n\r\n\r\nmy $contents_itr = ChakuTV::Data::Contents->retrieve_from_sql(\r\n    q{\r\n        type      = \'uta\' AND\r\n        public_fg = 1     AND\r\n        registed  = 1     AND\r\n        (\r\n            FIND_IN_SET(\'tvcm\', genre ) > 0\r\n        )\r\n    }\r\n);\r\n\r\nmy $csv = Text::CSV_XS->new({ binary => 1 });\r\n\r\nwhile( my $content = $contents_itr->next ) {\r\n\r\n    my $genre = get_genre($content->genre) ;\r\n\r\n    $csv->combine(\r\n        $content->uid,\r\n        $content->title,\r\n        $content->artist,\r\n        $genre ? $genre : \"no match(@{[$content->genre]})\" ,\r\n    );\r\n\r\n    print $csv->string . \"\\n\";\r\n}\r\n||<\r\n\r\n','2007-12-13 11:56:51','2007-12-13 07:55:22'),(228,'X0frXk382y','qmail ã§ã®è»¢é€ç¢ºèªæ–¹æ³•ã€‚','works','ç¢ºèªæ–¹æ³•\r\n\r\n>||\r\n16:23:51 hiroyuki   > ã€€ã€€info@namauta.jpã€€ã“ã¡ã‚‰ãŒMFã®ã‚µãƒ¼ãƒãƒ¼ã¸è»¢é€ã•ã‚Œã¦ã‚‹ã‚‰ã—ã„ã®ã ã‘ã©ã€ãã®å¾Œä½•å‡¦ã«è»¢é€ã•ã‚Œã¦ã„ã‚‹ã‹åˆ†ã‹ã‚Šã¾ã™ï¼Ÿ\r\n16:24:41 takefumi   > ãã‚Œã¯ã€.qmail ã‚’ã¿ã‚Œã°ã‚ˆã„ã®ã§ã¯ï¼Ÿ\r\n16:24:45 takefumi   > ï¼žå±±ä¸­ã•ã‚“\r\n16:24:52 tanaka     > ãŠã‰ã€‚ã€‚ãã‚Œã¯å°æž—ã•ã‚“ã«ç¢ºèªã—ãªã„ã¨ã‚ã‹ã‚‰ãªã„ã§ã™ã­ã€‚ã€‚\r\n16:26:07 hiroyuki   > ãƒ¡ãƒ¼ãƒ«ã‚µãƒ¼ãƒãƒ¼ã® .qmailã‚’è¦‹ã‚Œã°ã„ã„ã®ã‹ã€‚\r\n16:26:56 hiroyuki   > äº†è§£ã§ã™ã€‚ï¼žæœ¨æ‘ã•ã‚“ã€‚ã“ã£ã¡ã§èª¿ã¹ã¾ã™ã€‚ç”°ä¸­å›\r\n16:26:57 takefumi   > DNSã®è¨­å®šã‚’ã¿ã¦(or dig ã‚³ãƒžãƒ³ãƒ‰)ã€ãƒ¡ãƒ¼ãƒ«ã‚µãƒ¼ãƒã‚’ç‰¹å®šã€‚ãã®ã‚µãƒ¼ãƒã®.qmailã‚’è¦‹ã‚‹ã§ã™ã€‚\r\n16:27:15 takefumi   > ãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã”ã¨ã®ãƒ¡ãƒ¼ãƒ«ã®è¨­å®šã¯ç”°ä¸­ãã‚“ã®ä½œæ¥­ã®ç¯„å›²å¤–ã§ã™ã€‚\r\n16:27:43 takefumi   > ã§ã‚‚ã€ãŠã‹ã—ã„ãª mf147 ã£ã½ã„ãŒã€‚ã€‚ã€‚\r\n16:27:43 aoki       > ã¡ã‚‡ã„ã¨ã‚¹ã‚¿ãƒè²·ã£ã¦æ¥ã¾ã™\r\n16:29:19 tokuhirom  > ãã®ã¸ã‚“ã‚‚ ServerAdmin ã§\r\n16:29:23 tokuhirom  > ã¿ã‚Œã‚‹ã¨ã„ã„ã‚“ã§ã™ã‹ã­ãˆ\r\n16:29:33 tokuhirom  > ã¦ã„ã†ã‹ cron ã§å®šæ™‚ã« mf156 ã«ã‚ã¤ã‚ã¦ãã¡ã‚ƒã£ã¦\r\n16:29:38 tokuhirom  > å„MXã‹ã‚‰ã€‚\r\n16:29:46 takefumi   > ãã†ã­ã‡ã€‚ã¨ã„ã†ã‹ã€.qmailã‚‚svnç®¡ç†ã›ã­ã°ã§ã™ã€‚\r\n16:29:49 tokuhirom  > ãã®çµæžœã‚’è¡¨ç¤ºã™ã‚‹ãƒšãƒ¼ã‚¸ã‚’ã ã™ã¨ã‹ã€‚\r\n16:29:57 takefumi   > ãã—ã¦ã€ãªã¾ã†ãŸã¯ã€å­˜åœ¨ã—ãªã„MLã«è»¢é€ã—ã¦ã„ã‚‹ããŒã—ã¾ã™ã€‚\r\n16:30:04 tokuhirom  > ã†ã²\r\n16:30:26 hiroyuki   > ã‚ã‚Šã‚ƒ\r\n16:30:34 takefumi   > .qmail-namauta-defaultã€€ã¨ .qmail-namauta-info ãŒå­˜åœ¨ã—ãŸå ´åˆã£ã¦ã€ã©ã£ã¡ãŒå„ªå…ˆã•ã‚Œã‚‹ã‚“ã ï¼Ÿ\r\n16:30:42 tokuhirom  > ã„ã‚“ãµã‰ã˜ã‚ƒãªã„ã§ã™ã‹ã­\r\n16:30:47 tokuhirom  > ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã¯ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã ã‹ã‚‰ã€‚\r\n16:30:54 takefumi   > ã“ã®è¨­å®šã‚‚ã€ãã‚‚ãã‚‚ãŠã‹ã—ã„ãžã„ãªæ„Ÿã˜ã€‚\r\n16:30:55 takefumi   > ã†ã‚€ã€‚\r\n16:31:42 tokuhirom  > ã†ãƒ¼ã‚“\r\n16:31:46 tokuhirom  > Sledge::Config::YAML ã¯\r\n16:31:57 tokuhirom  > ãªã‚“ã§ã“ã‚“ãªãƒ†ã‚¹ãƒˆã®æ›¸ãæ–¹ã—ã¦ã‚‹ã®ã‹ã•ã£ã±ã‚Šã‚ã‹ã‚‰ãªã„ï½—\r\n16:32:18 kan_       > ãã‚Œã¯\r\n16:32:23 kan_       > ä¿ºã‹ãªï¼žãƒ†ã‚¹ãƒˆ\r\n16:32:30 tokuhirom  > ãŸã¶ã‚“ã­\r\n16:32:57 tokuhirom  > ã¦ã„ã†ã‹ã“ã‚Œ\r\n16:33:06 tokuhirom  > Test::Base ã§å„é …ç›®ã”ã¨ã«ãƒã‚§ãƒƒã‚¯ã—ã¦ã‚‹ã‚“ã ã‘ã©\r\n16:33:16 tokuhirom  > is_deeply ã§ä¸€ç™ºã§ãƒã‚§ãƒƒã‚¯ã—ãŸã»ã†ãŒã¯ã‚„ãã­ï½—\r\n16:34:12 hiroyuki   > ã€€namauta-info@ml.mfac.jpã€€ã«è»¢é€ã—ã¦ã„ã‚‹ã®ã¯åˆ†ã‹ã£ãŸã‘ã©ã€ã“ã‚ŒãŒå­˜åœ¨ã™ã‚‹MLãªã®ã‹ã¯ã€ãƒ†ã‚¹ãƒˆã™ã‚Œã°ã„ã„ã®ã‹ã€‚\r\n16:34:38 takefumi   > ã„ã‚„ã€ãã‚Œã¯ã€mlã®ç®¡ç†ç”»é¢ã‚’ã¿ã‚Œã°ã‚ˆã„ã®ã§ã¯ï¼Ÿ\r\n16:34:48 kan_       > deeplyã‚’çŸ¥ã‚‰ã‚“æ™‚æœŸã ãªã€å¤šåˆ†\r\n16:34:51 takefumi   > ï¼žå±±ä¸­ã•ã‚“\r\n16:35:08 takefumi   > ã¦ã‹ã€ã“ã®ãƒ•ã‚¡ã‚¤ãƒ«ã®ã‚¿ã‚¤ãƒ ã‚¹ã‚¿ãƒ³ãƒ—ãªã‚“ã§4æœˆãªã‚“ã ã‚ã†ã€‚ã€‚\r\n16:35:10 tokuhirom  > ã„ã‚„\r\n16:35:11 tokuhirom  > run_is_deeply\r\n16:35:15 tokuhirom  > ã¤ã‹ã£ã¦ã‚‹ã‚ˆï½—ï¼žã‹ã‚“ã‹ã‚“\r\n16:35:21 kan_       > ãˆãƒ¼ï½—\r\n16:35:25 tokuhirom  > ãªã‚“ã§ã“ã‚“ãªã“ã¨ã«ãªã£ã¦ã‚‹ã®ã‹\r\n16:35:29 tokuhirom  > ã•ã£ã±ã‚Šã‚ã‹ã‚‰ãªã„ã‚³ãƒ¼ãƒ‰ã ï½—\r\n16:35:53 tokuhirom  > http://code.mfac.jp/trac/file/CPAN/mikihoshi/Sledge-Config-YAML/t/01_dev.t\r\n16:35:55 tokuhirom  > ã“ã‚Œã€‚\r\n16:36:05 kan_       > å¤šåˆ†ã€ãã®run_is_deeplyã¯ãŸã ã®ã‚³ãƒ”ãƒšã§\r\n16:36:12 kan_       > æ„å‘³ã‚’åˆ†ã‹ã£ã¦ãªã„ã¨æŽ¨æ¸¬ã•ã‚Œã‚‹\r\n16:36:39 kan_       > ã‚„ã€ã¨ã„ã†ã‹æ„å‘³ã¯åˆ†ã‹ã£ã¦ã‚‹ã®ã‹\r\n16:39:20 hiroyuki   > http://ml.mfac.jp/mailman/admin/ã€€ã§ã™ã­ã€‚ç¢ºèªã—ã¾ã™ã€‚\r\n16:39:22 hiroyuki   > ï¼žãã‚€ã‚‰ã•ã‚“\r\n16:39:52 takefumi   > ã§ã™ã€‚ã§ã‚‚ã€å‘½åè¦å‰‡ãŒãŠã‹ã—ã„ã‹ã‚‰ã€å­˜åœ¨ã—ãªã„ã¨æ€ã†ã‚ˆã€‚\r\n16:40:01 hiroyuki   > ã—ã¾ã›ã‚“ã§ã—ãŸã€‚\r\n16:40:50 takefumi   > ã‚½ãƒ•ãƒˆãƒãƒ³ã‚¯ã®ã‚µã‚¤ãƒˆã ã‚ˆã­ï¼Ÿ\r\n16:40:52 takefumi   > ãªã¾ã†ãŸã£ã¦\r\n16:41:17 hiroyuki   > ãã†ã§ã™ã€‚\r\n16:41:25 takefumi   > cp-imjm-namauta-info@ml.mfac.jp ãŒæ­£ã—ã„è»¢é€ã•ãã¨ãŠã‚‚ã‚ã‚Œã€‚\r\n16:41:41 takefumi   > ï¼ˆã‚¿ã‚¤ãƒ ã‚¹ã‚¿ãƒ³ãƒ—ã¯ãŠã‹ã—ããªã‹ã£ãŸMLã®ç§»è¡Œã¯4æœˆã ã£ãŸ)\r\n16:41:52 tokuhirom  > ã¡ã†ã‹\r\n16:41:59 tokuhirom  > ç§»è¡Œæ™‚ã«ã¡ã‚ƒã‚“ã¨ãƒã‚§ãƒƒã‚¯ã—ãªã„ã¨ã„ã‘ãªã„ã§ã™ã­ã€‚\r\n16:42:07 tokuhirom  > ãã†ã„ã†info@ã¨ã‹ã‚’ã€‚\r\n16:42:17 tokuhirom  > ä¸€å›žå…¨éƒ¨ã® ML ãƒã‚§ãƒƒã‚¯ã—ãŸã»ã†ãŒã‚ˆã•ã’ã€‚\r\n16:42:29 tokuhirom  > é‰„äººã ã‹ãªã‚“ã ã‹ã§ã‚‚ã¡ã‚ƒã‚“ã¨ãŠãã‚Œã¦ãªã‹ã£ãŸè¨˜æ†¶\r\n16:42:47 takefumi   > mf147ä½¿ã£ã¦ã‚‹ã®ã‚‚ã€æ˜”ã®åæ®‹ã ã­ã€‚\r\n||<','2007-12-14 16:48:16','2007-12-14 07:48:16'),(229,'kDb4NdWVKY','HTMLè¨ºæ–­ãƒ„ãƒ¼ãƒ«','html','HTMLè¨ºæ–­ãƒ„ãƒ¼ãƒ«\r\n\r\n>|html|\r\nhttp://www.xhtml-css.com/\r\n||<','2007-12-16 11:10:23','2007-12-16 02:10:23'),(230,'fUCRTv47YJ','ãƒ–ãƒ©ãƒ³ãƒãã£ãŸ','works','>|sh|\r\n[yamanaka@gj054.mfac.jp]$ svn cp svn+ssh://192.168.200.53/var/SVNROOT/Phoenix/trunk/Phoenix svn+ssh://192.168.200.53/var/SVNROOT/Phoenix/branches/PhoenixPreviewHappyDeco\r\n||<','2007-12-17 19:56:14','2007-12-17 10:56:14'),(231,'VukJEc1aRv','M::S::P::DateTime','works','ã¾ã‚ã€ã“ã‚“ãªæ„Ÿã˜ã§ã‚„ã£ã¦ã‚„ã‚Œã°ç°¡å˜ã«æ—¥ä»˜åˆ¤å®šã§ãã‚‹ã€‚\r\n\r\n>|perl|\r\n[% datetime.between( datetime({ year => 2003 , month => 7 }), datetime({ year => 2008 , month => 7 })) %]\r\n||<','2007-12-19 11:39:17','2007-12-19 02:39:17'),(232,'Dg0fBhAfFD','DateTime between','perl','ã“ã‚“ãªæ„Ÿã˜ã§æ‹¡å¼µã—ã¦ã‚„ã£ãŸã®ã§ã€æœŸé–“åˆ¤å®šãŒã§ãã‚‹ã‚ˆã†ã«ãªã£ãŸã€‚\r\n\r\n\r\n>|perl|\r\nsub between {\r\n    my ( $self, $from_dt, $to_dt ) = @_;\r\n\r\n    if( $from_dt <= $self && $self <= $to_dt ) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n||<','2007-12-19 15:22:49','2007-12-19 06:22:49'),(233,'InrprfYpdU','N905iBizã€€ã®ç™ºå£²æ—¥','works','ç™ºå£²æ—¥ã®æƒ…å ±ã‚½ãƒ¼ã‚¹\r\n\r\n>|html|\r\nhttp://blog.goo.ne.jp/goo-de-ss1230/e/2a5cfe1769917a2a417182855c9c9206\r\nhttp://www.nec.co.jp/press/ja/0712/1702.html\r\nhttp://www.docomo.biz/html/product/n905ibiz/\r\n||<','2007-12-19 17:48:44','2007-12-19 08:48:44'),(234,'sQRPYYD4MF','mysql ã®ç„¡é§„ã«æˆé•·ã—ãŸãƒ—ãƒ­ã‚»ã‚¹ã‚’æ¶ˆã™äºº','perl','\r\nmysql ã®ç„¡é§„ã«æˆé•·ã—ãŸãƒ—ãƒ­ã‚»ã‚¹ã‚’æ¶ˆã™äºº\r\n\r\n>|perl|\r\n#!/usr/bin/perl -I/usr/local/mf/site_perl\r\npackage Hiroyuki::MySQL::Process;\r\nuse strict;\r\nuse warnings;\r\n\r\nuse DBI;\r\n\r\n# -------------------------------------------------------------------------\r\n# ç„¡é§„ã«æˆé•·ã—ãŸMySQLã®Sleepå›ã‚’Killã—ã¾ã™ã€‚\r\n#\r\n# -------------------------------------------------------------------------\r\nsub kill {\r\n    my $class = shift;\r\n\r\n    my $dbh = DBI->connect(\'dbi:mysql:mysql;mysql_read_default_file=/usr/local/mf/mftools/etc/my.cnf;\',\'root\', \'\');\r\n    my $sth = $dbh->prepare(\"SHOW PROCESSLIST;\");\r\n    $sth->execute;\r\n\r\n    while( my $result = $sth->fetchrow_hashref ) {\r\n        if( $result and $result->{Command} eq \'Sleep\' and $result->{Time} > 500 ) {\r\n            my $kill_process = $dbh->prepare(\"KILL ? ;\");\r\n            $kill_process->execute($result->{Id});\r\n        }\r\n    }\r\n}\r\n\r\npackage main;\r\n\r\nHiroyuki::MySQL::Process->kill;\r\n\r\n1;\r\n||<\r\n','2007-12-20 14:42:03','2007-12-20 05:42:03'),(235,'AWy9GuqK8G','YAMLã®æ§‹æ–‡ãƒã‚§ãƒƒã‚¯å›','perl','YAMLã®æ§‹æ–‡ãƒã‚§ãƒƒã‚¯å›\r\n\r\n\r\n>|perl|\r\n#!/usr/local/bin/perl\r\npackage Hiroyuki::Script::YAMLCheck;\r\n# -------------------------------------------------------------------------\r\n# YAML æ§‹æ–‡ãƒã‚§ãƒƒã‚¯\r\n#\r\n# -------------------------------------------------------------------------\r\nuse strict;\r\nuse warnings;\r\nuse YAML::Syck;\r\nuse Data::Dumper;\r\n\r\nsub run {\r\n    my ($self , $file_name) = @_;\r\n\r\n    if( $file_name ) {\r\n        warn Dumper(LoadFile($file_name));\r\n    }\r\n    else {\r\n        die \"./yaml_check.pl file_path\"\r\n    }\r\n}\r\n\r\npackage main;\r\n\r\nHiroyuki::Script::YAMLCheck->run($ARGV[0]);\r\n\r\n1;\r\n||<','2007-12-20 14:44:05','2007-12-20 05:44:05'),(236,'EVp2EXIpBY','JukeBoxä»Šå›žã®ç”³è«‹æœŸé–“ã§ã®æ–°æ›²æ•°ã‚’ã ã™ã€‚','works','ãƒ¡ãƒ­ã¯æŠ½å‡ºScriptã«ã€€# melodyã®å ´åˆã¯atokeshi_public_fgã‚’ãƒã‚§ãƒƒã‚¯ã™ã‚‹ã€€ã¨æ›¸ã‹ã‚Œã¦ã„ã‚‹ç‚º\r\nè€ƒæ…®ã—ã¦ã„ã‚Œã‚‹ã€‚\r\n\r\n>|sql|\r\nSELECT \r\nid,title,published_on  \r\nFROM \r\ncontent \r\nWHERE  \r\n\'2007-09-01\' <= published_on AND \r\npublished_on <= \'2007-11-30\' AND \r\natokeshi_public_fg = 1            AND \r\natokeshi_type = \'melody\' \r\nORDER BY published_on DESC;\r\n||<\r\n\r\nã†ãŸã¯è€ƒæ…®ã—ãªã„ã€‚\r\n\r\n>|sql|\r\nSELECT \r\nid,title,published_on  \r\nFROM \r\ncontent \r\nWHERE  \r\n\'2007-09-01\' <= published_on  AND\r\n published_on <= \'2007-11-30\'  AND \r\natokeshi_type = \'uta\' \r\nORDER BY published_on DESC;\r\n||<\r\n\r\n[mf-troubleshooter-system:28]  [Jasrac]200707-200708ã®æ–°æ›²ç”³è«‹æ¼ã‚Œ\r\n\r\nã“ã¡ã‚‰ã®SQLã‚’å‚è€ƒã«ã—ã¦å‡ºã™ã¿ãŸã„ã ã€‚\r\n\r\n>|sql|\r\nselect content.id, content.title, content.published_on, content_genre_cache.genres\r\nfrom content, content_genre_cache, copyright\r\nwhere\r\n  content.id = content_genre_cache.content_id_one       AND\r\n  content.id = copyright.content_id_one                 AND\r\n  content.atokeshi_type = \'uta\'                         AND\r\n  content.file_status = \'registered\'                    AND\r\n  content_genre_cache.genres not like \'%,oto,%\'         AND\r\n  content_genre_cache.genres not like \'%,original,%\'    AND\r\n  content_genre_cache.genres not like \'%,longcover,%\'   AND\r\n  content_genre_cache.genres not like \'%,longacapela,%\' AND\r\n  content_genre_cache.genres not like \'%,fullcover,%\'   AND\r\n  content_genre_cache.genres not like \'%,fullacapela,%\' AND\r\n  content_genre_cache.genres not like \'%,medley,%\'      AND\r\n  content_genre_cache.genres not like \'%,gakuen,%\'      AND\r\n  content_genre_cache.genres not like \'%,iutakami,%\'    AND\r\n  content.published_on between \'2007-09-01\' AND \'2007-11-30\' \r\norder by content.published_on\r\n||<\r\n\r\nã“ã‚Œã§ã ã™ã€‚\r\n\r\nã¾ã¡ãŒã£ã¦ nonè¨­å®šã•ã‚Œã¦ã„ãŸäººãŸã¡ã‚’UPDATE\r\n\r\n>|sql|\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19605;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19606;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19652;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19653;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19654;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19655;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19656;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19657;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19658;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19693;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19695;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19696;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19699;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19700;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19701;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19702;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19703;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19704;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19705;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19747;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19748;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19749;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19750;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19751;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19752;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19753;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19754;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19755;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19756;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19757;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19758;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19759;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19760;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19761;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19762;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19763;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19483;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19485;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19488;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19541;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19542;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19546;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19548;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19549;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19550;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19551;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19552;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19553;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19554;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19598;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19599;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19600;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19601;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19602;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19603;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19604;\r\nUPDATE copyright SET association = \'jasrac\' WHERE content_id_one = 19482;\r\n||<\r\n\r\n','2007-12-21 12:22:56','2007-12-21 07:42:11'),(237,'vOqCTAuKbp','Perlbal lib/Perlbal/Plugin/UrlGroup.pmã€€ã®ãƒ‘ãƒƒãƒ','works','ã“ã†ã™ã‚‹ã¨ã€ç‰¹å®šã®ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã¸é£›ã°ã•ã‚Œã‚‹ã€‚\r\n\r\n>|perl|\r\n-my $static_service_postfix = \'_static\';\r\n-my $manage_command = \'manage_command.group\';\r\n-my $extension_regex = \'\\.(jpg|gif|png|js|css|swf)$\';\r\n+my $static_service_postfix = {\r\n+    jpg     => \'_static\',\r\n+    gif     => \'_static\',\r\n+    png     => \'_static\',\r\n+    js      => \'_static\',\r\n+    css     => \'_static\',\r\n+    swf     => \'_static\',\r\n+    output  => \'_output\',\r\n+};\r\n+my $extension_regex        = \'\\.(jpg|gif|png|js|css|swf)$\';\r\n+my $extension_regex_path   = \'^\\/(output)\\/\';\r\n\r\n+my $manage_command         = \'manage_command.group\';\r\n+\r\n # when \"LOAD\" directive loads us up\r\n sub load {\r\n     my $class = shift;\r\n@@ -106,7 +116,14 @@\r\n     $chk_uri =~ s/\\?.+$//g;\r\n\r\n     if ( $target ) {\r\n-        my $dest_service = $chk_uri =~ /$extension_regex/ ? $target.$static_service_postfix : $target;\r\n+        my $dest_service;\r\n+        if( $chk_uri =~ /$extension_regex_path/ || $chk_uri =~ /$extension_regex/ ) {\r\n+            my $postfix_key = $1;\r\n+            $dest_service   = $target.$static_service_postfix->{$postfix_key};\r\n+        }\r\n+        else {\r\n+            $dest_service = $target;\r\n+        }\r\n||<','2007-12-21 12:33:04','2007-12-21 03:33:46'),(238,'rhcQAmhpcR','ãƒ¦ãƒ‹ãƒ¼ã‚¯ã‚¢ã‚¯ã‚»ã‚¹ã‚’ãƒã‚¤ãƒ³ãƒˆã¸å¤‰æ›ã™ã‚‹ã‚µã‚¤ãƒˆ','neta','æ„å¤–ã¨ä½¿ãˆãã†ãªãƒã‚¿ãªã®ã§ã€ãªã«ã‹ã‚„ã£ã¦ã¿ã‚‹ã“ã¨ã«ã—ã¦ã¿ã‚‹ã€‚\r\nLaboã§ã™ãŒã€‚','2007-12-21 14:32:47','2007-12-21 05:32:47'),(239,'TTTNGJqSl3','[python] åŸºæœ¬çš„ãªæ©Ÿèƒ½','python','* ç¹°ã‚Šè¿”ã—æ–‡\r\n\r\n*for\r\n\r\n>|python|\r\n  1 for x in [\'cat\', \'window\', \'defenestrate\']:\r\n  2     print x, len(x)\r\n||<\r\n\r\n* while\r\n\r\n>|python|\r\n  1 i = 0;\r\n  2 while i < 10:\r\n  3     print i ;\r\n  4     i += 1;\r\n||<\r\n\r\n* ãƒ•ã‚¡ã‚¤ãƒ«èª­ã¿è¾¼ã¿\r\n\r\n>|python|\r\n  1 f = open(\'./hoge.py\', \'r\' )\r\n  2\r\n  3 for line in f:\r\n  4     print line\r\n  5\r\n  6 f.close\r\n||<\r\n\r\n * æ¨™æº–å…¥å‡ºåŠ›ã‹ã‚‰ã®èª­ã¿è¾¼ã¿\r\n\r\n>|python|\r\nimport sys;\r\n\r\nfor line in sys.stdin:\r\n    print line\r\n||<\r\n\r\n \r\n* ä¾‹å¤–ã‚’å‡¦ç†\r\n\r\n>|python|\r\n  1 import sys\r\n  2\r\n  3 try:\r\n  4     for line in sys.stdin:\r\n  5         print line\r\n  6 except IOError:\r\n  7     print \'io error\'\r\n||<\r\n\r\n\r\n* æ”¹è¡Œã‚’æ¶ˆã™\r\n\r\nline[:-1] ã¯ã€lineã®æœ€å¾Œã«å…¥ã£ã¦ã„ã‚‹æ”¹è¡Œã‚³ãƒ¼ãƒ‰ \'\\n\' ã‚’å–ã‚Šé™¤ãã¾ã™ã€‚ line.strip()ã§ã‚‚\'\\n\'ã¯å–ã‚Šé™¤ã‹ã‚Œã¾ã™ãŒã€ã¤ã„ã§ã«é ­ã‚„ãŠã—ã‚Šã«ä»˜ã„ã¦ã„ã‚‹ã‚¿ãƒ–ã‚„ç©ºç™½æ–‡å­—ã‚‚å–ã‚ŠåŽ»ã‚‹ã®ã§ã€ã‚¿ãƒ–åŒºåˆ‡ã‚Šã®è¡Œã‚’æ‰±ã†ã®ã«ã¯é©ã—ã¦ã„ã¾ã›ã‚“ã€‚ï¼ˆä¾‹ãˆã°ã€åˆã‚ã®ã‚«ãƒ©ãƒ ã®å†…å®¹ãŒãªã„å ´åˆãªã©ï¼‰\r\n\r\n>|python|\r\n  1 import sys\r\n  2\r\n  3 for line in open(\'hoge.csv\',\'r\'):\r\n  4     itemList = line[:-1].split(\',\')\r\n  5     print itemList[0] + itemList[1]\r\n||<\r\n\r\n\r\n* package \r\n\r\nã‚ã‚‹ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã‚’ã€ãƒ‘ãƒƒã‚±ãƒ¼ã‚¸ãŒå…¥ã£ãŸãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã¨ã—ã¦Python ã«æ‰±ã‚ã›ã‚‹ã«ã¯ã€ãƒ•ã‚¡ã‚¤ãƒ« __init__.py ãŒå¿…è¦ã§ã™: ã“ã®ãƒ•ã‚¡ã‚¤ãƒ«ã‚’ç½®ã‹ãªã‘ã‚Œã°ãªã‚‰ãªã„ã®ã¯ã€\"string\" ã®ã‚ˆã†ãªã‚ˆãã‚ã‚‹åå‰ã®ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã«ã‚ˆã‚Šã€ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ«æ¤œç´¢ãƒ‘ã‚¹ã®å¾Œã®æ–¹ã§è¦‹ã¤ã‹ã‚‹æ­£ã—ã„ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ«ãŒæ„å›³ã›ãšéš è”½ã•ã‚Œã¦ã—ã¾ã†ã®ã‚’é˜²ããŸã‚ã§ã™ã€‚æœ€ã‚‚ç°¡å˜ãªã‚±ãƒ¼ã‚¹ã§ã¯ __init__.py ã¯ãŸã ã®ç©ºãƒ•ã‚¡ã‚¤ãƒ«ã§æ§‹ã„ã¾ã›ã‚“ãŒã€__init__.py ã§ã¯ãƒ‘ãƒƒã‚±ãƒ¼ã‚¸ã®ãŸã‚ã®åˆæœŸåŒ–ã‚³ãƒ¼ãƒ‰ã‚’å®Ÿè¡Œã—ãŸã‚Šã€å¾Œè¿°ã® __all__ å¤‰æ•°ã‚’è¨­å®šã—ã¦ã‚‚ã‹ã¾ã„ã¾ã›ã‚“ã€‚\r\n\r\nã¤ã¾ã‚Šã€\r\n\r\n>|sh|\r\nnorn/\r\n__init__.py \r\n||<\r\n\r\nã¨ã„ã†é¢¨ã«ãŠã„ã¦ãŠã‹ãªã„ã¨ã ã‚ã ã€‚\r\n\r\nã§ã€importã™ã‚‹ã¨ãã¯ã€\r\n\r\n>|python|\r\nimport Norn.Log.Apache.tail\r\n||<\r\n\r\nã®ã‚ˆã†ãªæ„Ÿã˜ã§ã‚ˆã³ã ã™ã€‚\r\n\r\n\r\n* import\r\n\r\nã“ã†ã‚„ã‚Œã°ã€ç›´æŽ¥æŒ‡å®šã§ãã‚‹\r\n\r\n>|python|\r\nfrom Norn.Log.Apache.tail import combined_log\r\n\r\ncombined_log()\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-12-24 13:02:55','2007-12-24 08:11:44'),(240,'alRHtuaaJn','ç™»éŒ²ã•ã‚Œã¦ã„ãªã„æ¥½æ›²ã®å ´åˆè¿”ã™å‡¦ç†','works','site_perl/Phoenix/Pages/Sound/Download.pm\r\n\r\n>|perl|\r\n+    # ç™»éŒ²ã•ã‚Œã¦ã„ãªã„æ¥½æ›²ã®å ´åˆã¯è¿”ã£ã¦ãã ã•ã„\r\n+    #unless( grep { ($self->r->param(\'content_rid\') || \'\') eq $_ } @{$self->site->config->sound_free_contents||[]} ) {\r\n+    #    $self->mfwarn(\"@{[$self->r->param(\'content_rid\')]} is not free in this site ( @{[$self->site]} ) \");\r\n+    #    $self->redirect(\'/\');\r\n+    #}\r\n||<','2007-12-25 12:26:59','2007-12-25 03:26:59'),(241,'1QC8y7loUw','Sukinaã®configã®æ„å‘³ãŒåˆ†ã‹ã‚‰ãªã„ã‚„ã¤ã®ãƒ¡ãƒ¢','works','>|perl|\r\nIndex: phoenix/domains/sukina.jp/conf/config.yaml\r\n===================================================================\r\n--- phoenix/domains/sukina.jp/conf/config.yaml  (revision 25947)\r\n+++ phoenix/domains/sukina.jp/conf/config.yaml  (working copy)\r\n@@ -60,6 +60,10 @@\r\n   ftp_file  : \'/var/ftp/virtual_user/tw/cp/sukina/member_info/99jpop_daily.csv\'\r\n   backup_dir: \'/home/mf/kccs/sukina/backupfiles\'\r\n\r\n+  free_content_rids:\r\n+    - 22HpQc2AfX\r\n+    - UDKXcLTSyh\r\n+\r\n # é‹ç”¨æ™‚ã¯ãƒ†ãƒ³ãƒ—ãƒ¬ãƒ¼ãƒˆéžå¯¾å¿œæ©Ÿç¨®ã§ã‚‚ä½¿ãˆã‚‹ã‚ˆã†ã«ã™ã‚‹\r\n # â†“ã¯ãã‚Œç”¨ã®è¨­å®šã€‚authorizer: ã«å…¥ã‚Œæ›¿ãˆã¦ä½¿ã†\r\n   authorizer:\r\n@@ -125,7 +129,12 @@\r\n             name : body\r\n             funcs:\r\n                 - NOT_NULL\r\n-\r\n+\r\n+  # Subscribe::Enquete::AfterSupport ç”¨ã®è¨­å®š\r\n+  subscribe_enquete_after_support:\r\n+    trigger_names:\r\n+        - PHOENIX_ROOT_PAGE\r\n+\r\n||<\r\n\r\nã¤ã„ã§ã«hitrankã‚‚\r\n>|perl|\r\nIndex: phoenix/domains/hitrank.jp/conf/config.yaml\r\n===================================================================\r\n--- phoenix/domains/hitrank.jp/conf/config.yaml (revision 25947)\r\n+++ phoenix/domains/hitrank.jp/conf/config.yaml (working copy)\r\n@@ -135,7 +135,7 @@\r\n\r\n dev:\r\n   company: AjZZ1Za4R4\r\n-  db_name: phoenix_site\r\n+  db_name: phoenix_hitrank\r\n   log:\r\n     - class: File\r\n       conf:\r\n||<\r\n\r\n\r\n','2007-12-25 12:39:35','2007-12-25 03:41:55'),(242,'b0prdnzSCi','ç‰¹å®šã®ãµãã„ã‚‹ã ã‘ã¾ã¨ã‚ã‚³ãƒ”ãƒ¼ã™ã‚‹ã€‚','works','ç‰¹å®šã®ãµãã„ã‚‹ã ã‘ã¾ã¨ã‚ã‚³ãƒ”ãƒ¼ã™ã‚‹ã€‚\r\n\r\n>|sh|\r\nls jasrac200709_200712_ver3/* | \r\ngrep \'_melody.tsv\' | perl -ne \'chomp ; system(\"cp $_  /home/yamanaka/jasrac200709_200712_ver3_melody/\"); \'\r\n||<','2007-12-25 14:11:29','2007-12-25 06:32:22'),(243,'xrYV6FoFeb','ã‚¨ãƒ•ãƒ«ãƒ¼ãƒˆãƒšãƒ¼ã‚¸åˆ¥ã‚¯ãƒªãƒƒã‚¯æ•°','works','* å–å¾—ç”¨Hash(UtaKami)\r\n\r\n>|perl|\r\nmy %require_uri = (\r\n\'/\'  =>  \'TOP\',\r\n\'/melody/new\'  =>  \'æ–°ç€(ç€ï¾’ï¾›æ–°ç€æ›²)\',\r\n\'/melody/melody_schedule.cgi\'  =>  \'æ¬¡å›žè¿½åŠ æ›²\',\r\n\'/melody/ranking.cgi\'  =>  \'ï¾—ï¾ï½·ï¾ï½¸ï¾ž(1ï½ž30ä½)\',\r\n\'/melody/ranking_weekly.cgi\'  =>  \'é€±é–“ï¾—ï¾ï½·ï¾ï½¸ï¾ž\',\r\n\'/melody/ranking.cgi?span=30\'  =>  \'æœˆé–“ï¾—ï¾ï½·ï¾ï½¸ï¾ž\',\r\n\'/melody/search.cgi\'  =>  \'æ¤œç´¢(ï½·ï½°ï¾œï½°ï¾„ï¾ž)\',\r\n\'/melody/artist/\'  =>  \'ï½±ï½°ï¾ƒï½¨ï½½ï¾„åã§æŽ¢ã™\',\r\n\'/melody/title/\'  =>  \'æ›²åã§æŽ¢ã™\',\r\n\'/melody/list_tv.cgi\'  =>  \'ï¾ƒï¾šï¾‹ï¾žå±€ã§æŽ¢ã™\',\r\n\'/melody/list.cgi\'  =>  \'ï½¼ï¾žï½¬ï¾ï¾™åˆ¥\',\r\n\'/melody/list.cgi?genre=tvcm\'  =>  \'æ˜ ç”»ï½¥TVï½¥CM\',\r\n\'/melody/list.cgi?genre=anime\'  =>  \'ã‚¢ãƒ‹ãƒ¡ãƒ»ã‚²ãƒ¼ãƒ \',\r\n\'/melody/pickup_tv_list\'  =>  \'ï¾„ï¾žï¾—ï¾(æ›œæ—¥åˆ¥ã«æŽ¢ã™)\',\r\n);\r\n||<\r\n\r\n\r\n* AniTenã®é›†è¨ˆçµæžœ\r\n\r\n>|perl|\r\n$VAR1 = {\r\n          \'/melody/list_tv.cgi\' => 52,\r\n          \'/melody/search.cgi\' => 299,\r\n          \'/melody/artist_ranking\' => 13,\r\n          \'/\' => 74904,\r\n          \'/melody/new.cgi\' => 14,\r\n          \'/melody/ranking.cgi?span=7\' => 7,\r\n          \'/melody/feature\' => 42,\r\n          \'/melody/artist/\' => 11,\r\n          \'/melody/title/\' => 15,\r\n          \'/melody/ranking.cgi?span=30\' => 9,\r\n          \'/melody/pickup_tv_list\' => 21,\r\n          \'/melody/ranking.cgi\' => 75,\r\n          \'/melody/list.cgi\' => 137,\r\n          \'/melody/melody_schedule.cgi\' => 19\r\n        };\r\n||<\r\n\r\n*get_access_url_hash  ã®ä¸Šæ›¸ãã—ã¦è‡ªå‹•åŒ–ã—ã‚ˆã†ã‹ã¨æ€ã£ãŸã‘ã©ã‚„ã‚ãŸ\r\n\r\n>|perl|\r\n# -------------------------------------------------------------------------\r\n# å‡ºåŠ›ç”¨hashé–¢æ•°\r\n#\r\n# -------------------------------------------------------------------------\r\nsub get_access_url_hash {\r\n    my ( $self, $require_uri ) = @_;\r\n\r\n    my $result = {};\r\n    for my $url ( keys %$require_uri ) {\r\n        my $url_string = $url;\r\n        $url_string =~ s#(/|\\?|\\.|=)#_#g;\r\n        $result->{\'top\' . $url_string} = $url;\r\n    }\r\n\r\n    return $result;\r\n}\r\n||<\r\n\r\n','2007-12-26 16:26:13','2007-12-26 10:14:55'),(244,'myNhkzQJKT','svn ã® merge','works','>|sh|\r\nsvn merge -r25803:HEAD svn+ssh://192.168.200.53/var/SVNROOT/Phoenix/branches/PhoenixPreviewHappyDeco\r\n||<','2007-12-26 17:33:09','2007-12-26 08:33:09'),(245,'ATNAV5d6Xn','ã²ã£ã¨ã‚‰ã‚“ã“ã®æ›´æ–°','works','\r\n>||\r\nãƒ¡ãƒ­ã¯å‡ºã•ãªã„ã§ã€ã†ãŸã®å…¥ã£ã¦ã„ãªã„ã‚¢ãƒ¼ãƒ†ã‚£ã‚¹ãƒˆã‚’éžè¡¨ç¤ºã«ã™ã‚‹ã“ã¨ã£ã¦å¯èƒ½ã§ã™ã‹ï¼Ÿ\r\n14:50 (hiroyuki_) å¯èƒ½ã§ã™ãŒã€ãã£ã¡ã®æ–¹ãŒã„ã„ã§ã™ã‹ã€‚\r\n14:50 (nami) ãƒ’ãƒƒãƒˆãƒ©ãƒ³ã‚¯ã¯ã€é€šå¸¸ã®ãƒ¡ãƒ­ã¨ã†ãŸã®åŒºåˆ¥ãŒã¤ã„ã¦ãªã„ã®ã§ã€ãƒ¡ãƒ­ã®åæ˜ ã¯ã—ã¦ãªã„ã®ã§ã™\r\n14:51 (hiroyuki_) ãƒ¡ãƒ­ã‚µã‚¤ãƒˆãªã®ã«\r\n14:52 (nami) ãƒ¡ãƒ­ã ã‘ã©ç€ã‚«ãƒãƒ»ã†ãŸã‚’å‰é¢ã«ã†ã¡ã ã—ã¦ã‚‹ã‚µã‚¤ãƒˆãªã‚“ã§ã™ã‚ˆã€‚\r\n14:52 (nami) ãªã®ã§ã€ãƒ©ãƒ³ã‚­ãƒ³ã‚°ã«ã‚‚ãƒ¡ãƒ­ã¯åæ˜ ã•ã‚Œãªã„ã‚ˆã†ã«ãªã£ã¦ã„ã¾ã™\r\n||<','2007-12-26 19:37:29','2007-12-26 10:37:29'),(246,'gXj1tB5XHW','16	Odd number of elements in hash assignment at /usr/local/mf/site_perl/Phoenix/Dispatcher.pm line 28.','works','ã“ã¡ã‚‰ã®ãƒ‡ãƒ¼ã‚¿ãŒãšã‚Œã‚‹\r\n\r\n>|perl|\r\n    my %args = $r->args;\r\n||<\r\n\r\nã§ã€è‰²ã€…ã‚¢ã‚¯ã‚»ã‚¹ã—ã¦ãŸã‚ã—ã¦ã¿ãŸã‚“ã ã‘ã©ã€\r\n\r\n>|html|\r\n/?tr=hoge&=\r\n||<\r\n\r\nçµæžœã¯ã“ã‚“ãªæ„Ÿã˜\r\n\r\n>|perl|\r\n$VAR1 = bless( do{\\(my $o = 159901276)}, \'Apache\' );\r\n$VAR1 = {\r\n          \'tr\' => \'hoge\',\r\n          \'aaa\' => undef\r\n        };\r\nUse of uninitialized value in list assignment at /home/yamanaka/site_perl/Phoenix/Dispatcher.pm line 28.\r\n$VAR1 = bless( do{\\(my $o = 159901276)}, \'Apache\' );\r\n$VAR1 = {\r\n          \'\' => undef,\r\n          \'tr\' => \'hoge\'\r\n        };\r\n||<\r\n\r\nç‰¹ã«ãšã‚Œã¦ã„ã‚‹æ„Ÿã˜ã¯ã—ãªã„ã€‚\r\n\r\nã¡ãªã¿ã«ã€Apacheã¨ã„ã†ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ«ã«argsã¯ç”Ÿãˆã¦ã„ã‚‹ã€‚\r\n\r\n>|perl|\r\nsub args {\r\n    my($r, $val) = @_;\r\n    my $args = @_ > 1 ? $r->query_string($val) : $r->query_string;\r\n    return $args unless wantarray;\r\n    parse_args(1, $args);\r\n}\r\n||<\r\n\r\nã“ã†ã„ã†ã‚¢ã‚¯ã‚»ã‚¹ã®å ´åˆã€èµ·ãã¦ã„ã‚‹ã€‚\r\n\r\n>|html|\r\n/hgoe\r\n||<\r\n\r\nã§ãŸã€‚\r\n\r\n>|perl|\r\nOdd number of elements in hash assignment at /home/yamanaka/site_perl/Phoenix/Dispatcher.pm line 28.\r\n||<\r\n\r\n','2007-12-28 11:21:16','2007-12-28 02:29:17'),(247,'xln3r5r8aL','mysql ã®binary log ã®æ¶ˆã—æ–¹ã€‚','mysql','ã“ã‚“ãªæ„Ÿã˜ã§æ¶ˆã™ã€‚\r\næ˜”ã®ã‚„ã¤ã‚’æ¶ˆã™ã‚ˆã†ã«ã™ã‚‹ã“ã¨ã€‚æœ€è¿‘ã®ã‚„ã¤ã‚’ã‘ã™ã¨å¤§å¤‰ãªã“ã¨ã«ãªã‚Šã¾ã™ã‚ˆã€‚\r\n\r\n>|sh|\r\ncd /var/lib/mysql\r\nrm -f gj100-bin.000400\r\n||<','2007-12-28 14:50:11','2007-12-28 05:50:11'),(248,'5uBeu3dbbQ','ã—ã—ã‚ƒã‚‚ã¯ã©ã†ã‚„ã£ã¦è¿”äº‹ã‚’ä½œã£ã¦ã„ã‚‹ã®ã‹','sixamo.rb','ã“ã‚Œã«ç­”ãˆå¾—ã‚‹ãŸã‚ã«ã¯ã€å­¦ç¿’ã®è»¢æ©Ÿã«ã¤ã„ã¦ç­”ãˆãªã‘ã‚Œã°ãªã‚‰ãªã„ã€‚\r\n\r\n* é€šå¸¸ã®ãƒ•ãƒ­ãƒ¼\r\n\r\nã¾ãšã€æœ€åˆã«å¼•æ•°ã¨ã—ã¦â€æ–‡å­—åˆ—â€ãŒæ¸¡ã•ã‚Œã¾ã™ã€‚\r\n\r\n>|ruby|\r\n818                 sixamo.memorize(str)\r\n||<\r\n\r\næ–‡å­—åˆ—ã‚’å—ã‘å–ã£ãŸå ´åˆã€å¿…ãšã€Dictionary ã‚¯ãƒ©ã‚¹ã®split_into_keywordsãƒ¡ã‚½ãƒƒãƒ‰ãŒå‘¼ã³å‡ºã•ã‚Œã¾ã™ã€‚\r\n\r\n>|ruby|\r\n227             if str\r\n228                 keywords = @dic.split_into_keywords(str)\r\n229             else\r\n||<\r\n\r\nsplit_into_keywordsã¯æ–‡å­—åˆ—ã‚’ãã®ã¾ã¾ split_into_termsã«å¼•ãæ¸¡ã—ã¾ã™ã€‚ã€‚\r\n\r\n>|ruby|\r\n512             terms = split_into_terms(str)\r\n||<\r\n\r\nãã—ã¦ã€ã‚„ã‚„ã“ã—ã„ã“ã¨ã«ã€æ–‡å­—åˆ—ã¯ãã®ã¾ã¾ Trieã‚¯ãƒ©ã‚¹ã®split_into_termsã«å¼•ãæ¸¡ã—ã¦ã„ã¾ã™\r\n\r\n>|ruby|\r\n521         def split_into_terms(str,num=nil)\r\n522             @trie.split_into_terms(str,num)\r\n523         end\r\n||<\r\n\r\n\r\nTrieã® split_into_termsã¯ã€å—ã‘å–ã£ãŸæ–‡å­—åˆ—ãŒï¼ä»¥ä¸Šã®ã‚µã‚¤ã‚ºã§ç¬¬ï¼’å¼•æ•°ãŒç„¡ã„å ´åˆ\r\nwhileãƒ«ãƒ¼ãƒ—ãŒå›žã‚Šç¶šã‘ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n729         def split_into_terms(str,num=nil)\r\n730             result = []\r\n731\r\n732             return result unless str\r\n733\r\n734             while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n735                 prefix = longest_prefix_subword(str)\r\n736                 if prefix\r\n737                     result << prefix\r\n738                     str = str[prefix.size..-1]\r\n739                 else\r\n740                     chr = /./m.match(str)[0]\r\n741                     result << chr if num\r\n742                     str = Regexp.last_match.post_match\r\n743                 end\r\n744             end\r\n745\r\n746             result\r\n747         end\r\n||<\r\n\r\nãã‚Œã§ã€è‚ã¨ãªã‚‹ã€longest_prefix_subwordã¯\r\nself.root ã®ä¸­ã§æ–‡å­—åˆ—ãŒå«ã¾ã‚Œã‚‹ã‚‚ã®ã®æœ€å¤§ã®é•·ã•ã®ã‚‚ã®ã‚’è¿”ã—ã¾ã™ã€‚\r\nè“„ç©ãŒã§ãã‚‹å‰ã®é€šå¸¸ãƒ•ãƒ­ãƒ¼ãªã®ã§prefix ã¯ undefã«ãªã‚Šã¾ã™ã€‚\r\nã§ã™ã®ã§ã€é€šã‚‹ãƒ•ãƒ­ãƒ¼ã¯ã“ã¡ã‚‰ã«ãªã‚Šã¾ã™ã€‚\r\n\r\n>|ruby|\r\n739                 else\r\n740                     chr = /./m.match(str)[0] # æ–‡å­—åˆ—ã®å…ˆé ­ã‚’è¿”ã™\r\n741                     result << chr if num       # ã“ã®å ´åˆã¯é€šã‚‰ãªã„\r\n742                     str = Regexp.last_match.post_matchã€€\r\n743                 end\r\n||<\r\n\r\nRegexp.last_match.post_matchã¯é›£ã—ãã†ã«è¦‹ãˆã‚‹ã‚“ã§ã™ãŒã€å®Ÿã¯ã€ç¾åœ¨ã®æ–‡å­—åˆ—\r\nã‹ã‚‰å…ˆé ­ã®æ–‡å­—ã‚’é™¤ã„ãŸæ–‡å­—åˆ—ã‚’è¿”ã—ã¦ã„ã‚‹ã ã‘ã§ã™ã€‚\r\n\r\n>||\r\nhoge â†’ oge\r\n||<\r\n\r\nã ã‹ã‚‰while ãƒ«ãƒ¼ãƒ—ã¯çœŸã«ãªã‚Šã†ã‚‹ã‚ã‘ã§ã™ã­\r\nè©±ã¯ã€split_into_keywordsã¸æˆ»ã£ã¦ãã¾ã™ã€‚\r\næˆ»ã£ã¦ããŸæ–‡å­—åˆ—ã‚’å…ƒã«ãƒãƒƒã‚·ãƒ¥ã‚’ä½œæˆã—ã¾ã™ã€‚\r\nã—ã‹ã—ã€ã“ã®æ™‚ç‚¹ã§ã¯ä½•ã‚‚æˆ»ã£ã¦ã“ãªã„ã®ã§ç©ºã®HashãŒè¿”ã£ã¦ãã¾ã™ã€‚\r\n\r\nmessage_markovã¸ç©ºã®Hashã‚’æ¸¡ã—ã¾ã™ã€‚\r\nã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ãŒé•·ã„ã§ã™ã€‚\r\n\r\n>|ruby|\r\n249             msg = message_markov(keywords)\r\n||<\r\n\r\nkeywrodsã®ã‚µã‚¤ã‚ºãŒï¼ãªã®ã§å‡¦ç†ã¯ã„ããªã‚Šä¸‹è¨˜ã®éƒ¨åˆ†ã¸é£›ã³ã¾ã™ã€‚\r\nä½•ã‚’ã‚„ã£ã¦ã„ã‚‹ã‹ã¨ã„ã„ã¾ã™ã¨ã€ãƒ†ã‚­ã‚¹ãƒˆã‚µã‚¤ã‚ºã®ç¯„å›²ã®å€¤ã§ï¼‘ï¼è¡Œã®ãƒ¦ãƒ‹ãƒ¼ã‚¯ãªæ•°å€¤é…åˆ—ã‚’\r\nä½œæˆã—ã¦ã„ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n293             10.times { lines << rand(@dic.text.size) }\r\n294             lines.uniq!\r\n||<\r\n\r\nå½¢ã«ã™ã‚‹ã¨ã“ã‚“ãªæ„Ÿã˜ã«ãªã‚Šã¾ã™ã€‚\r\n\r\n>|perl|\r\n[\r\n  qw/ 7 3 2 6 1/\r\n]\r\n||<\r\n\r\nãã‚Œã‚’å…ƒã«ä»¥ä¸‹ã®ã‚ˆã†ãªå‡¦ç†ã‚’è¡Œã„ã¾ã™ã€‚\r\nã“ã‚ŒãŒæ„å¤–ã«é¢å€’ãªã‚“ã§ã™ãŒã€\r\nä¸€è¨€ã§è¨€ã£ã¦ã—ã¾ã†ã¨ã€Œtext ã®ä¸­ã‹ã‚‰é©å½“ãªè¡Œã‚’æ•°è¡Œå¾—ã‚‹ãŸã‚ã®å‡¦ç†ã€ã§ã™ã€‚\r\n(collectã‚’ä½¿ã†æ„å‘³ã‚ã‚‹ã®ã‹ã¯ã‚ˆãã‚ã‹ã‚Šã¾ã›ã‚“ï¼‰\r\n\r\n- compact ã¯ self ã‹ã‚‰ nil ã§ã‚ã‚‹è¦ç´ ã‚’å–ã‚Šé™¤ã„ãŸæ–°ã—ã„é…åˆ—ã‚’è¿”ã—ã¾ã™ã€‚\r\n- flatten ãƒã‚¹ãƒˆã—ãŸé…åˆ—ã‚’å¹³æ»‘åŒ–ã—ã¦ãã‚Œã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n296             source = lines.collect do |k,v|\r\n297                 @dic.text[k,5]\r\n298             end.sort_by{ rand }.flatten.compact.uniq\r\n||<\r\n\r\nã§ã€çµæžœã¨ã—ã¦å¾—ãŸæ•°è¡Œã®ãƒ†ã‚­ã‚¹ãƒˆã‚’ Utilã‚¯ãƒ©ã‚¹ã® markovãƒ¡ã‚½ãƒƒãƒ‰ã«ã‚ãŸã—ã¾ã™ã€‚\r\n\r\n* markov\r\n\r\n>|ruby|\r\n300             msg = Util.markov(source, keywords, @dic.trie)\r\n||<\r\n\r\nUtil.markovã¯å†…éƒ¨ã§ã€markov_generateã§ç”Ÿæˆã—ãŸãƒ‡ãƒ¼ã‚¿ã‚’å…ƒã«\r\nmarkov_selectã‹ã‚‰çµæžœã‚’å¾—ã¦è¿”ã—ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n118         def Util.markov(src,keywords,trie)\r\n119             mar = markov_generate(src,trie)\r\n120             result = markov_select(mar,keywords)\r\n121\r\n122             result\r\n123         end\r\n||<\r\n\r\n* markov_generate\r\n\r\nmarkov_generateãŒä½•ã‚’ã‚„ã£ã¦ã„ã‚‹ã‹ã¨ã„ã„ã¾ã™ã¨\r\né•·ãã¦é¢å€’ãªã‚“ã§ã™ãŒã€\r\n\r\næœ€åˆã«trie.split_into_termsã§é…åˆ—ã‚’å¾—ã¾ã™ã€‚\r\nï¼ˆãªã‚“ã§ã€æ”¹è¡Œã¤ã‘ã¦ã‚‹ã®ã‹ã„ã¾ã„ã¡åˆ†ã‹ã‚‰ãªã„ã®ã§ã™ãŒï¼‰\r\n\r\n>|ruby|\r\n129             ary = trie.split_into_terms(src.join(\"\\n\")+\"\\n\",true)\r\n||<\r\n\r\nå‰å›žã¨é•ã£ã¦ num ãŒçœŸãªã®ã§ï¼ˆãŠã‹ã—ã„ã‚ˆã“ã®numã®ä½¿ã„æ–¹ã€ãƒ•ãƒ©ã‚°ä½¿ãˆã‚ˆï¼‰\r\næ–‡å­—åˆ—ãŒãã®ã¾ã¾è¿”ã£ã¦ãã¾ã™ã€‚\r\n\r\n>|ruby|\r\n739                 else\r\n740                     chr = /./m.match(str)[0]\r\n741                     result << chr if num\r\n742                     str = Regexp.last_match.post_match\r\n743                 end\r\n||<\r\n\r\nã¨ã‚ŒãŸé…åˆ—ã®ã‚µã‚¤ã‚ºã‚’ã¨ã£ãŸä¸Šã§ã€é…åˆ—(0..3)ã®å€¤ã‚’é…åˆ—ã«è¶³ã—ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n131             size = ary.size\r\n132             ary.concat(ary[0,MarkovKeySize+1])\r\n||<\r\n\r\nsizeåˆ†ã ã‘ã¾ã‚ã—ã¾ã™ã€‚ã§ã€æ¬¡ã« ary[idx,2] ã‚’ keyã¨ã—ã¦ã¨ã‚‹\r\nå…·ä½“çš„ã«ã¯ã€ä»¥ä¸‹ã®ã‚ˆã†ã« ç¬¬ï¼’å¼•æ•°åˆ†ã®é•·ã•ã ã‘ã‚’keyã¨ã™ã‚‹ã€‚\r\n\r\n>|perl|\r\nary[0,2] # qw/hoge/ â†’ qw/hog/\r\n||< \r\n\r\né…åˆ—ã‚’keyã¨ã—ã¦ã„ã‚‹ãƒãƒƒã‚·ãƒ¥ã‚’ä½œæˆã™ã‚‹ã€‚\r\n\r\n>|ruby|\r\n134             table = {}\r\n135             size.times do |idx|\r\n136                 key = ary[idx,MarkovKeySize]\r\n137                 table[key] = [] unless table.key?(key)\r\n138                 table[key] << ary[idx+MarkovKeySize]\r\n139             end\r\n||<\r\n\r\n** ã“ã“ã«tableã®ãƒ‡ãƒ¼ã‚¿ä¾‹ã‚’å…¥ã‚Œã‚‹\r\n\r\ntable\r\n\r\n>|ruby|\r\n141             uniq = {}\r\n142             backup = {}\r\n143\r\n144             table.each do |k,v|\r\n145                 if v.size == 1\r\n146                     uniq[k] = v[0]\r\n147                 else\r\n148                     backup[k] = table[k].dup\r\n149                 end\r\n150             end\r\n||<\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n','2007-12-30 11:41:54','2007-12-31 04:51:01'),(249,'AIDwABDeL7','[sixamo][Core] ','sixamo.rb','* talk\r\n\r\n** input\r\n\r\næ–‡å­—åˆ—\r\n\r\n>|perl|\r\nã“ã‚“ã«ã¡ã‚\r\n||<\r\n\r\n** output\r\n\r\næ–‡å­—åˆ—\r\n\r\n>|perl|\r\nã“ã‚“ã«ã¡ã‚\r\n||<\r\n\r\n* split_into_keywords\r\n\r\næ–‡å­—åˆ—\r\n\r\n>|perl|\r\nã“ã‚“ã«ã¡ã‚\r\n||<\r\n\r\n** output\r\n\r\næ–‡å­—åˆ—\r\n\r\n>|perl|\r\nã“ã‚“ã«ã¡ã‚\r\n||<\r\n\r\n','2007-12-31 13:30:39','2007-12-31 04:45:24'),(250,'VvSu72yjFI','[sixamo][Trie][split_into_terms] ','sixamo.rb','* èª¬æ˜Ž\r\n\r\nåŸºæœ¬çš„ã«ã€è¾žæ›¸ã«ã‚ã‚‹å˜èªžã‚’æŠœãå‡ºã—ã¦ã„ã‚‹ã€‚\r\n\r\n* å¼•æ•°\r\n\r\n\"Hello World\"ã¨ã„ã£ãŸã‚ˆã†ãªæ–‡å­—åˆ—ã‚’å¼•æ•°ã«å—ã‘ã‚‹ã€‚\r\n\r\n* è©³ç´°\r\n\r\n** talkãƒ¡ã‚½ãƒƒãƒ‰ã‹ã‚‰ã®å‘¼ã³å‡ºã•ã‚ŒãŸå ´åˆã§ã‹ã¤è“„ç©ãŒç„¡ã„å ´åˆ\r\n\r\nè¿”å€¤ã¯ã€é…åˆ—ã¨ãªã‚‹ã€‚talkãƒ¡ã‚½ãƒƒãƒ‰ã‹ã‚‰ã®å‘¼ã³å‡ºã•ã‚ŒãŸå ´åˆã§ã‹ã¤è“„ç©ãŒç„¡ã„å ´åˆã¯\r\nç©ºã®é…åˆ—ã‚’è¿”ã™ã€‚\r\n\r\nãŸã ã—ã€ä¸€å®šä»¥ä¸Šã®è“„ç©ãŒã•ã‚ŒãŸã‚ã¨ã¯ã€prefixãŒçœŸã«ãªã‚‹ã®ã§ãƒ•ãƒ­ãƒ¼ãŒå¤‰ã‚ã‚‹\r\n\r\n>|ruby|\r\n729         def split_into_terms(str,num=nil)\r\n730             result = []\r\n731\r\n732             return result unless str\r\n733\r\n734             while str.size > 0 && ( !num.kind_of?(Numeric) || result.size < num )\r\n735                 prefix = longest_prefix_subword(str)\r\n736                 if prefix\r\n737                     result << prefix\r\n738                     str = str[prefix.size..-1]\r\n739                 else\r\n740                     chr = /./m.match(str)[0]\r\n741                     result << chr if num\r\n742                     str = Regexp.last_match.post_match\r\n743                 end\r\n744             end\r\n745\r\n746             result\r\n747         end\r\n||<','2007-12-31 14:05:29','2008-01-02 01:30:38'),(251,'NCeXzLcCdK','[sixamo][Core][memorize]','sixamo.rb','* å½¹å‰²\r\n\r\nå¼•æ•°ã§å—ã‘ãŸæ–‡å­—åˆ—ã‚’è¾žæ›¸ã¨ãƒ­ã‚°ã«è¨˜éŒ²ã™ã‚‹ã€‚\r\n\r\n* å¼•æ•°\r\n\r\nã‚³ãƒžãƒ³ãƒ‰ãƒ©ã‚¤ãƒ³ã§å…¥åŠ›ã•ã‚ŒãŸè¡Œ \r\n\r\nä¾‹ï¼‰\" Hello World\" \r\n\r\n*è¿”å€¤\r\n\r\nãªã— \r\n\r\n>|ruby|\r\n268         def memorize(lines)\r\n269             @dic.store_text(lines)\r\n270             if @dic.learn_from_text\r\n271                 @dic.save_dictionary\r\n272             end\r\n273         end\r\n||<','2007-12-31 14:12:22','2007-12-31 05:12:22'),(252,'ITZ1ovvdzR','[sixamo][Dictionary][store_text]','sixamo.rb','* å½¹å‰²\r\n\r\nå¼•æ•°ã®æ–‡å­—åˆ—ã‚’ãƒ—ãƒ­ãƒ‘ãƒ†ã‚£ã® textã€€ã¨ã€€ãƒ­ã‚°ãƒ•ã‚¡ã‚¤ãƒ«ã§ã‚ã‚‹sixamo.txtã¸è¨˜éŒ²ã™ã‚‹ã€‚\r\n\r\n* å¼•æ•°\r\n\r\nã‚³ãƒžãƒ³ãƒ‰ãƒ©ã‚¤ãƒ³ã‹ã‚‰ã®å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** gsub\r\n\r\n æ–‡å­—åˆ—ä¸­ã§æŒ‡å®šã—ãŸãƒ‘ã‚¿ãƒ¼ãƒ³ã«ãƒžãƒƒãƒã™ã‚‹éƒ¨åˆ†ã‚’ç½®æ›ã™ã‚‹\r\n\r\n>|ruby|\r\np s.sub(\"Apple\", \"Pine\") #=> \"Pine Banana Apple Orange\"\r\n||<\r\n\r\n** trip\r\n\r\n æ–‡å­—åˆ—ã®å…ˆé ­ã¨æœ«å°¾ã®ç©ºç™½æ–‡å­—ã‚’å‰Šé™¤ã™ã‚‹\r\n\r\n>|ruby|\r\ns = \"   Hello, Ruby!   \"\r\ns.strip #=> \"Hello, Ruby!\"\r\n||<\r\n\r\n** lines.each\r\n\r\næ”¹è¡Œã§ splitã—ã¦å‡¦ç†ã—ã¦ã„ã‚‹\r\n\r\n>|ruby|\r\n  2 lines = %W{\r\n  3     hoge\r\n  4     hoge\r\n  5 }\r\n  6\r\n  7 lines.each do | line |\r\n  8     puts line\r\n  9 end\r\n||<\r\n\r\n>||\r\nhoge\r\nhoge \r\n||<\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n464         def store_text(lines)\r\n465             ary = []\r\n466             lines.each do |line|\r\n467                 ary << line.gsub(/\\s+/, \' \').strip\r\n468             end\r\n469\r\n470             ary.each do |line|\r\n471                 @text << line\r\n472             end\r\n473\r\n474             File.open(@text_filename, \'a\') do |fp|\r\n475                 ary.each do |line|\r\n476                     line.chomp!\r\n477\r\n478                     fp.puts line\r\n479                 end\r\n480             end\r\n481         end\r\n||<','2007-12-31 14:28:09','2007-12-31 05:29:47'),(253,'Txsuz0BzKV','[sixamo][Dictionary][learn_from_text]','sixamo.rb','* å½¹å‰²\r\n\r\nãƒ†ã‚­ã‚¹ãƒˆã‹ã‚‰å­¦ç¿’ã—ã€ãã—ã¦ã—ãŸã‹ã©ã†ã‹ã®åˆ¤å®šã‚’è¿”ã™ãƒ¡ã‚½ãƒƒãƒ‰\r\n\r\n* å¼•æ•°\r\n\r\nprogressãƒãƒ¼ã‚’è¡¨ç¤ºã•ã›ã‚‹ã‹ã•ã›ãªã„ã‹ã®ãƒ•ãƒ©ã‚°ï¼ˆã¤ã‹ã‚ãªã„ã‚ˆï¼‰\r\n\r\n* è©³ç´°\r\n\r\n** while tmp/WindowSize == read_size/WindowSize\r\n\r\nidxãŒãƒ†ã‚­ã‚¹ãƒˆã‚µã‚¤ã‚ºã‚ˆã‚Šã¡ã„ã•ã„ã‚ã„ã ï¼ˆã¤ã¾ã‚Šå·®åˆ†ï¼‰\r\nline_num(ç¾åœ¨æ³¨ç›®ã—ã¦ã„ã‚‹ãƒ†ã‚­ã‚¹ãƒˆã®è¡Œï¼‰ã‹ã‚‰ã®å·®åˆ†ã‚’ bufã¸å…¥ã‚Œã‚‹ã€‚\r\n\r\n>|ruby|\r\n436                 tmp = read_size\r\n437                 while tmp/WindowSize == read_size/WindowSize\r\n438                     if idx >= @text.size\r\n439                         end_flag = true\r\n440                         break\r\n441                     end\r\n442                     buf << @text[idx]\r\n443                     tmp += @text[idx].size\r\n444                     idx += 1\r\n445                 end\r\n||<\r\n\r\n**  if buf_prev.size > 0\r\n\r\nå‰å›žã® buf ãŒã‚ã‚Œã°ã€å­¦ç¿’ã•ã›ã€@line_numã‚’ã‚µã‚¤ã‚ºåˆ†ã ã‘å¢—åŠ ï¼ˆæ³¨ç›®è¡Œã®ç§»å‹•ï¼‰\r\nã¤ã„ã§ã« modified ã‚’çœŸã¸å¤‰æ›´ã€‚\r\n\r\n>|ruby|\r\n450                 if buf_prev.size > 0\r\n451                     learn(buf_prev+buf, @line_num)\r\n452                     modified = true\r\n453\r\n454                     @line_num += buf_prev.size\r\n455                 end\r\n||<\r\n\r\n\r\n* æœ¬ä½“\r\n\r\n\r\n>|ruby|\r\n411         WindowSize = 500\r\n412         def learn_from_text(progress=nil)\r\n413\r\n414             modified = false\r\n415\r\n416             read_size = 0\r\n417             buf_prev = []\r\n418             end_flag = false\r\n419             idx = @line_num\r\n420\r\n421             while true\r\n422                 buf = []\r\n423\r\n424                 if progress\r\n425                     idx2 = read_size/WindowSize * WindowSize\r\n426\r\n427                     if idx2 % 100_000 == 0\r\n428                         STDERR.printf \"\\n%5dk \", idx2/1000\r\n429                     elsif idx2 % 20_000 == 0\r\n430                         STDERR.print \"*\"\r\n431                     elsif idx2 % 2_000 == 0\r\n432                         STDERR.print \".\"\r\n433                     end\r\n434                 end\r\n435\r\n436                 tmp = read_size\r\n437                 while tmp/WindowSize == read_size/WindowSize\r\n438                     if idx >= @text.size\r\n439                         end_flag = true\r\n440                         break\r\n441                     end\r\n442                     buf << @text[idx]\r\n443                     tmp += @text[idx].size\r\n444                     idx += 1\r\n445                 end\r\n446                 read_size = tmp\r\n447\r\n448                 break if end_flag\r\n449\r\n450                 if buf_prev.size > 0\r\n451                     learn(buf_prev+buf, @line_num)\r\n452                     modified = true\r\n453\r\n454                     @line_num += buf_prev.size\r\n455                 end\r\n456\r\n457                 buf_prev = buf\r\n458             end\r\n459             STDERR.print \"\\n\" if progress\r\n460\r\n461             modified\r\n462         end\r\n||<','2007-12-31 14:53:16','2007-12-31 06:02:35'),(254,'HkqfceADag','[sixamo][Dictionary][learn]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nå¼•æ•°ã®æ–‡å­—åˆ—ã‹ã‚‰å˜èªžã‚’æŠœãå‡ºã—ã¦å­¦ç¿’ã™ã‚‹ã€‚\r\n\r\n* å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** new_terms = Freq.extract_terms(lines,30)\r\n\r\nå˜èªžãŒé…åˆ—ã«ãªã£ã¦è¿”ã£ã¦ãã‚‹ã€‚\r\n\r\n>|perl|\r\n[\'hoge\',\'hoge\']\r\n||<\r\n\r\n** 486             new_terms.each { |term| add_term(term) }\r\n\r\nç™»éŒ²ã•ã‚Œã¦ã„ãªã„ã‚‚ã®ã¯ã€ã‹ã‚‰é…åˆ—ã‚’ã„ã‚Œã€@trie ã¨ @relã®æ–¹ã«ã‚‚å˜èªžã®ç™»éŒ²ã‚’è¡Œã†ã€‚\r\n\r\n>|ruby|\r\n598         def add_term(str)\r\n599             @occur[str] = [] unless @occur.key?(str)\r\n600             @trie.add(str)\r\n601             @rel[str] = Hash.new(0) unless @rel.key?(str)\r\n602         end\r\n||<\r\n\r\n\r\n\r\n\r\n>|ruby|\r\n483         def learn(lines,idx=nil)\r\n484             new_terms = Freq.extract_terms(lines,30)\r\n485\r\n486             new_terms.each { |term| add_term(term) }\r\n487\r\n488             if idx\r\n489                 words_all = []\r\n490                 lines.each_with_index do |line,i|\r\n491                     num = idx + i\r\n492                     words = split_into_terms(line)\r\n493                     words_all.concat(words)\r\n494                     words.each do |term|\r\n495                         if @occur[term].empty? || num > @occur[term][-1]\r\n496                             @occur[term] << num\r\n497                         end\r\n498                     end\r\n499                 end\r\n500\r\n501                 weight_update(words_all)\r\n502\r\n503                 self.terms.each do |term|\r\n504                     occur = @occur[term]\r\n505                     size = occur.size\r\n506\r\n507                     if size < 4 && size > 0 && occur[-1]+size*150 < idx\r\n508                         del_term(term)\r\n509                     end\r\n510                 end\r\n511             end\r\n512         end\r\n||<','2007-12-31 15:20:45','2008-01-02 07:56:24'),(255,'ndYNcAI1OI','[sixamo][Freq][extract_terms] ','sixamo.rb','* èª¬æ˜Ž\r\n\r\nä»®ã«ã“ã®ã‚ˆã†ãªæ–‡å­—åˆ—é”ã‚’æ¸¡ã—ãŸå ´åˆã€\r\n\r\n>|ruby|\r\n 80 lines = [\r\n 81     \'hello\',\r\n 82     \'hoge\',\r\n 83     \'age\',\r\n 84     \'page\',\r\n 85     \'I am a boy.\',\r\n 86     \'Hello World\',\r\n 87     \'Hoge Hoge Hoge\',\r\n 88 ]\r\n 89\r\n 90 pp lines\r\n 91\r\n 92 new_terms = Freq.extract_terms(lines,30)\r\n 93\r\n 94 puts new_terms\r\n||<\r\n\r\nã¾ãšã€æœ€åˆã«ã€freqãƒ¡ã‚½ãƒƒãƒ‰ã§ã€Œå˜èªžã®é ­ã«ããã†ãªæ–‡å­—åˆ—ã‚’ãƒªã‚¹ãƒˆã‚¢ãƒƒãƒ—ã€ã™ã‚‹ã€‚\r\n\r\n>|ruby|\r\n 11 {\" \"=>6, \"W\"=>1, \"a\"=>3, \"b\"=>1, \"p\"=>1, \"H\"=>4, \"h\"=>2, \"I\"=>1}\r\n||<\r\n\r\nã“ã¡ã‚‰ã‚’å…ƒã«ï¼“ï¼ã¾ã§ã®æ·±åº¦ã§å†å¸°ã‚‚å«ã‚ã¦ã€Œå˜èªžã‚‰ã—ãã‚‚ã®ã€ã‚’æŠ½å‡ºã™ã‚‹ã€‚\r\n\r\næœ€çµ‚çš„ã«ã“ã®ã‚ˆã†ãªãƒ‡ãƒ¼ã‚¿ã‚’å¾—ã‚‹ã€‚\r\n\r\n>|ruby|\r\n[[\" hoge\", 2], [\" a\", 2], [\"hoge \", 2], [\"age\", 2], [\"hoge \", 2]]\r\n||<\r\n\r\nãã—ã¦ã€å˜èªžã®é…åˆ—ã¨ã—ã¦å€¤ã‚’è¿”ã™ã€‚\r\n\r\n>|ruby|\r\n[\"a\", \"age\", \"hoge\", \"hoge\", \"hoge\"]\r\n||<\r\n\r\n\r\n\r\n* å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** terms = extract_terms_sub(limit)\r\n\r\né…åˆ—ãŒå…¥ã‚Œå­ã«ãªã£ãŸé…åˆ—ãŒè¿”ã£ã¦ãã‚‹ã€‚\r\n\r\n>|ruby|\r\n[[\"hello world\", 1]]\r\n||\r\n\r\n** 640             terms = terms.collect {|t,n| [t.reverse.strip,n] }.sort\r\n\r\nå—ã‘å–ã£ãŸãƒ‡ãƒ¼ã‚¿ã®æ–‡å­—åˆ—ã‚’é€†é †ã«ã™ã‚‹\r\n\r\n>|ruby|\r\n[[\"dlrow olleh\", 1]]\r\n||<\r\n\r\n\r\n** 644                 if terms[idx][0].size >= terms[idx+1][0].size ||\r\n\r\nã€Œterms[idx][0].sizeã€ã¯ã€Œæ–‡å­—åˆ—ã®é•·ã•ã€ã§ã€idx + 1 ã®é•·ã•ã¨æ¯”è¼ƒã—ã¦ç¾åœ¨ã®æ–¹ãŒå¤§ãã‘ã‚Œã°çœŸ\r\n\r\n** 645                         terms[idx][0] != terms[idx+1][0][0,terms[idx][0].size]\r\n\r\nã‚‚ã†ã²ã¨ã¤ã®æ¡ä»¶ãŒã“ã¡ã‚‰ã§ã€ç°¡å˜ã«ã„ã†ã¨ terms[idx][0] ã¨ terms[idx+1][0]ã€€ãŒé•ã£ãŸã‚‰çœŸ\r\n\r\n** 647                 elsif terms[idx][1] >= terms[idx+1][1] + 2\r\n\r\nç¾åœ¨ã® æ–‡å­—åˆ—ã®å‡ºç¾å›žæ•°ãŒã€€æ¬¡ã®æ–‡å­—åˆ—ã®å‡ºç¾å›žæ•° + 2 ã‚ˆã‚Šå¤§ãã‘ã‚Œã°çœŸ\r\n\r\n* terms[-1]\r\n\r\né…åˆ—ã®æœ€å¾Œã‚’è¿”ã™ã€‚\r\n\r\n>|ruby|\r\n1 terms = %W(hoge age page);\r\n2 p terms\r\n3 p terms[-1]\r\n||<\r\n\r\n>||\r\n[\"hoge\", \"age\", \"page\"]\r\n\"page\"\r\n||<\r\n\r\n** 653             terms2.collect {|t,n| t.reverse }\r\n\r\nå˜èªžã®ä¸¦ã³é †ã‚’å…ƒã«æˆ»ã™ã€‚\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n637         def extract_terms(limit)\r\n638             terms = extract_terms_sub(limit)\r\n639\r\n640             terms = terms.collect {|t,n| [t.reverse.strip,n] }.sort\r\n641\r\n642             terms2 = []\r\n643             (terms.size-1).times do |idx|\r\n644                 if terms[idx][0].size >= terms[idx+1][0].size ||\r\n645                         terms[idx][0] != terms[idx+1][0][0,terms[idx][0].size]\r\n646                     terms2 << terms[idx]\r\n647                 elsif terms[idx][1] >= terms[idx+1][1] + 2\r\n648                     terms2 << terms[idx]\r\n649                 end\r\n650             end\r\n651             terms2 << terms[-1] if terms.size > 0\r\n652\r\n653             terms2.collect {|t,n| t.reverse }\r\n654         end\r\n||<\r\n','2007-12-31 15:22:13','2008-01-02 07:31:43'),(256,'ePieGuEqUU','[sixamo][Freq][extract_terms_sub] ','sixamo.rb','* èª¬æ˜Ž\r\n\r\næ–‡å­—åˆ—ã‚’é‡ã¿ä»˜ã‘ã®æ•°å€¤ã‚’ä¿æŒã•ã›ã¦è¿”ã™ã€‚\r\n\r\n>|perl|\r\n[[\"hello world\", 1]]\r\n||<\r\n\r\n* å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** h = freq(str)\r\n\r\nå‡ºç¾é »åº¦ã®é«˜ã„ã€Œèªžã€ã¨ãã®ã€Œå›žæ•°ã€ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n{\" \"=>3, \"W\"=>2, \"H\"=>2}\r\n||<\r\n\r\n** if limit > 0\r\n\r\né€šå¸¸ã¯ï¼“ï¼å›ºå®šãªã®ã§å®Ÿè¡Œã•ã‚Œã‚‹\r\n\r\n>|ruby|\r\n661             result = []\r\n662             if limit > 0\r\n663                 h.delete(str) if h.key?(str)\r\n664                 h.to_a.delete_if { |k,v| v < 2 }.sort.each do |k,v|\r\n665                     result.concat( extract_terms_sub(limit-1, k, v, flag) )\r\n666                 end\r\n667             end\r\n||<\r\n\r\n** 664                 h.to_a.delete_if { |k,v| v < 2 }.sort.each do |k,v|\r\n\r\nto_a:\r\nã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‚’é…åˆ—ã«å¤‰æ›ã—ã¦ãã®é…åˆ—ã‚’è¿”ã—ã¾ã™\r\n>|ruby|\r\n p( {\'a\'=>1}.to_a )  # [[\"a\", 1]]\r\n||<\r\n\r\n\r\n* æœ¬ä½“\r\n\r\n\r\n>|ruby|\r\n657         def extract_terms_sub(limit,str=\'\',num=1,width=false)\r\n658             h = freq(str)\r\n659             flag = (h.size <= 4)\r\n660\r\n661             result = []\r\n662             if limit > 0\r\n663                 h.delete(str) if h.key?(str)\r\n664                 h.to_a.delete_if { |k,v| v < 2 }.sort.each do |k,v|\r\n665                     result.concat( extract_terms_sub(limit-1, k, v, flag) )\r\n666                 end\r\n667             end\r\n668\r\n669             if result.size == 0 && width\r\n670                 return [[str.downcase,num]]\r\n671             end\r\n672\r\n673             result\r\n674         end\r\n||<','2007-12-31 15:24:04','2007-12-31 15:39:44'),(257,'njI7EnO3K9','[sixamo][Freq][freq]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nå‡ºç¾é »åº¦ã®é«˜ã„ã€Œèªžã€ã¨ãã®ã€Œå›žæ•°ã€ã‚’è¿”ã—ã¾ã™ã€‚\r\n\r\n>|ruby|\r\n{\" \"=>3, \"W\"=>2, \"H\"=>2}\r\n||<\r\n\r\n\r\n* å¼•æ•°\r\n\r\næ–‡å­—åˆ—\r\n\r\n* è©³ç´°\r\n\r\n** 681                 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n\r\nä¸Žãˆã‚‰ã‚ŒãŸæ–‡å­—åˆ—ã®ä¸­ã§ã®å˜èªžã®å‡ºç¾é »åº¦ã‚’è¿”ã™\r\n\r\n>|ruby|\r\n  1 freq = Hash.new(0)\r\n  2 buf = \'Hello World Hello World\'\r\n  3\r\n  4 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n  5 buf.scan(regexp) { |ary| freq[ary[0] || ary[1] || ary[2]] += 1 }\r\n  6\r\n  7 p freq\r\n||<\r\n\r\n>||\r\n{\" \"=>3, \"W\"=>2, \"H\"=>2}\r\n||<\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n677         def freq(str)\r\n678             freq = Hash.new(0)\r\n679\r\n680             if str.size == 0\r\n681                 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n682                 @buf.scan(regexp) { |ary| freq[ary[0] || ary[1] || ary[2]] += 1 }\r\n683             else\r\n684                 regexp = /#{Regexp.quote(str)}[^\\0]?/i\r\n685                 @buf.scan(regexp) { |str| freq[str] += 1 }\r\n686             end\r\n687\r\n688             freq\r\n689         end\r\n||<','2007-12-31 15:34:32','2007-12-31 15:37:35'),(258,'JHuLE28mXT','MogileFS','works','\r\nã‚¨ãƒ©ãƒ¼ãŒã“ã‚Œã§\r\n\r\n>|perl|\r\n[Tue Jan  1 01:00:09 2008] [error] MogileFS::Backend: tracker socket never became readable (192.168.200.107:7001) when sending command: [get_paths domain=decop&noverify=0&key=file_LkyahdQbk3\\r\\n] at /usr/local/lib/perl/5.8.4/MogileFS/Client.pm line 408\\n\r\n||<\r\n\r\nãŠãã‚‰ãã€ã“ã¡ã‚‰ã§ã‚¨ãƒ©ãƒ¼ã«ãªã£ã¦ã‚‹ã‚„ã¤ã ã€‚\r\n\r\n>|perl|\r\nMFWARN: download failed: content=2771 ua=KDDI-HI38 UP.Browser/6.2.0.11.1.3.110 (GUI) MMP/2.0 offset=-1 count=-2 at /usr/local/mf/site_perl/Decop/Pages/Download.pm line 119\r\n||<\r\n\r\nã§ã€è©²å½“éƒ¨åˆ†ã‚’ã¿ã‚‹ã¨ 3ç§’ä»¥ä¸Šå¾…ã£ã¦ã‚‰ã‚Œã‚‹ã‹ä»Šç•œç”Ÿã¨ã‹ã„ã¦ã‚ã‚‹ã®ã§\r\n\r\n>|perl|\r\n    # wait up to 3 seconds for the socket to come to life\r\n    unless (_wait_for_readability(fileno($sock), $self->{timeout})) {\r\n        close($sock);\r\n        $self->run_hook(\'do_request_read_timeout\', $cmd, $self->{last_host_connected});\r\n        return _fail(\"tracker socket never became readable ($self->{last_host_connected}) when sending command: [$req]\");\r\n    }\r\n||<\r\n\r\nå¯¾å¿œã®ãƒ­ã‚°\r\n\r\n>||\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚‚ã˜ã‚‚ã—\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã¯ã„\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã‚ã‘ã¾ã—ã¦ãŠã‚ã§ã¨ã†ã”ã–ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãŠã‚ã§ã¨ã†ã”ã–ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã¾ã‚ã€ã„ã‚ã„ã‚ã‚ã§ãŸã„ã‚ã‘ã§ã™ãŒ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nMogileã®tracker databaseã¯ gj102ã ã£ãŸã®ã‹\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã§ã™ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã•ã„ãã‚“ã€ã‚„ãŸã‚‰åˆ‡ã‚Œã¦ãŸã®ã“ã‚Œã®ã›ã„ã‹ãª\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nMogileFSã®ãƒˆãƒ©ãƒƒã‚«ãƒ¼ã®ã‚¢ãƒ‰ãƒ¬ã‚¹ãŒã€gj107ã§ã€/etc/mogilefs/mogilefsdã«ãã†æ›¸ã„ã¦ã‚ã‚‹ã®ã§ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã‚³ãƒã‚¯ã‚·ãƒ§ãƒ³ã®åˆ¶é™ã«ã¯ä½™è£•ã¯ã‚ã‚‹ã¿ãŸã„ã§ã™ãŒã€\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nãƒ­ãƒ¼ãƒ‰ã‚¢ãƒ™ãƒ¬ãƒ¼ã‚¸ãŒï¼—ï¼å‰å¾Œã¨é«˜ã„ã¿ãŸã„ã§ã™ã­ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nDecopã®ã‚¯ã‚¨ãƒªãŒå°‘ã—åˆºã•ã£ã¦ã‚‹ã¿ãŸã„ã§ã€Lockã¯ã—ã¦ãªã„ã§ã™ãŒã€90ç§’ã¨ã‹Queryç™ºè¡Œã—ã¦ã‚‹ã®ã¨ã‹ãŒã‚ã‚Šã¾ã™ã­ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã“ã„ã¤ãŒã‚¢ã‚¯ã‚»ã‚¹éŽå¤šã§å¢—ãˆã¦ã‚‹ã®ãŒåŽŸå› ã‹ãªã¨æ€ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã‚ã€ãªã‚‹ã»ã©ã­ã€‚æ­£æœˆã§ãŠã‚ã§ã¨ã†ãƒ¡ãƒ¼ãƒ«ã§ã“ã†ãªã£ãŸã‚ˆã†ã­ã€‚ã¡ãªã¿ã«ã€ã•ã£ãã„ã£ã¦ãŸã®ã¯ã€Mogileã® time out ã›ã£ã¦ã„ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nmogilefsã§ã‚‚timeoutè¨­å®šã™ã‚‹é …ç›®ã£ã¦ã‚ã‚Šã¾ã—ãŸã£ã‘ï¼Ÿ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã‚“ã ãªã€ã“ã‚ŒãŒ\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nMogileFS::Backend  sub _init \r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ãŸã‚Šã‚’ã¿ã‚‹ã¨ã‚ã‚‹ã‚“ã ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã‚ã‚‹ã®ã§ã‚ã‚Œã°ã€ãŠé¡˜ã„ã—ã¦ã„ã„ã§ã™ã‹ï¼Ÿãã‚Œãªã‚‰å°‘ã—åŠ¹æžœã‚ã‚‹ã¨æ€ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãˆãƒ¼ã¨ newã—ã¦ã‚‹ã¨ã“ã‚ã‹ã€è¨­å®šãƒ•ã‚¡ã‚¤ãƒ«ã§æŒ‡å®šã™ã‚‹ã®ã‹ãªã€ç¢ºèªã—ã¦ã¿ã¾ã™ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã ã¨ï¼“ã«ãªã‚‹ã¿ãŸã„ã§ã™ãŒã€ã“ã®ï¼“ã£ã¦ã„ã†ã®ã¯åˆ†ã§ã™ã‹ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nsecondsã ã‹ã‚‰\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\n    # wait up to 3 seconds for the socket to come to life\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nç§’ã˜ã‚ƒãªã„ã‹ãª\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã•ã£ãã¾ã§1500è¿‘ãã‚ã£ãŸã‚³ãƒã‚¯ã‚·ãƒ§ãƒ³ãŒã„ã¾600ãã‚‰ã„ã«ãªã£ãŸã®ã§ã€ã‚‚ã†ã™ã“ã—ã‚ˆã†ã™ã¿ã§ã ã„ã˜ã‚‡ã†ã¶ã‹ã‚‚ã—ã‚Œã¾ã›ã‚“ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nãƒ­ãƒ¼ãƒ‰ã‚¢ãƒ™ãƒ¬ãƒ¼ã‚¸ã‚‚20ãã‚‰ã„ã¾ã§ä¸‹ãŒã£ã¦ã¾ã™ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚„ã¾ã¯éŽãŽãŸã­\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã†ãƒ¼ã‚“ã€‚ã‚„ã£ã±ã‚ŠãŠæ­£æœˆã¯ã“ã‚ã„ã§ã™ã­ã‡w\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã¨ã€æˆäººå¼ã¨ã‹è¡Œäº‹ã”ã¨ã«ããã†ã§ã“ã‚ã„ã­\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã¾ãæˆäººå¼ã¯å¤‰ã‚ã£ãŸã‚¿ã‚¤ãƒŸãƒ³ã‚°ã§ã¨ã‹ã¯ãªã„ã®ã§å¤§ä¸ˆå¤«ã‹ãªã¨æ€ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nç¢ºã‹ã«ãã†ã„ã†ã„ã¿ã§ã¯å¹´è¶Šã—ãã‚‰ã„ã‹ãªã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nãŸã ã“ã†ã„ã†çž¬é–“çš„ãªãƒˆãƒ©ãƒ•ã‚£ãƒƒã‚¯ã®ã‚¢ãƒƒãƒ—ã«è€ãˆã‚‰ã‚Œãªã„ã¨æ€¥ã«ã‚µã‚¤ãƒˆã®äººæ°—ãŒã‚ãŒã£ãŸã‚Šã¨ã‹ã€ç‚Žä¸Šã—ãŸã¨ãã«å¯¾å¿œã§ãã‚‹ã®ã‹ãªã¨ã„ã†æ‡¸å¿µã¯ã‚ã‚Šã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nçµå±€ã‚³ã‚¹ãƒˆã®ã‚‚ã‚“ã ã„ã ã‹ã‚‰ã­ã€çž¬é–“æœ€å¤§é¢¨é€Ÿã°ã‹ã‚Šãã«ã—ã¦ã‚‹ã¨ãŠé‡‘ã‹ã‹ã‚Šã™ãŽã‚‹ã—ã€ã§ã‚‚ã€ã‚µãƒ¼ãƒãƒ¼ã®ãŠæ­£æœˆã‚·ãƒ•ãƒˆãã‚‰ã„ã¯ã‚ã£ã¦ã‚‚ã„ã„ã‹ã‚‚ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã†ãƒ¼ã‚“ã€‚ã‚³ãƒã‚¯ã‚·ãƒ§ãƒ³ã®æ•°ã¯ãã‚Œã»ã©å¢—ãˆã¦ã¾ã›ã‚“ãŒã€ãƒ­ãƒ¼ãƒ‰ã‚¢ãƒ™ãƒ¬ãƒ¼ã‚¸ãŒã¾ãŸå°‘ã—ã‚ãŒã£ã¦ãã¾ã—ãŸã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nSELECT me.id, me.rid, me.site_id, me.content_id, me.unique_key, me.user_agent, me.downloaded_on, me.created_on, me.updated_on FROM download_log me WHERE ( me.content_id = \'3117\' AND me.downloaded_on = \'2008-01-01\' AND me.site_id = \'8\' AND me.unique_key = \'pxFDUMIz8G\' AND me.user_agent = \'KDDI-SN39 UP.Browser/6.2.0.11.2.1 (GUI) MMP/2.0\' ) ORDER BY me.id DESC  \r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\n102ã«databaseé›†ä¸­ã—ã™ãŽãªããŒã™ã‚‹ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nMFWARN: download failed: content=3117 ua=KDDI-SH33 UP.Browser/6.2.0.13.1.5 (GUI) MMP/2.0 offset=-1 count=-2 at /usr/local/mf/site_perl/Decop/Pages/Download.pm line 119\r\n\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã“ã‚“ãªã‚¯ã‚¨ãƒªãŒã¡ã‚‡ã£ã¨æ™‚é–“é£Ÿã£ã¦ã‚‹ã®ã§ã€é«˜é€ŸåŒ–ã§ãã‚‹ã®ã§ã‚ã‚Œã°å¹´æ˜Žã‘ã«ã—ãŸæ–¹ãŒè‰¯ã„ã‹ã‚‚ã—ã‚Œã¾ã›ã‚“ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nè¦‹ãŸæ„Ÿã˜ã¾ã˜ã‚ã«INDEXã¯ã‚Œã°ã„ã‘ãã†ãªããŒã™ã‚‹ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nç¢ºã‹ã«DBã¯ãŸãã•ã‚“ã‚ã‚Šã¾ã™ã­ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nPhoenixç³»ã®ã‚„ã¤ï¼‹ã†ãŸç³»ã®æ–¹ã‚‚å…¥ã£ã¦ã‚‹ã®ã§ã‹ãªã‚Šç››ã‚Šã ãã•ã‚“ã§ã™ã­ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nå…¬å¼ç³»ã¨ã‹ã„ã†ããã‚Šã§ã€€æ”¾ã‚Šè¾¼ã‚“ã§ã‚‹ã‹ã‚‰ã€ã‚ãã‚‰ã‹ã«ãŠãŠã„ã€‚æœ€è¿‘ã‚³ãƒã‚¯ã‚·ãƒ§ãƒ³åˆ‡ã‚Œã¾ãã£ã¦ã„ãŸã—\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nPhoenixåˆ†ã ã‘ã¯å°‘ãªãã¨ã‚‚ç‹¬ç«‹ã•ã›ã¦ã€å„ã‚µã‚¤ãƒˆåˆ†ã¯åˆ¥ã®DBã«å…¥ã‚Œã‚‹ã‚ˆã†ã«ã—ãŸæ–¹ãŒè‰¯ã„ã®ã‹ã‚‚ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã¾ã‚ã€ã‚µãƒ¼ãƒãƒ¼ç„¡ã„ã‹ã‚‰ã€INDEXã¯ã‚‹ãªã‚Šé«˜é€ŸåŒ–ã™ã‚‹ãªã‚Šã‚­ãƒ£ãƒƒã‚·ãƒ¥ã™ã‚‹ãªã‚Šã§é ‘å¼µã£ã¦ã¿ã‚‹ã»ã†ã“ã†ã§\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\næ˜Žã‚‰ã‹ã«è² è·ãŒä½Žããªã£ãŸã‚ˆã†ã§ã™ã—ã€ã‚¨ãƒ©ãƒ¼ãƒ­ã‚°ã®æ–¹ã‚‚å¢—ãˆã¦ãªã„ã¿ãŸã„ãªã®ã§ã€ãã‚ãã‚å¤§ä¸ˆå¤«ã‹ãªã¨æ€ã„ã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã†ã£ã™ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nã„ã¡ãŠã†ãƒ¡ãƒ¼ãƒ«ã¾ã¨ã‚ã¦æŠ•ã’ã¦ãŠãã¾ã™ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nã‚ã‚ŠãŒã¨ã†ã”ã–ã„ã˜ã‚ƒã™ã€‚ã‚ˆã‚ã—ãã§ã™ã€‚\r\nã‚ˆã—ã¿ã‹ã‚“ï¼ http://wassr.jp/user/walf443/ ã®ç™ºè¨€:\r\nãŠã¤ã‹ã‚Œã•ã¾ã§ã—ãŸã€‚è‰¯ã„æ–°å¹´ã‚’ã€‚\r\nã²ã‚ã‚†ã ã®ç™ºè¨€:\r\nãŠç–²ã‚Œæ§˜ãƒ¼\r\n||<\r\n\r\n\r\n\r\n\r\n','2008-01-01 02:02:08','2007-12-31 17:02:08'),(259,'TwngJ3MUTG','[sixamo][Trie][longest_prefix_subword]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nå—ã‘å–ã£ãŸæ–‡å­—åˆ—ã‚’è“„ç©ã•ã‚ŒãŸæƒ…å ±(è¾žæ›¸ï¼‰ã®æ–‡å­—åˆ—ã¨ãƒã‚¤ãƒˆå˜ä½ã«åˆ†è§£ã—ã¦æ¯”è¼ƒã™ã‚‹\r\nè¾žæ›¸ã«ã‚ã‚‹å˜èªžã¨æ¯”è¼ƒã—ã¦ã€Œ:terminateã€ã¾ã§æ¯”è¼ƒã§ãã‚‹å˜èªžã®å ´åˆã¯ã€ç¾åœ¨ã®æ–‡å­—åˆ—ã‚’è¿”ã™ã€‚\r\né€”ä¸­ã¾ã§ã—ã‹æ¯”è¼ƒã§ããªã„å ´åˆã¯ã€ãã®é€”ä¸­ã¾ã§ã®çµæžœã‚’æ–‡å­—åˆ—ã¨ã—ã¦è¿”ã™ã€‚\r\n\r\nçµæžœã¨ã—ã¦è¾žæ›¸ä¸­ã®æ–‡å­—åˆ—ã®ãªã‹ã§ä¸€è‡´ã™ã‚‹ä¸€ç•ªé•·ã„ã‚‚ã®ã‚’è¿”ã™ã€‚\r\nã ã‹ã‚‰ã€longest_prefix ã ã¨ã•ã€‚\r\n\r\n* å¼•æ•°\r\n\r\næ–‡å­—åˆ—(str)\r\n\r\n* è©³ç´°\r\n\r\n** rootæ§‹é€ \r\n\r\nä¾‹ã‚’ç¤ºã™ã¨ã€ä»¥ä¸‹ã®ã‚ˆã†ãªæ–‡å­—åˆ—ã‚’ã€€add ã—ãŸå ´åˆ\r\n\r\n>|ruby|\r\n  1 require \'pp\'\r\n  2\r\n  3\r\n  4 root = {}\r\n  5\r\n  6 ary = %W(\r\n  7     Hello\r\n  8     hoge\r\n  9     test\r\n 10     age\r\n 11     Hey,Are_you_ready?\r\n 12 )\r\n 13\r\n 14\r\n 15 ary.each { |str|\r\n 16\r\n 17     node = root\r\n 18     str.each_byte do |b|\r\n 19         node[b] = {} unless node.key?(b)\r\n 20         node = node[b]\r\n 21     end\r\n 22     node[:terminate] = true\r\n 23\r\n 24 }\r\n 25\r\n 26 pp root\r\n||<\r\n\r\nã“ã®ã‚ˆã†ãªæ–‡å­—åˆ—ãŒè¿½åŠ ã•ã‚Œã‚‹ã€‚\r\nèª¬æ˜Žã™ã‚‹ã¨ã€å—ã‘ä»˜ã‘ãŸæ–‡å­—åˆ—ãŒãƒã‚¤ãƒˆã”ã¨ã®ãƒã‚§ãƒ¼ãƒ³ã¨ã—ã¦å®Ÿç¾ã•ã‚Œã‚‹ã€‚\r\nã“ã®ã‚ˆã†ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚’@rootã¯ä¿æŒã—ã¦ã„ã‚‹ã€‚\r\n\r\n>|ruby|\r\n{104=>{111=>{103=>{101=>{:terminate=>true}}}},\r\n 116=>{101=>{115=>{116=>{:terminate=>true}}}},\r\n 72=>\r\n  {101=>\r\n    {121=>\r\n      {44=>\r\n        {65=>\r\n          {114=>\r\n            {101=>\r\n              {95=>\r\n                {121=>\r\n                  {111=>\r\n                    {117=>\r\n                      {95=>\r\n                        {114=>\r\n                          {101=>\r\n                            {97=>\r\n                              {100=>\r\n                                {121=>{63=>{:terminate=>true}}}}}}}}}}}}}}}},\r\n     108=>{108=>{111=>{:terminate=>true}}}}},\r\n 97=>{103=>{101=>{:terminate=>true}}}}\r\n||<\r\n\r\n** ã“ã®ãƒ¡ã‚½ãƒƒãƒ‰ãŒè¿”ã™ã‚‚ã®\r\n\r\n>|ruby|\r\n\r\n  1 require \'pp\'\r\n  2\r\n  3\r\n  4 root = {}\r\n  5\r\n  6 ary = %W(\r\n  7     Hello\r\n  8     HelloHogeaefaef\r\n  9 )\r\n 10\r\n 11\r\n 12 ary.each { |str|\r\n 13\r\n 14     node = root\r\n 15     str.each_byte do |b|\r\n 16         node[b] = {} unless node.key?(b)\r\n 17         node = node[b]\r\n 18     end\r\n 19     node[:terminate] = true\r\n 20\r\n 21 }\r\n 22\r\n 23 pp root\r\n 24\r\n 25     str = \'HelloHogeHoge\'\r\n 26\r\n 27     node = root\r\n 28     result = nil\r\n 29     idx = 0\r\n 30     str.each_byte do |b|\r\n 31         result = str[0,idx] if node.key?(:terminate)\r\n 32         break result unless node.key?(b)\r\n 33         node = node[b]\r\n 34         idx += 1\r\n 35     end\r\n 36\r\n 37 pp result\r\n 38\r\n 39     result = str if node.key?(:terminate)\r\n 40\r\n 41 pp result\r\n||<\r\n\r\n>|ruby|\r\n{72=>\r\n  {101=>\r\n    {108=>\r\n      {108=>\r\n        {111=>\r\n          {72=>\r\n            {111=>\r\n              {103=>\r\n                {101=>\r\n                  {97=>\r\n                    {101=>{102=>{97=>{101=>{102=>{:terminate=>true}}}}}}}}}},\r\n           :terminate=>true}}}}}}\r\n\"Hello\"\r\n\"Hello\"\r\n||<\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n758         def longest_prefix_subword(str)\r\n759             node = @root\r\n760             result = nil\r\n761             idx = 0\r\n762             str.each_byte do |b|\r\n763                 result = str[0,idx] if node.key?(:terminate)\r\n764                 return result unless node.key?(b)\r\n765                 node = node[b]\r\n766                 idx += 1\r\n767             end\r\n768\r\n769             result = str if node.key?(:terminate)\r\n770             result\r\n771         end\r\n||<','2008-01-01 13:03:12','2008-01-02 01:22:12'),(260,'x6CJMsPUn0','[sixamo][Trie][split_into_keywords]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nç™»éŒ²å˜èªžã«é‡ã¿ã‚’ã¤ã‘ãŸãƒãƒƒã‚·ãƒ¥ã‚’è¿”ã™ã€‚\r\n\r\n** ä¾‹\r\n\r\n>|perl|\r\n{\r\n      \'hello\' => 2,\r\n     \'age\'   => 1,\r\n}\r\n||<\r\n\r\n* å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** terms = split_into_terms(str)\r\n\r\nè¾žæ›¸ã«ç™»éŒ²ã•ã‚Œã¦ã„ã‚‹å˜èªžãŒè¿”ã£ã¦ãã‚‹ã€‚\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n514         def split_into_keywords(str)\r\n515             result = Hash.new(0)\r\n516             terms = split_into_terms(str)\r\n517             terms.each do |w|\r\n518                 result[w] += self.weight(w)\r\n519             end\r\n520\r\n521             result\r\n522         end\r\n||<','2008-01-02 10:33:24','2008-01-02 01:33:24'),(261,'DUIaYm59zJ','[sixamo][Dictionary][weight]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nå˜èªžã®ã‚‚ã¤é‡ã¿ã‚’è¨ˆç®—ã—ã¦è¿”ã™\r\n\r\n* å¼•æ•°\r\n\r\næ–‡å­—åˆ—ï¼ˆword)\r\n\r\n\r\n* è©³ç´°\r\n\r\n** @rel\r\n\r\nè¾žæ›¸ã®æŒã¤ãƒ‡ãƒ¼ã‚¿ã‚’ä¿æŒã™ã‚‹ãƒãƒƒã‚·ãƒ¥ã€‚\r\n\r\n>|perl|\r\n{\r\n       \'hoge\'    => {\r\n                \':num\'   => 1,\r\n               \':sum\'    => 5,\r\n      },\r\n}\r\n||<\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n584         def weight(word)\r\n585             if !@rel.key?(word) || @rel[word][:sum] == 0\r\n586                 0\r\n587             else\r\n588                 num = @rel[word][:num]\r\n589                 sum = @rel[word][:sum].to_f\r\n590                 num/(sum*(sum+100))\r\n591             end\r\n592         end\r\n||<','2008-01-02 10:48:05','2008-01-02 01:48:05'),(262,'tvrvpLMXxQ','[sixamo][Core][message_markov]','sixamo.rb','* èª¬æ˜Ž\r\n\r\n* å¼•æ•°\r\n\r\n* è©³ç´°\r\n\r\n** 277                     keywords.sort_by{|k,v| -v}[10..-1].each do |k,v|\r\n\r\n10å€‹æ®‹ã—ã¦ã‚ã¨ã¯å‰Šé™¤ã™ã‚‹ã€‚\r\n\r\n** 281                 sum = keywords.values.sum\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã®é‡ã¿ã®åˆè¨ˆå€¤ã‚’å¾—ã‚‹\r\n\r\n** 283                     keywords.each { |k,v| keywords[k] = v/sum }\r\n\r\nã‚­ãƒ¼ãƒ¯ãƒ¼ãƒ‰ã®é‡ã¿ãŒã‚ã‚Œã°ã€å®Ÿæ•°å€¤ã‹ã‚‰å‰²åˆã¸å¤‰æ›´ã™ã‚‹\r\n\r\n>|ruby|\r\n282                 if sum > 0\r\n283                     keywords.each { |k,v| keywords[k] = v/sum }\r\n284                 end\r\n||<\r\n\r\n** 287                     ary = @dic.lines(kw).sort_by{ rand }\r\n\r\n>|ruby|\r\n590         def lines(word)\r\n591             @occur[word] || []\r\n592         end\r\n||<\r\n\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n271         def message_markov(keywords)\r\n272\r\n273             lines = []\r\n274             if keywords.size > 0\r\n275\r\n276                 if keywords.size > 10\r\n277                     keywords.sort_by{|k,v| -v}[10..-1].each do |k,v|\r\n278                         keywords.delete(k)\r\n279                     end\r\n280                 end\r\n281                 sum = keywords.values.sum\r\n282                 if sum > 0\r\n283                     keywords.each { |k,v| keywords[k] = v/sum }\r\n284                 end\r\n285\r\n286                 keywords.keys.collect do |kw|\r\n287                     ary = @dic.lines(kw).sort_by{ rand }\r\n288                     ary[0,10].each do |idx|\r\n289                         lines << idx\r\n290                     end\r\n291                 end.flatten\r\n292             end\r\n293             10.times { lines << rand(@dic.text.size) }\r\n294             lines.uniq!\r\n295\r\n296             source = lines.collect do |k,v|\r\n297                 @dic.text[k,5]\r\n298             end.sort_by{ rand }.flatten.compact.uniq\r\n299\r\n300             msg = Util.markov(source, keywords, @dic.trie)\r\n301             msg = Util.message_normalize(msg)\r\n302\r\n303             msg\r\n304         end\r\n||<','2008-01-02 11:58:59','2008-01-02 02:58:59'),(263,'AQKINjEww1','ruby æ­£è¦è¡¨ç¾ã€€[sixamo]','ruby','ã†ãƒ¼ã‚“ã€ã²ã‚‰ãŒãªã®å ´åˆã ã‘æŒ™å‹•ãŒã¡ãŒã†ã®ã¯æƒ³å®šã—ã¦ã„ã‚‹ã‚‚ã®ã ã‚ã†ã‹ï¼Ÿ\r\n\r\nã‚ã‹ã£ãŸã€è‹±èªžã¨ã‚«ã‚¿ã‚«ãƒŠã¯å˜èªžå˜ä½ã§èªè­˜ã§ãã‚‹ã‹ã‚‰å‡¦ç†ãŒé•ã†ã‚“ã ã€‚\r\nï¼ˆå‰ææ¡ä»¶ãŒé•ã†ï¼‰\r\n\r\n* ãƒ†ã‚¹ãƒˆ\r\n\r\n>|ruby|\r\n\r\n  1 require \'pp\'\r\n  2\r\n  3 $KCODE = \'UTF8\'\r\n  4\r\n  5 # *ã¯ç›´å‰ã®æ­£è¦è¡¨ç¾ã®0å›žä»¥ä¸Šã®ç¹°ã‚Šè¿”ã—ã¨ãƒžãƒƒãƒ\r\n  6\r\n  7 # çœŸã£å…ˆã« [!-~] ã®ç¯„å›²ã®æ–‡å­—åˆ—ã«ãƒžãƒƒãƒã™ã‚‹\r\n  8 # æ¬¡ã«ã‚«ã‚¿ã‚«ãƒŠã ã‘ã®æ–‡å­—åˆ—ã«ãƒžãƒƒãƒ\r\n  9 # ãã‚Œä»¥å¤–ã®æ–‡å­—ã¸ã®ãƒžãƒƒãƒ\r\n 10 #regexp =/([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n 11 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n 12\r\n 13 [\r\n 14     \'Hello\',\r\n 15     \'ã‚«ã‚¿ã‚«ãƒŠ\',\r\n 16     \'ã“ã‚“ã«ã¡ã‚\',\r\n 17 ].join(\"\\0\").each { |str|\r\n 18\r\n 19     puts str\r\n 20     str.scan(regexp) { |ary|\r\n 21         print \'ary[0]\', ary[0] , \"\\n\"\r\n 22         print \'ary[1]\', ary[1] , \"\\n\"\r\n 23         print \'ary[2]\', ary[2] , \"\\n\"\r\n 24     }\r\n 25\r\n 26 }\r\n||<\r\n\r\n* çµæžœ\r\n\r\n>||\r\nHelloã‚«ã‚¿ã‚«ãƒŠã“ã‚“ã«ã¡ã‚\r\nary[0]H\r\nary[1]nil\r\nary[2]nil\r\nary[0]nil\r\nary[1]ã‚«\r\nary[2]nil\r\nary[0]nil\r\nary[1]nil\r\nary[2]ã“\r\nary[0]nil\r\nary[1]nil\r\nary[2]ã‚“\r\nary[0]nil\r\nary[1]nil\r\nary[2]ã«\r\nary[0]nil\r\nary[1]nil\r\nary[2]ã¡\r\nary[0]nil\r\nary[1]nil\r\nary[2]ã‚\r\n||<\r\n\r\n','2008-01-02 13:25:09','2008-01-02 06:48:43'),(264,'WhQOwoGR5m','[sixamo][Dictionary][weight_update]','sixamo.rb','* èª¬æ˜Ž\r\n\r\nå¯¾è±¡ã®ï¼ˆæ³¨ç›®ã®ï¼‰å˜èªžã®é…åˆ—ã®ä¸­ã«å‡ºç¾ã™ã‚‹å˜èªžã®æ•°(num)ã¨ãã®ç¯„å›²(sum)ã‚’è¨ˆç®—ã™ã‚‹ã€‚\r\n\r\nç°¡å˜ã«ã„ã†ã¨ã€ä»¥ä¸‹ã®å ´åˆã€ï¼“ï¼—ãŒ num ã§ 206ãŒæœç´¢ã—ãŸå˜èªžæ•°ã€‚\r\n\r\n>|ruby|\r\nã¦ã™ã¨  37      206     1,12,54,55,56,60,63,65,69,71,76\r\n||<\r\n\r\nï¼’ï¼ï¼–å˜èªžä¸­ï¼“ï¼—å€‹ãŒã€Œã¦ã™ã¨ã€ã§ã—ãŸã¨ã„ã†ã“ã¨ã€‚\r\n\r\n\r\n* å¼•æ•°\r\n\r\nwords: å­¦ç¿’å¯¾è±¡ã®å˜èªž\r\n\r\n* è©³ç´°\r\n\r\n** ç™»éŒ²ã•ã‚Œã¦ã„ãªã‘ã‚Œã°ã€å˜èªžã‚’@relã¸è¿½åŠ \r\n\r\n>|ruby|\r\n554             words.each do |term|\r\n555                 @rel[term] = Hash.new(0) unless @rel.key?(term)\r\n556             end\r\n||<\r\n\r\n** wordsã®ç¯„å›²ã§å‡ºç¾ã—ãŸå˜èªžã®æ•°(num)ã¨æœç´¢ã—ãŸç¯„å›²(sum)ã‚’æ±‚ã‚ã‚‹ã€‚\r\n\r\n>|ruby|\r\n558             size = words.size\r\n559             (size-width).times do |idx1|\r\n560                 word1 = words[idx1]\r\n561\r\n562                 (idx1+1).upto(idx1+width) do |idx2|\r\n563                     @rel[word1][:num] += 1 if word1 == words[idx2]\r\n564                     @rel[word1][:sum] += 1\r\n565                 end\r\n566             end\r\n||<\r\n\r\n** é€†ã‹ã‚‰å›žã—ã¦ãã®ç¯„å›²å†…ã§å˜èªžã®æ•°(num)ã¨æœç´¢ã—ãŸç¯„å›²(sum)ã‚’æ±‚ã‚ã‚‹ã€‚\r\n\r\n>|ruby|\r\n568             (width+1).times do |idx1|\r\n569                 word1 = words[-idx1]\r\n570\r\n571                 if word1\r\n572                     (idx1-1).downto(1) do |idx2|\r\n573                         @rel[word1][:num] += 1 if word1 == words[-idx2]\r\n574                         @rel[word1][:sum] += 1\r\n575                     end\r\n576                 end\r\n577             end\r\n||<\r\n\r\n* æœ¬ä½“\r\n\r\n>|ruby|\r\n551         def weight_update(words)\r\n552             width = 20\r\n553\r\n554             words.each do |term|\r\n555                 @rel[term] = Hash.new(0) unless @rel.key?(term)\r\n556             end\r\n557\r\n558             size = words.size\r\n559             (size-width).times do |idx1|\r\n560                 word1 = words[idx1]\r\n561\r\n562                 (idx1+1).upto(idx1+width) do |idx2|\r\n563                     @rel[word1][:num] += 1 if word1 == words[idx2]\r\n564                     @rel[word1][:sum] += 1\r\n565                 end\r\n566             end\r\n567\r\n568             (width+1).times do |idx1|\r\n569                 word1 = words[-idx1]\r\n570\r\n571                 if word1\r\n572                     (idx1-1).downto(1) do |idx2|\r\n573                         @rel[word1][:num] += 1 if word1 == words[-idx2]\r\n574                         @rel[word1][:sum] += 1\r\n575                     end\r\n576                 end\r\n577             end\r\n578         end\r\n||<\r\n','2008-01-02 20:14:16','2008-01-02 11:22:53'),(265,'Uc0E3Yf5lV','freq ã® scan ã‚’è¡Œå˜ä½ã¨æ¯”è¼ƒã—ãŸ','sixamo.rb','\r\nçµæžœè‡ªä½“ã¯å¤‰ã‚ã‚‰ãªã„ã®ã§ã€å˜ç´”ã«ãƒ‘ãƒ•ã‚©ãƒ¼ãƒžãƒ³ã‚¹ã®å•é¡Œã‹ã€ã‚³ãƒ¼ãƒ‰ã‚’çŸ­ãã—ãŸã„ã‹ã§\r\nã‚ã‘ãŸã¨è€ƒãˆã‚‰ã‚Œã‚‹ã€‚\r\n\r\n>|ruby|\r\n  1 require \'pp\'\r\n  2 $KCODE = \'UTF8\'\r\n  3\r\n  4 ary = %W(\r\n  5     hoge\r\n  6     ã‚¢ãƒ¬\r\n  7     ã‚ã‚Œ\r\n  8 )\r\n  9\r\n 10 freq = Hash.new(0)\r\n 11\r\n 12 ary.each do |buf|\r\n 13     puts buf\r\n 14     regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\n])/i\r\n 15     buf.scan(regexp) { |ary| freq[ary[0] || ary[1] || ary[2]] += 1 }\r\n 16 end\r\n 17\r\n 18 pp freq\r\n 19 # {\"ã‚Œ\"=>1, \"ã‚¢\"=>1, \"ã‚\"=>1, \"h\"=>1}\r\n 20\r\n 21 freq = Hash.new(0)\r\n 22 regexp = /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\0])/i\r\n 23 ary.join(\"\\0\").scan(regexp) { |ary| freq[ary[0] || ary[1] || ary[2]] += 1 }\r\n 24\r\n 25 pp freq\r\n 26 # {\"ã‚Œ\"=>1, \"ã‚¢\"=>1, \"ã‚\"=>1, \"h\"=>1}\r\n||<','2008-01-05 00:52:24','2008-01-04 15:52:24'),(266,'XJgxWZKeKj','freq ã® scan ã‚’ perlã§å®Ÿè£…ã™ã‚‹å ´åˆæŒ™å‹•ãŒé•ã†ã“ã¨ã«ã¤ã„ã¦','sixamo.rb','å¾—ã‚‰ã‚Œã‚‹çµæžœãŒé•ã†ãŒã€ã“ã¡ã‚‰ã®ç”¨é€”ã‚’è€ƒãˆã‚‹ã¨ã€å˜èªžã¨ã¿ã‚‰ã‚Œã‚‹èªžã‚’å–å¾—ã™ã‚‹ã¨ã„ã†ç›®çš„\r\nã‹ã‚‰è€ƒãˆã‚Œã°ç‰¹ã«å•é¡Œã¯ãªã„ã‹ãªã¨ãŠã‚‚ã‚ã‚Œã‚‹ã€‚\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use utf8;\r\n  4 use Data::Dumper;\r\n  5\r\n  6 binmode(STDOUT, \":utf8\");\r\n  7\r\n  8 my @ary = <DATA>;\r\n  9\r\n 10 my $freq = {};\r\n 11\r\n 12 for my $buf ( @ary ) {\r\n 13     #if( $buf =~ /([!-~])[!-~]*|(\\p{Katakana})\\p{Katakana}*|([^ãƒ¼\\n])/i ) {\r\n 14     if( $buf =~ /([!-~])[!-~]*|([ã‚¡-ãƒ´])[ã‚¡-ãƒ´ãƒ¼]*|([^ãƒ¼\\n])/gi ) {\r\n 15         $freq->{ $1 || $2 || $3 } += 1;\r\n 16     }\r\n 17 }\r\n 18\r\n 19 for my $key ( keys %$freq ) {\r\n 20     print $key . \"\\t\" . $freq->{$key} . \"\\n\";\r\n 21 }\r\n 22\r\n 23 __END__\r\n 24 hoge\r\n 25 ã‚¢ãƒ¬\r\n 26 ã‚ã‚Œ\r\n||<\r\n\r\n* çµæžœ\r\n\r\n>|perl|\r\nã‚      1\r\nh       1\r\nã‚¢      1\r\n||<\r\n','2008-01-05 18:07:57','2008-01-05 09:07:57'),(267,'BbfMRWKr8C','ruby ãƒ©ã‚¤ãƒ–ãƒ©ãƒªã®å ´æ‰€','ruby','\r\n/usr/lib/ruby/1.8 ä»¥ä¸‹ã«ã‚ã‚‹ã‚‰ã—ã„ã€‚\r\n\r\n>|sh|\r\n[zsh hiroyuki@niflheimr]$ dpkg -L libsvn-ruby1.8\r\n/.\r\n/usr\r\n/usr/lib\r\n/usr/lib/libsvn_swig_ruby-1.so.1.0.0\r\n/usr/lib/ruby\r\n/usr/lib/ruby/1.8\r\n/usr/lib/ruby/1.8/i486-linux\r\n/usr/lib/ruby/1.8/i486-linux/svn\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/core.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/client.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/delta.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/fs.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/ra.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/repos.so\r\n/usr/lib/ruby/1.8/i486-linux/svn/ext/wc.so\r\n/usr/lib/ruby/1.8/svn\r\n/usr/lib/ruby/1.8/svn/client.rb\r\n/usr/lib/ruby/1.8/svn/core.rb\r\n/usr/lib/ruby/1.8/svn/delta.rb\r\n/usr/lib/ruby/1.8/svn/error.rb\r\n/usr/lib/ruby/1.8/svn/fs.rb\r\n/usr/lib/ruby/1.8/svn/info.rb\r\n/usr/lib/ruby/1.8/svn/ra.rb\r\n/usr/lib/ruby/1.8/svn/repos.rb\r\n/usr/lib/ruby/1.8/svn/util.rb\r\n/usr/lib/ruby/1.8/svn/wc.rb\r\n/usr/share\r\n/usr/share/doc\r\n/usr/share/doc/libsvn-ruby1.8\r\n/usr/share/doc/libsvn-ruby1.8/copyright\r\n/usr/share/doc/libsvn-ruby1.8/changelog.gz\r\n/usr/share/doc/libsvn-ruby1.8/changelog.Debian.gz\r\n/usr/lib/libsvn_swig_ruby-1.so.1\r\n||<','2008-01-05 18:43:06','2008-01-05 09:43:07'),(268,'9C0BQcuTrf','IO::Pipeã¨open(PIPE, \"$cm |\") ã¨ã®æ¯”è¼ƒ','perl','IO::Pipeã¨open(PIPE, \"$cm |\") ã¨ã®æ¯”è¼ƒ\r\n\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nuse IO::Pipe;\r\n\r\nmy $pipe = IO::Pipe->new or die $!;\r\n$pipe->reader(\'cd /home/yamanaka; pwd;\');\r\n    while( my $output = <$pipe> ) {\r\n        print $output ;\r\n    }\r\n$pipe->close;\r\n\r\nopen(PIPE , \"cd /home/yamanaka; pwd |\") or die $!;\r\n    while( my $output = <PIPE> ) {\r\n        print $output ;\r\n    }\r\nclose(PIPE);\r\n||<','2008-01-07 17:57:25','2008-01-07 08:57:25'),(269,'nfQiAnMvHq','[perl][Data::Page::Navigation]','perl','\r\ncurrentã®ãƒšãƒ¼ã‚¸ã‹ã‚‰è¦æ±‚åˆ†ã ã‘ãšã‚‰ã—ãŸãƒªã‚¹ãƒˆã‚’è¿”ã™ã€‚\r\n\r\n>|perl|\r\n           use Data::Page::Navigation;\r\n           my $total_entries=180;\r\n           my $entries_per_page = 10;\r\n           my $pages_per_navigation = 10;\r\n           my $current_page = 1;\r\n\r\n           my $pager = Data::Page->new(\r\n               $total_entries,\r\n               $entries_per_page,\r\n               $current_page\r\n           );\r\n           $pager->pages_per_navigation($pages_per_navigation);\r\n           @list = $pager->pages_in_navigation($pages_per_navigation);\r\n           #@list = qw/1 2 3 4 5 6 7 8 9 10/;\r\n\r\n           $pager->current_page(9);\r\n           @list = $pager->pages_in_navigation($pages_per_navigation);\r\n           #@list = qw/5 6 7 8 9 10 11 12 13 14/;\r\n\r\n||<','2008-01-08 13:16:09','2008-01-08 04:16:09'),(270,'zgcSLbQdIt','lighty ã®è»Œé“','lighty','ã¾ã‚ã€ã“ã‚“ãªæ„Ÿã˜ã§è¨­å®šã—ã¦ã¤ã‹ã£ã¦ã¾ã—ãŸã€‚\r\n\r\n>|sh|\r\n/usr/local/sbin/lighttpd -f /home/yamanaka/lighty/config.txt\r\n||<\r\n\r\nä»Šå¾Œã¯ã‹ã‚ã‚‹ã‘ã©ã•ã€‚\r\n','2008-01-08 17:31:36','2008-01-08 08:31:36'),(271,'pnZARidVHe','[perl][UNIVERSAL::can]','perl','\r\nè©²å½“ãƒ¡ã‚½ãƒƒãƒ‰ãŒã€ãã®ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆã‹ã‚‰ç”Ÿãˆã¦ã„ã‚‹ã‹ã©ã†ã‹ã‚’åˆ¤å®šã™ã‚‹ã‚ãã£ã©ã€‚\r\n\r\n>|sh|\r\nperldoc UNIVERSAL::can\r\n||<\r\n\r\nã§è©³ç´°ã‚’ã¿ãªã•ã„ã€‚','2008-01-08 17:59:49','2008-01-08 08:59:49'),(272,'fbVL0hUnyg','melopre è‘—ä½œæ¨©ãƒ‡ãƒ¼ã‚¿ã®åŽé›†ã‚¹ã‚¯ãƒªãƒ—ãƒˆ','works','\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Data::Dumper;\r\nuse MF::DateTime;\r\nuse Path::Class;\r\nuse Text::CSV_XS;\r\nuse List::MoreUtils qw(any);\r\n\r\nmy @uids = <DATA>;\r\nchomp @uids;\r\n\r\nmy $dir = dir( \'./\' );\r\n\r\nmy $dir_handle = $dir->open or die $!;\r\n# X000085C03L2007-08-01_V.tsv\r\nmy %result;\r\nwhile( defined ( my $file = $dir_handle->read ) ) {\r\n\r\n    next if( $file eq \'.\' || $file eq \'..\' || $file eq \'hoge.pl\' );\r\n\r\n    $file =~ /X000085C\\d{2}L(\\d{4}-\\d{2}-\\d{2})_/;\r\n    my $date = $1;\r\n\r\n    my $csv = Text::CSV_XS->new({ binary => 1 });\r\n    my $file_handle = file($file)->openr or die ;\r\n    while( my $line = <$file_handle> ) {\r\n        my ($content_id ,  @params ) = split(\"\\t\" , $line );\r\n\r\n        if( grep { $content_id eq $_ } @uids ) {\r\n            $csv->combine(\r\n                \'melopre\',\r\n                MF::DateTime->strptime( $date , \"%Y-%m-%d\")->month,\r\n                $content_id,\r\n                $params[17] || 0 ,\r\n            );\r\n\r\n            print $csv->string .\"\\n\";\r\n\r\n            warn Dumper {\r\n                date         => $date,\r\n                filename     => $file,\r\n                content_id   => $content_id,\r\n                download_sum => $params[17] || 0 ,\r\n            };\r\n        }\r\n\r\n    }\r\n}\r\n\r\n__END__\r\n17849\r\n17793\r\n17752\r\n17729\r\n17690\r\n||<','2008-01-09 12:36:42','2008-01-09 03:36:42'),(273,'R6rwF7OFgL','[perl][Path::Class]','perl','Path::Classã®ä½¿ã„æ–¹ã€‚\r\n\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Data::Dumper;\r\nuse Path::Class;\r\n\r\nmy @uids = <DATA>;\r\nchomp @uids;\r\n\r\nmy $dir = dir( \'./\' );\r\n\r\nmy $dir_handle = $dir->open or die $!;\r\n\r\nwhile( defined ( my $file = $dir_handle->read ) ) {\r\n    my $file_handle = file($file)->openr or die ;\r\n    while( my $line = <$file_handle> ) {\r\n        print $line;\r\n    }\r\n}\r\n\r\n__END__\r\n17849\r\n17793\r\n17752\r\n17729\r\n17690\r\n||<','2008-01-09 12:37:48','2008-01-09 03:37:48'),(274,'NGPFUY4kTw','[debian][ircd-hybrid]','debian','* TODO\r\n\r\n- SSLåŒ–\r\n- portä½¿ãˆã‚‹ã‚ˆã†ã«ã™ã‚‹\r\n- ã‚»ã‚­ãƒ¥ã‚¢åŒ–\r\n-- è‡ªåˆ†ä»¥å¤–ã¯ãƒ­ã‚°ã‚¤ãƒ³ã§ããªã„ã‚ˆã†ã«èª¿æ•´ã™ã‚‹\r\n- ç™ºè¨€ã®ãƒ­ã‚°ã‚’åŽé›†ã™ã‚‹\r\n-- åŽé›†ã—ãŸãƒ­ã‚°ã‚’ã‚ã¨ã§è¦‹ã‚‰ã‚Œã‚‹ã‚ˆã†ã«å¤‰æ›´ã™ã‚‹\r\n\r\n* ä½¿ã„æ–¹\r\n\r\n>|sh|\r\nvi /usr/share/doc/ircd-hybrid/README.Debian\r\n||<\r\n\r\nã¨ã‚Šã‚ãˆãšã€tail ã—ã¦ã¿ã‚‹ã‹ã€‚\r\n\r\n>||\r\n 27     /etc/init.d/ircd-hybrid restart\r\n 28\r\n 29 And the server should come back up with your new setup. If not,\r\n 30\r\n 31     tail /var/log/ircd/ircd-hybrid.log\r\n||<\r\n\r\nã“ã“ã§æƒ…å ±ãŒå¾—ã‚‰ã‚Œã‚‹ã€‚\r\n\r\n[http://www.orangesignal.com/myserver/fc6/ircd-hybrid.shtml]','2008-01-09 14:37:34','2008-01-09 05:49:29'),(275,'2wPXhSUjKK','[sql][CHANGE]','sql','\r\nã‚«ãƒ©ãƒ ã®å¤‰æ›´\r\n\r\n>|sql|\r\nALTER TABLE category CHANGE aggregation_fg ranking_aggregation_fg TINYINT(1)   NOT NULL DEFAULT 0 ;\r\n||<','2008-01-09 16:25:14','2008-01-09 07:25:14'),(276,'rnvMnRVY9b','[perl]èµ·å‹•ãƒã‚§ãƒƒã‚¯','perl','\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\n\r\nuse IO::Pipe;\r\nuse Data::Dumper;\r\n\r\n#my $scan_pg = \'agent-mf-per5mi\';\r\nmy $scan_pg = \'zsh\';\r\n\r\nmy $pipe = IO::Pipe->new;\r\n$pipe->reader(\"ps -N | grep $scan_pg | wc -l\") or die;\r\nmy $scan_pg_sum = <$pipe>;\r\n\r\nif( $scan_pg_sum > 0 ) {\r\n    print \"æ—¢ã«è»Œé“ã—ã¦ã„ã¾ã™ã€‚\\n\";\r\n}\r\n\r\n$pipe->close;\r\n||<\r\n','2008-01-10 16:11:08','2008-01-10 07:11:08'),(277,'nM5xCmUHNh','[mysql]  Got error 127 ','mysql','\r\n>|sql|\r\n[root@localhost] decop> check table download_log quick;\r\n+--------------------+-------+----------+-----------------------------------------------------------+\r\n| Table              | Op    | Msg_type | Msg_text                                                  |\r\n+--------------------+-------+----------+-----------------------------------------------------------+\r\n| decop.download_log | check | warning  | Size of datafile is: 192459092       Should be: 154813792 |\r\n| decop.download_log | check | status   | OK                                                        |\r\n+--------------------+-------+----------+-----------------------------------------------------------+\r\n2 rows in set (37.59 sec)\r\n\r\n[root@localhost] decop> repair table download_log;\r\n\r\n||<\r\n\r\n[http://phpspot.net/php/pgGot%20error%20127%82%C6%82%A2%82%A4%83G%83%89%81%5B%82%D6%82%CC%91%CE%8F%88.html]','2008-01-10 17:52:56','2008-01-10 08:52:56'),(278,'253xbeCh01','[perl][TT] å†å¸°','perl','\r\nTTã®ãƒžã‚¯ãƒ­ã§å†å¸°ã—ã¦ãŸã€‚\r\n\r\n>|perl|\r\n[% MACRO view_node(node) BLOCK %]\r\n<li><a href=\"/node/?node_rid=[% node.rid %]\">[% node.name %]</a> ([% node.node_contents.size or 0 %])\r\n    <ul>\r\n    [% FOR child IN node.children %]\r\n        [% view_node(child) | html_unescape %]\r\n    [% END %]\r\n    </ul>\r\n</li>\r\n[% END %]\r\n||<','2008-01-11 15:28:57','2008-01-11 06:28:57'),(279,'mmbgRwBjlv','ã‚ãªãŸã®TOEICã‚ªãƒ³ãƒ©ã‚¤ãƒ³ç•ªå·','toeic','\r\nã‚ãªãŸã®TOEICã‚ªãƒ³ãƒ©ã‚¤ãƒ³ç•ªå·ï¼š  	SP137034569','2008-01-16 00:13:08','2008-01-15 15:13:08'),(280,'ZgGQ3w77p3','feedback','lsl','\r\n[http://lslwiki.net/lslwiki/wakka.php?wakka=LibraryFPPMovement1]\r\n\r\nAdd Friction to counteract inertia. \r\næ…£æ€§ä½œç”¨ã¸ã®æŠµæŠ—ã‚’è¿½åŠ ã™ã‚‹ã€‚\r\n\r\nThe timer goes off relatively slowly.\r\n\r\nã‚¿ã‚¤ãƒžãƒ¼ã¯æ¯”è¼ƒçš„ã‚†ã£ãã‚Šã¨çµ‚äº†ã™ã‚‹ã€‚\r\n\r\nThe float friction is the fraction of the objects velocity that is going to be removed. \r\n\r\næŠµæŠ—æµ®åŠ›ã¯ã€ãã®ã‚ªãƒ–ã‚¸ã‚§ã‚¯ãƒˆé€Ÿåº¦ãŒã¨ã‚Šã•ã‚‰ã‚ã‚Œã‚‹ã¯ãšã®æŠµæŠ—ã§ã™ã€‚\r\n\r\nSo make sure it\'s less than 1. \r\n\r\næµ®åŠ›ãŒ1ã«æº€ãŸãªã„ãªã‚‰ã°\r\n\r\nThis is a type of negative feedback loop, \r\n\r\nã“ã‚Œã¯ã€ãƒã‚¬ãƒ†ã‚£ãƒ–ãƒ•ã‚£ãƒ¼ãƒ‰ãƒãƒƒã‚¯ã‚¿ã‚¤ãƒ—ã§ã€\r\n\r\nwe are feeding back a negative fraction of the old velocity to create a new velocity.\r\n\r\nç§ãŸã¡ã¯\r\n\r\n\r\n[http://www.int-wp.net/feedback.html]\r\n\r\n','2008-01-16 14:57:57','2008-01-16 05:57:57'),(281,'8CQ4hfFZdF','debian ãƒãƒƒãƒˆãƒ¯ãƒ¼ã‚¯è¨­å®š','debian','\r\næ›¸ãæ›ãˆ\r\n\r\n>|sh|\r\nvi /etc/hosts\r\n||<\r\n\r\nå†èµ·å‹•\r\n\r\n>|sh|\r\nsudo /etc/init.d/networking restart\r\n||<','2008-01-16 17:10:35','2008-01-16 08:10:35'),(282,'J9eAGhftKZ','decop ã®ã€€APIãŒã¾ã˜ã‚ã« slaveã‚’ä½¿ç”¨ã—ã¦ã„ãªã„ã®ã§ç›´ã›','works','\r\nsite_perl/Decop/Pages/Api/*.pm ã¨ã‹ãŒã„ã„åŠ æ¸›ãªã®ã§ä¿®æ­£ã™ã‚‹ã“ã¨ã€‚\r\n\r\nã“ã‚“ãªæ„Ÿã˜ã§ã€readã—ã‹ã—ã¦ãªã„ã®ã«ã‚‚ã‹ã‹ã‚ã‚‰ãš slaveä½¿ç”¨ã—ã¦ã„ãªã„ã®ã§ãã®è¾ºã‚’ã¾ã˜ã‚ã«ã‚„ã‚‹ã€‚\r\n\r\n>|perl|\r\n    my $rs = $self->model(\'DownloadReport\')->search(\r\n        {\r\n            site_id => $self->stash->{site}->id,\r\n        }\r\n    );\r\n||<','2008-01-17 01:59:30','2008-01-16 16:59:30'),(283,'VK8rPsCagU','[ruby][JSON]','ruby','\r\nã“ã‚“ãªæ–¹æ³•ã§ä½¿ãˆãŸã€‚ã‚ã‹ã‚Šã¥ã‚‰ã„ã‚ˆã€‚\r\n\r\n>|ruby|\r\n  1 require \'json\'\r\n  2 require \'pp\'\r\n  3\r\n  4 json_data =  ({ \'hoge\' => \'test\' } ).to_json\r\n  5\r\n  6 pp JSON.parse(json_data)\r\n||<\r\n\r\n\r\n[http://json.rubyforge.org/]','2008-01-17 02:36:50','2008-01-16 17:36:50'),(284,'JPzWnvtggI','markov_generate ã® aryã®æ‰±ã„ãŒé•ã†','sixamo.rb','* ruby\r\n\r\n>|ruby|\r\n  1 require \'pp\'\r\n  2\r\n  3 MarkovKeySize = 2\r\n  4 ary = [%W(test hoge)]\r\n  5\r\n  6 pp ary.concat(ary[0,MarkovKeySize+1])\r\n||<\r\n\r\n\r\n>|ruby|\r\n[[\"test\", \"hoge\"], [\"test\", \"hoge\"]]\r\n||<\r\n\r\n* perl\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use Data::Dumper;\r\n  4\r\n  5 my $MarkovKeySize = 2;\r\n  6\r\n  7 my @ary = qw/hoge test/;\r\n  8\r\n  9 push @ary, grep {$_} map { $ary[$_] } (0..$MarkovKeySize+1);\r\n 10\r\n 11\r\n 12 warn Dumper \\@ary;\r\n||<\r\n\r\n>|perl|\r\n$VAR1 = [\r\n          \'hoge\',\r\n          \'test\',\r\n          \'hoge\',\r\n          \'test\'\r\n        ];\r\n||<\r\n\r\nè¨‚æ­£ã€ã‚ã£ã¦ã‚‹ã€‚\r\n\r\n>|ruby|\r\n  1 require \'pp\'\r\n  2\r\n  3 MarkovKeySize = 2\r\n  4 ary = %W[test hoge]\r\n  5\r\n  6 p ary[0,MarkovKeySize + 1]\r\n  7\r\n  8 pp ary.concat(ary[0,MarkovKeySize+1])\r\n||<\r\n\r\n%W() ã§å›²ã‚€ã¨é…åˆ—ã¨ã¿ãªã•ã‚Œã‚‹ã€‚\r\n\r\n\r\n\r\n\r\n','2008-01-17 03:04:31','2008-01-16 18:15:12'),(285,'fcKYcPeCXm','markov_generate ã®é…åˆ—','sixamo.rb','* ruby\r\n\r\n>|ruby|\r\n  1 require \'pp\'\r\n  2\r\n  3 MarkovKeySize = 2\r\n  4 ary = %W[hoge test]\r\n  5\r\n  6 ary.concat(ary[0,MarkovKeySize+1])\r\n  7\r\n  8 size = ary.size\r\n  9 puts size\r\n 10     puts \'------------------------------------\'\r\n 11 table = {}\r\n 12 size.times do |idx|\r\n 13     key = ary[idx,MarkovKeySize]\r\n 14     #pp ary\r\n 15     print \'idx: \' , idx , \"\\n\"\r\n 16     print \'MarkovKeySize: \',  MarkovKeySize , \"\\n\"\r\n 17     puts \'key: \'\r\n 18     pp key\r\n 19     table[key] = [] unless table.key?(key)\r\n 20     print \'idx+MarkovKeySize: \', idx+MarkovKeySize , \"\\n\"\r\n 21     table[key] << ary[idx+MarkovKeySize]\r\n 22     puts \'------------------------------------\'\r\n 23 end\r\n 24\r\n 25\r\n 26 pp table\r\n||<\r\n\r\n>|ruby|\r\n4\r\n------------------------------------\r\nidx: 0\r\nMarkovKeySize: 2\r\nkey:\r\n[\"hoge\", \"test\"]\r\nidx+MarkovKeySize: 2\r\n------------------------------------\r\nidx: 1\r\nMarkovKeySize: 2\r\nkey:\r\n[\"test\", \"hoge\"]\r\nidx+MarkovKeySize: 3\r\n------------------------------------\r\nidx: 2\r\nMarkovKeySize: 2\r\nkey:\r\n[\"hoge\", \"test\"]\r\nidx+MarkovKeySize: 4\r\n------------------------------------\r\nidx: 3\r\nMarkovKeySize: 2\r\nkey:\r\n[\"test\"]\r\nidx+MarkovKeySize: 5\r\n------------------------------------\r\n{[\"hoge\", \"test\"]=>[\"hoge\", nil], [\"test\", \"hoge\"]=>[\"test\"], [\"test\"]=>[nil]}\r\n||<\r\n\r\n\r\n* perl\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use Data::Dumper;\r\n  4 use JSON::Syck;\r\n  5 use Perl6::Say;\r\n  6\r\n  7 my $MarkovKeySize = 2;\r\n  8 my @ary           = qw/hoge test/;\r\n  9\r\n 10 push @ary,  grep {$_} map { $ary[$_] } (0..$MarkovKeySize+1) ;\r\n 11\r\n 12 my $size = @ary;\r\n 13 say $size;\r\n 14 my %table;\r\n 15 for my $idx ( 0..($size - 1) ) {\r\n 16     say \'idex:\' . $idx;\r\n 17     say \'idex + MarkovKeySize:\'. ( $idx + $MarkovKeySize - 1 );\r\n 18     my $key = JSON::Syck::Dump([ grep {$_} map {  $ary[$_]  } ($idx..($idx+$MarkovKeySize - 1)) ]);\r\n 19     say \'key:\' . $key;\r\n 20     $table{$key} = [] unless $table{$key};\r\n 21     push @{$table{$key}},$ary[$idx + $MarkovKeySize + 1] ;\r\n 22 }\r\n 23\r\n 24 print Dumper \\%table;\r\n||<\r\n\r\n\r\n>|perl|\r\n4\r\nidex:0\r\nidex + MarkovKeySize:1\r\nkey:[\"hoge\",\"test\"]\r\nidex:1\r\nidex + MarkovKeySize:2\r\nkey:[\"test\",\"hoge\"]\r\nidex:2\r\nidex + MarkovKeySize:3\r\nkey:[\"hoge\",\"test\"]\r\nidex:3\r\nidex + MarkovKeySize:4\r\nkey:[\"test\"]\r\n$VAR1 = {\r\n          \'[\"test\",\"hoge\"]\' => [\r\n                                 undef\r\n                               ],\r\n          \'[\"hoge\",\"test\"]\' => [\r\n                                 \'test\',\r\n                                 undef\r\n                               ],\r\n          \'[\"test\"]\' => [\r\n                          undef\r\n                        ]\r\n        };\r\n||<\r\n\r\n','2008-01-17 03:46:34','2008-01-16 18:46:34'),(286,'NwixsItSGv','Shout utf-8 ã¨ã„ã†è¨˜è¿°ãŒã‚ã‚‹ã€‚','works','\r\n>|perl|\r\n     77     if ($self->user->happy_to_status_fg) {\r\n     78         my $tmpl = Shout::Context->get->config->profile_answer_message;\r\n     79         $tmpl = Encode::is_utf8($tmpl) ? $tmpl : decode(\'utf-8\', $tmpl);\r\n     80\r\n     81         my $answer = Encode::is_utf8($row->answer) ? $row->answer : decode(\'utf-8\', $row->answer);\r\n||<','2008-01-17 05:08:56','2008-01-16 20:08:56'),(287,'bZUo7hrTA6','perl Encode ä½¿ã„æ–¹','perl','\r\n>|sh|\r\nnkf --utf8 --overwrite hgoe.pl\r\n||<\r\n\r\nã‚„ã£ã±ã‚Šã€ãŠãã¦ã£ã¨å‰æã ã‚ˆã­ã€‚ã‚‚ã†ã¡ã‚‡ã„Encodeèª­ã¾ãªã„ã¨é§„ç›®ã ã­ã€‚\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse utf8;\r\nuse Encode;\r\nuse Jcode;\r\n\r\nbinmode STDOUT, \':utf8\';\r\nbinmode STDIN,  \':utf8\';\r\nmy $message = \'~S~Sãƒ»~Aï¼œ~B\';\r\n\r\nEncode::decode_utf8(  $message );\r\n\r\nprint decode( \'utf8\', encode( \'utf8\', $message) ) . \"\\n\";\r\n||<','2008-01-17 05:48:48','2008-01-16 20:48:48'),(288,'SKqO587pbf','gearman','perl','\r\ngearmanã‚‚èª­ã‚“ã§ãŠã\r\n\r\n[http://labs.cybozu.co.jp/blog/yamaguchi/2007/04/gearman.html]','2008-01-18 17:49:32','2008-01-18 08:49:32'),(289,'KlHvJZiNni','Decopã¾ã˜ã‚ã«Indexã¯ã£ã¦ãªã„ã®ã§ã¯ã‚‹ã€‚','works','ãŸã¨ãˆã°ã€Rankingã¯ã“ã‚Œã€‚\r\n\r\n>|sql|\r\n[mf@192.168.200.102] decop> SHOW INDEXES FROM node_ranking;\r\n+--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+\r\n| Table        | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment |\r\n+--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+\r\n| node_ranking |          0 | PRIMARY  |            1 | id          | A         |        2535 |     NULL | NULL   |      | BTREE      |         |\r\n| node_ranking |          0 | rid      |            1 | rid         | A         |        2535 |     NULL | NULL   |      | BTREE      |         |\r\n+--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+\r\n2 rows in set (0.00 sec)\r\n\r\n[mf@192.168.200.102] decop> DESC node_ranking;\r\n+------------+----------------------------------+------+-----+---------------------+----------------+\r\n| Field      | Type                             | Null | Key | Default             | Extra          |\r\n+------------+----------------------------------+------+-----+---------------------+----------------+\r\n| id         | int(10) unsigned                 |      | PRI | NULL                | auto_increment |\r\n| rid        | varchar(10)                      |      | UNI |                     |                |\r\n| site_id    | int(10) unsigned                 |      |     | 0                   |                |\r\n| node_id    | int(10) unsigned                 |      |     | 0                   |                |\r\n| span       | enum(\'daily\',\'weekly\',\'monthly\') |      |     | daily               |                |\r\n| rank       | int(10) unsigned                 |      |     | 0                   |                |\r\n| status     | enum(\'new\',\'up\',\'down\',\'stay\')   |      |     | new                 |                |\r\n| content_id | int(10) unsigned                 |      |     | 0                   |                |\r\n| rank_on    | date                             |      |     | 0000-00-00          |                |\r\n| created_on | datetime                         |      |     | 0000-00-00 00:00:00 |                |\r\n| updated_on | timestamp                        | YES  |     | CURRENT_TIMESTAMP   |                |\r\n+------------+----------------------------------+------+-----+---------------------+----------------+\r\n11 rows in set (0.00 sec)\r\n||<','2008-01-21 01:01:16','2008-01-20 16:01:16'),(290,'ZMvSgMZiBD','[perl][AUTOLOAD]','perl','AUTOLOADã¨ã„ã†ãƒ¡ã‚½ãƒƒãƒ‰ã€‚\r\n\r\n\r\n>||\r\nAUTOLOAD ã¯ã‚¯ãƒ©ã‚¹å†…ã«ãƒ¡ã‚½ãƒƒãƒ‰ãŒã¿ã¤ã‹ã‚‰ãªã‹ã£ãŸéš›ã«å‘¼ã°ã‚Œã‚‹ãƒ¡ã‚½ãƒƒãƒ‰ã§ã€\r\nã‚¯ãƒ©ã‚¹åã¨ãƒ¡ã‚½ãƒƒãƒ‰åãŒ :: ã§é€£çµã•ã‚Œã¦ã€$AUTOLOAD ã¨ã„ã†ãƒ‘ãƒƒã‚±ãƒ¼ã‚¸å¤‰æ•°\r\nã«æ ¼ç´ã•ã‚Œã¦å‘¼ã°ã‚Œã¾ã™ã€‚\r\n||<\r\n\r\n[http://bulknews.net/lib/mailmag/24/mag.txt]','2008-01-21 12:00:09','2008-01-21 03:00:43'),(291,'fxCF4Nwt6W','[screen][vim] utf8è¨­å®š','vim,screen','\r\n* screen \r\n\r\nä¸‹è¨˜ã‚’è¿½è¨˜\r\n\r\n>|sh|\r\ndefencoding utf-8\r\nencoding utf-8 utf-8\r\n||<\r\n\r\n[http://www.gaku.net/ukki/screen%E3%83%A1%E3%83%A2.html]\r\n\r\n* vim\r\n\r\nã“ã„ã¤ã‚’è¿½è¨˜\r\n\r\n>|sh|\r\nset encoding=utf-8\r\n||<\r\n\r\nã‚ã¨ã¯ã“ã‚Œã‚‚å¿…è¦ã‹ã‚‚ã€‚\r\n\r\n>|sh|\r\nsyntax on      >--æ–‡å­—ã®è‰²åˆ†ã‘ã‚’å®Ÿæ–½\r\nset nobackup    >--ãƒãƒƒã‚¯ã‚¢ãƒƒãƒ—ãƒ•ã‚¡ã‚¤ãƒ«(file~)ã‚’ä½œã‚‰ãªã„æŒ‡å®š\r\nset fileencoding=japan   >--ãƒ‡ãƒ•ã‚©ãƒ«ãƒˆã®ä¿å­˜ã‚¨ãƒ³ã‚³ãƒ¼ãƒ‰ã€‚[japan]ã¯euc-jpã€UTF-8ã®å ´åˆã¯[utf-8]\r\nset fileencodings=iso-2022-jp,euc-jp,utf-8,ucs2le,ucs-2,cp932 >--èª­ã¿è¾¼ã‚€ã“ã¨ã®ã§ãã‚‹ã‚¨ãƒ³ã‚³ãƒ¼ãƒ‰ã‚’åˆ—æŒ™ã€‚\r\n||<\r\n\r\n\r\n[http://park15.wakwak.com/~unixlife/linux/app-utf-8.html]\r\n\r\n\r\n','2008-01-24 11:06:56','2008-01-24 02:06:56'),(292,'YI3UFtv2iD','zsh','zsh','\r\nzshã®ãƒšãƒ¼ã‚¸ã€æœ¬å®¶è¦‹ãªã„ã¨ã­ã€‚\r\n\r\n[http://zsh.sourceforge.net/]','2008-01-24 12:23:15','2008-01-24 03:23:15'),(293,'P1KXToRAq9','Decoï½ã®ãƒ©ãƒ³ãƒ€ãƒ ç‰¹é›†ãƒãƒŠãƒ¼ç”¨APIã®ãƒ†ã‚¹ãƒˆ','works','>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Data::Dumper;\r\n\r\nuse LWP::Simple;\r\n\r\n#my $url = \"http://decop.yamanaka.t2.mfac.jp/api/feature/random_banner?token=XNTYdEcrAl\";\r\n\r\nmy $token = \'q4srtDTJC8\';\r\n\r\nmy $url = \"http://decop.yamanaka.t2.mfac.jp/api/feature/random_banner?token=\" . $token;\r\n\r\nmy $res = get( $url );\r\n\r\nwarn Dumper $res;\r\n||<\r\n','2008-01-25 11:12:10','2008-01-25 02:12:50'),(294,'GmilauV4bq','MogileFSã®ã‚¤ãƒ³ã‚¹ãƒˆãƒ¼ãƒ«ã¨ãƒ†ã‚¹ãƒˆ','mogilefs','* ã‚¤ãƒ³ã‚¹ãƒˆãƒ¼ãƒ«ã¨èµ·å‹•\r\n\r\nåŸºæœ¬ã®æƒ…å ±ã¯ã“ã¡ã‚‰\r\n[http://d.hatena.ne.jp/ZIGOROu/20061012/1160678579]\r\n\r\n* MySQLã®è¨­å®š\r\n\r\n>||\r\nGRANT ALL ON *.* TO hiroyuki@localhost IDENTIFIED BY \'firstlove\';\r\nGRANT ALL ON *.* TO mogile@127.0.0.1 IDENTIFIED BY \'EYskMlz1\';\r\n||<\r\n\r\n\r\n* è¨­å®šãƒ•ã‚¡ã‚¤ãƒ«ã®è¨­ç½®\r\n\r\n** /etc/mogilefs/mogilefsd.conf\r\n\r\n>||\r\ndaemonize = 1\r\ndb_dsn = DBI:mysql:mogilefs:host=127.0.0.1\r\ndb_user = mogile\r\ndb_pass = EYskMlz1\r\nlisten = 127.0.0.1:7001\r\nconf_port = 7001\r\nlistener_jobs = 10\r\ndelete_jobs = 1\r\nreplicate_jobs = 5\r\nmog_root = /mnt/mogilefs\r\nreaper_jobs = 1\r\n||<\r\n\r\n**  /etc/mogilefs/mogstored.conf\r\n>||\r\n httplisten=127.0.0.1:7500\r\n mgmtlisten=127.0.0.1:7501\r\ndocroot=/var/mogdata\r\n||<\r\n\r\n\r\n* mogstored ã¨ mogilefsã‚’èµ·å‹•\r\n\r\n>|sh|\r\n#  ãƒ•ã‚¡ã‚¤ãƒ«ç®¡ç†å›(store node ï¼‰èµ·å‹•\r\nsudo mogstored -d\r\n\r\n# ãƒ¦ãƒ¼ã‚¶ãƒ¼è¿½åŠ \r\nsudo /usr/sbin/adduser mogile\r\n\r\n# ãƒˆãƒ©ãƒƒã‚«ãƒ¼ï¼ˆæƒ…å ±ã•ã°ãäººï¼‰èµ·å‹•\r\nsudo -u mogile mogilefsd\r\n||<\r\n\r\n\r\n* ã‚»ãƒƒãƒˆã‚¢ãƒƒãƒ—\r\n\r\n>|sh|\r\nmogadm --trackers=\"127.0.0.1:7001\" check\r\n\r\n# host\r\nmogadm --trackers=\"127.0.0.1:7001\" host add 127.0.0.1\r\nmogadm --trackers=\"127.0.0.1:7001\" host list\r\n\r\n# device\r\nmogadm --trackers=\"127.0.0.1:7001\" device add 127.0.0.1 1\r\nmogadm --trackers=\"127.0.0.1:7001\" device add 127.0.0.1 2\r\nmogadm --trackers=\"127.0.0.1:7001\" device list\r\n\r\n# domain\r\nmogadm --trackers=\"127.0.0.1:7001\" domain add norn.niflheimr.org\r\n\r\n# class\r\nmogadm --trackers=\"127.0.0.1:7001\" class add norn.niflheimr.org testdata\r\n\r\n# alive\r\nmogadm --trackers=\"127.0.0.1:7001\" device mark 127.0.0.1 1 alive\r\nmogadm --trackers=\"127.0.0.1:7001\" host mark 127.0.0.1 1 alive\r\nmogadm --trackers=\"127.0.0.1:7001\" host mark 127.0.0.1 alive\r\n||<\r\n\r\n* ç¢ºèªç”¨ãƒ†ã‚¹ãƒˆScript\r\n\r\n>|perl|\r\n  1 use strict;\r\n  2 use warnings;\r\n  3 use MogileFS::Client;\r\n  4\r\n  5 my $cmd = \'mogadm --trackers=\"127.0.0.1:7001\" device list\';\r\n  6\r\n  7 system($cmd);\r\n  8\r\n  9 my $mog = MogileFS::Client->new(\r\n 10     \'domain\' => \"norn.niflheimr.org\",\r\n 11     \'hosts\'  => [\'127.0.0.1:7001\'],\r\n 12 );\r\n 13\r\n 14 # $mogc->store_file($key, $class, $fh_or_filename[, $opts_hash])\r\n 15\r\n 16 my $filepath = \'/home/hiroyuki/local/tmp/hoge.pl\';\r\n 17\r\n 18 $mog->store_file(\'test2\', \'testdata\', $filepath ) or die $mog->errstr;\r\n 19\r\n 20\r\n 21 system($cmd);\r\n||<','2008-01-26 01:57:50','2008-01-25 17:09:07'),(295,'VvzHxVMc7T','MogileFS::Clientã®ä½¿ã„æ–¹','perl','\r\n* æ ¼ç´\r\n\r\n>|perl|\r\n $mog->store_file(\'test2\', \'testdata\', $filepath ) or die $mog->errstr;\r\n||<\r\n\r\n* å–ã‚Šå‡ºã—\r\n\r\n>|perl|\r\nprint ${ $mog->get_file_data(\'test2\') };\r\n||<\r\n\r\n* æ ¼ç´å…ˆã®URL\r\n\r\n>|perl|\r\nprint join( \' \' , $mog->get_paths(\'test2\') ). \"\\n\";\r\n||<','2008-01-26 02:16:44','2008-01-25 17:16:44'),(296,'bA3JKlT5f1','H::M::A ã®æ›´æ–°ã‚¹ã‚¯ãƒªãƒ—ãƒˆ','works','>|sh|\r\nCPAN=$HOME/project/CPAN\r\nHMMF=$HOME/local/src/HTTP-MobileAgent-Flash-0.04\r\n\r\n# ãµãã‚‹æ›´æ–°\r\n$CPAN/bin/makedocomomap -o\r\n\r\ncd $HMMF/bin\r\n./lwp_flash_lite_map_docomo.pl | ./make_map.pl -o\r\n\r\ncp $HMMF/lib/HTTP/MobileAgent/Flash/DoCoMoFlashMap.pm $CPAN/lib/HTTP/MobileAgent/Flash/DoCoMoFlashMap.pm\r\n\r\nsvn stat $HOME/project/CPAN/lib/HTTP/MobileAgent/\r\n\r\nfor module in \'lib/HTTP/MobileAgent/DoCoMoDisplayMap.pm\' \'lib/HTTP/MobileAgent/Flash/DoCoMoFlashMap.pm\'\r\ndo\r\n    perl -wc $CPAN/$module\r\n    svn diff $CPAN/$module\r\ndone\r\n||<','2008-01-31 13:16:43','2008-01-31 04:17:36'),(297,'ILKcIEewZf','Ajax è‡ªå‹•æ›´æ–°','javascript','\r\n>|html|\r\n<script type=\"text/javascript\" >\r\nfunction hoge(site_rid) {\r\n    var updater = new Ajax.PeriodicalUpdater(\r\n        \"container\",\r\n        \"/site/rebuild_state\",\r\n        {\r\n            \"method\": \"get\",\r\n            \"parameters\": \"site_rid=\" + site_rid ,\r\n            frequency: 5, // 5ç§’ã”ã¨ã«å®Ÿè¡Œ\r\n            onSuccess: function(req) {\r\n                // å®Œäº†æ™‚ã®å‡¦ç†ã‚’è¨˜è¿°\r\n                var res = eval(\'(\' + req.responseText + \')\');\r\n                if( res[\'state\'] == \'ok\' ) {\r\n                    Effect.toggle($(\'rebuild_bottun\'));\r\n                    $(\'result\').innerHTML = \'<span>å†æ§‹ç¯‰çµ‚äº†</span>\' + \'<br />\';\r\n                    updater.stop();\r\n                }\r\n                else {\r\n                    $(\'result\').innerHTML = \"å®Ÿè¡Œä¸­.....\";\r\n                }\r\n            },\r\n            onComplete: function() {\r\n\r\n            },\r\n        }\r\n    );\r\n\r\n}\r\n</script>\r\n\r\n||<','2008-01-31 16:59:21','2008-01-31 07:59:21'),(298,'azx26QQqvM','Catalyst::Plugin::Authorizer::Mobile','perl','finalizeã®å‡¦ç†ã‚ãŸã‚Šã€è‹¥ã—ãã¯ end å‡¦ç†ã§ mobileç”¨ã®ãƒ†ãƒ³ãƒ—ãƒ¬ãƒ¼ãƒˆã®ãƒ‘ã‚¹ã¸åˆ‡ã‚Šæ›¿ãˆã‚‹ã€‚\r\n\r\n>|perl|\r\n    $c->stash->{additional_template_paths} =\r\n        [$c->config->{root} . \'/test_include_path\'];\r\n||<\r\n\r\nä¸‹è¨˜ãŒå‚è€ƒã«ãªã‚‹ã€‚\r\n\r\n[http://search.cpan.org/src/MRAMBERG/Catalyst-View-TT-0.26/lib/Catalyst/View/TT.pm]\r\n[http://search.cpan.org/src/MRAMBERG/Catalyst-Plugin-DefaultEnd-0.06/lib/Catalyst/Plugin/DefaultEnd.pm]','2008-02-01 23:35:30','2008-02-01 14:35:30'),(299,'ocOrnJKlP2','message_normalize.rb','ruby','>|ruby|\r\n  1 require \'pp\'\r\n  2 $KCODE = \'UTF8\'\r\n  3 paren_h = {}\r\n  4\r\n  5 %w(ã€Œã€ ã€Žã€ ï¼ˆï¼‰ ()).each do |paren|\r\n  6     paren.scan(/./) do |ch|\r\n  7         paren_h[ch] = paren.scan(/./)\r\n  8     end\r\n  9 end\r\n 10\r\n 11 pp paren_h\r\n||<\r\n\r\nã“ã†ã„ã†æ§‹é€ ã‚’ä½œã‚ŠãŸã„ã‹ã‚‰ã†ãˆã®å‡¦ç†ã‚’ã—ã¦ã„ã‚‹ã€‚\r\n\r\n>||\r\n{\"ã€\"=>[\"ã€Ž\", \"ã€\"],\r\n \"(\"=>[\"(\", \")\"],\r\n \"ã€Œ\"=>[\"ã€Œ\", \"ã€\"],\r\n \")\"=>[\"(\", \")\"],\r\n \"ï¼ˆ\"=>[\"ï¼ˆ\", \"ï¼‰\"],\r\n \"ã€\"=>[\"ã€Œ\", \"ã€\"],\r\n \"ï¼‰\"=>[\"ï¼ˆ\", \"ï¼‰\"],\r\n \"ã€Ž\"=>[\"ã€Ž\", \"ã€\"]}\r\n||<\r\n','2008-02-02 09:01:42','2008-02-02 00:11:07'),(300,'HUpSLbkBHS','USBã®ãƒžã‚¦ãƒ³ãƒˆ','server','\r\n\r\n>|sh|\r\nmount -t vfat /dev/sb1 /mnt/usbmem\r\n||<','2008-02-03 21:47:39','2008-02-03 12:47:39'),(301,'tfgz2gkqyE','recommendã‚¨ãƒ³ã‚¸ãƒ³ã®Mocã§ã™ã€‚','works','\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Data::Dumper;\r\nuse Template;\r\n\r\nmy $user = {\r\n    ranking => 10,\r\n    directory => 2,\r\n    feature   => 7,\r\n};\r\n\r\nmy $recommend = {};\r\nmy $count = 1;\r\nfor my $function ( sort { $user->{$b}  <=> $user->{$a} } keys %$user ) {\r\n    $recommend->{$count} = \'include/recommend/\'. $function . \'.html\';\r\n    $count++;\r\n}\r\n\r\nmy $data = join(\"\",<DATA>);\r\nmy $template = Template->new({});\r\n$template->process(\r\n    \\$data,\r\n    {\r\n        recommend => $recommend,\r\n    }\r\n) || die;\r\n__END__\r\n\r\ntest\r\n\r\n[% recommend.1 %]\r\n\r\nã¦ã™ã¨ã ã‚ˆ\r\n\r\n[% recommend.2 %]\r\n\r\n||<','2008-02-04 17:10:48','2008-02-04 08:10:48'),(302,'7Jhe9YVgAp','load average ãƒã‚§ãƒƒã‚¯ç”¨Script','perl','>|perl|\r\n#!/usr/bin/perl -I/usr/local/mf/site_perl\r\nuse strict;\r\nuse warnings;\r\nuse IO::Pipe;\r\nuse Perl6::Say;\r\nuse MF::DateTime;\r\n\r\n{\r\n    my $pipe = IO::Pipe->new;\r\n    $pipe->reader(qw/uptime/) or die;\r\n    my @uptime = split \",\" , <$pipe>;\r\n    $pipe->close;\r\n\r\n    my ($name, $load_average) = split(\':\', $uptime[3]);\r\n\r\n    my $date = MF::DateTime->now;\r\n    open(my $file , \'>>\' , \'/tmp/yamanaka_check_load_ave_\' . $date->ymd ) or die;\r\n    print $file join(\',\', $date->hour , $load_average ) . \"\\n\";\r\n    close($file);\r\n}\r\n||<\r\n\r\n[http://q.hatena.ne.jp/1135926670]','2008-02-05 11:30:07','2008-02-05 02:30:07'),(303,'O3o1uKpCu6','ãƒ†ã‚¹ãƒˆçš„ã«gj172ã§load_agerageã‚’ã¨ã£ã¦ã¿ã‚‹ã€‚','works','\r\n>|sh|\r\n[zsh yamanaka@gj172.mfac.jp]$ crontab -l\r\nMAILTO=yamanaka@mfac.jp\r\n\r\n# load average check script\r\n# FIXME: test! test! test!\r\n*/5 * * * * /home/yamanaka/bin/check_loadave.pl\r\n\r\n# load average result send script\r\n10 1 * * * /home/yamanaka/bin/send_loadave.pl\r\n||<','2008-02-05 12:51:14','2008-02-05 03:51:14'),(304,'qb24qTTmzn','ãƒ¬ã‚³ãƒ¡ãƒ³ãƒ‰APIã®ãƒ†ã‚¹ãƒˆ','works','\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse LWP::UserAgent;\r\nuse Encode;\r\nuse XML::Simple;\r\nuse Data::Dumper;\r\nuse Jcode;\r\nmy $url     = \'http://reconize.hottolink.com/\';\r\n\r\nmy $param = {\r\n    site_id  => 2,\r\n    item_id  => \'rGn60jy5FI\',\r\n    user_id  => 1,\r\n    event_id => 0,\r\n    size     => 1,\r\n    mode     => \'popular\',\r\n};\r\n\r\nmy $ua = LWP::UserAgent->new;\r\n\r\nmy $res = $ua->post( $url , $param );\r\n\r\nif( $res->is_success ) {\r\n    my $content = $res->content;\r\n    #Encode::from_to( $content , \'utf8\', \'euc-jp\');\r\n    my $ref = XMLin( $content );\r\n    #print Jcode->new( $ref->{item}->{name} , \'utf8\' )->euc . \"\\n\";\r\n    print encode( \'euc-jp\', $ref->{item}->{name} ) . \"\\n\";\r\n    #print decode  \'euc-jp\', $ref->{item}->{name} ;\r\n}\r\n||<','2008-02-06 15:27:43','2008-02-06 06:27:43'),(305,'deuUbOEGdk','[XML::Simple][é…åˆ—ã§è¿”ã™]','perl','ã“ã‚“ãªã‹ã‚“ã˜ã§ perldoc XML::SImpleã™ã‚‹ã¨ã‹ã„ã¦ã‚ã‚‹ã€‚\r\n\r\nThe key attribute names should be supplied in an arrayref if there is more than one.\r\n\r\n>|perl|\r\n    my $ref = XMLin( $content, KeyAttr =>  \'item\'   );\r\n||<\r\n\r\nã“ã†ã—ãªã„ã¨ã€å¤‰ãªå€¤ã‚’keï½™ã«ã—ã¦æƒ…å ±ãŒã¤ã¶ã•ã‚Œã¦ã—ã¾ã†ã€‚\r\n\r\nå…·ä½“çš„ã«ã¯ä»¥ä¸‹ã®æ§˜ã«ä½¿ã†\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse LWP::UserAgent;\r\nuse Encode;\r\nuse XML::Simple;\r\nuse Data::Dumper;\r\nuse Jcode;\r\nmy $url     = \'http://reconize.hottolink.com/\';\r\n\r\nmy $param = {\r\n    site_id  => 2,\r\n    item_id  => \'rGn60jy5FI\',\r\n    user_id  => 1,\r\n    event_id => 0,\r\n    mode     => \'popular\',\r\n};\r\n\r\nmy $ua = LWP::UserAgent->new;\r\n\r\nmy $res = $ua->post( $url , $param );\r\n\r\nif( $res->is_success ) {\r\n    my $content = $res->content;\r\n    my $ref = XMLin( $content, KeyAttr =>  \'item\'   );\r\n    for my $item ( @{ $ref->{item} } ) {\r\n        print Dumper $item;\r\n    }\r\n}\r\n||<\r\n\r\nè©³ç´°ãŒã®ã£ã¦ã„ãŸ\r\n\r\n[http://www.web-ware.org/npindex/67/]\r\n\r\n\r\n','2008-02-07 11:13:57','2008-02-07 02:48:46'),(306,'2kfPWpH9JU','Data::Visitor::Encode','perl','Data::Visitor::Encodeã‚’ä½¿ç”¨ã™ã‚‹ã¨ã¾ã¨ã‚ã¦Encodeã§ãã‚‹ã€‚\r\n\r\n>|perl|\r\nuse warnings;\r\nuse LWP::UserAgent;\r\n#use Encode;\r\nuse XML::Simple;\r\nuse Data::Dumper;\r\nuse Jcode;\r\nuse Perl6::Say;\r\nuse JSON::Syck;\r\nuse Data::Visitor::Encode;\r\n\r\nmy $url     = \'http://reconize.hottolink.com/\';\r\n\r\nmy $param = {\r\n    site_id  => 2,\r\n    item_id  => \'rGn60jy5FI\',\r\n    user_id  => 1,\r\n    event_id => 0,\r\n    mode     => \'popular\',\r\n};\r\n\r\nmy $ua = LWP::UserAgent->new;\r\n\r\nmy $res = $ua->post( $url , $param );\r\n\r\nif( $res->is_success ) {\r\n    my $content = $res->content;\r\n    my $ref = XMLin( $content, KeyAttr =>  \'item\'   ) ;\r\n    my $dev = Data::Visitor::Encode->new;\r\n    $ref = $dev->encode(\'euc-jp\', $ref );\r\n    for my $item ( @{ $ref->{item} } ) {\r\n        say $item->{name} ;\r\n    }\r\n}\r\n||<','2008-02-07 12:45:23','2008-02-07 03:45:23'),(307,'nR9FAcACZy','å€¤ã‚’ãƒã‚§ãƒƒã‚¯ã—ã‚ˆã†ã¨ã—ãŸæ®‹ã‚Šé¦™','works','\r\n>|perl|\r\nsub _valid_param {\r\n    my ($self, $args, $check_keys) = @_;\r\n\r\n    return ( grep { not $args->{$_} } @{$check_keys} ) ? 1 : 0;\r\n}\r\n||<\r\n','2008-02-12 15:17:00','2008-02-12 06:17:00'),(308,'talXfOSSrs','XMLæ­£è¦è¡¨ç¾','perl','\r\n>|perl|\r\nsub re {\r\n    my $xml = shift;\r\n\r\n    encode( \'euc-jp\', $xml );\r\n    my @items;\r\n    for my $tag ( \'item\' ) {\r\n        while( $xml =~ m!<$tag>(.*?)</$tag>!sg ) {\r\n            push @items , $1;\r\n        }\r\n    }\r\n\r\n    my @results;\r\n    for my $item (@items) {\r\n        my $values = {};\r\n        for my $tag (qw/id name url image description rank weight attribute/) {\r\n            while( $xml =~ m!<$tag>(.*?)</$tag>!sg ) {\r\n                $values->{$tag} = $1;\r\n            }\r\n            while( $xml =~ m!<$tag name=\"(.*?)\">(.*?)</$tag>!sg ) {\r\n                $values->{$tag}->{$1} = $2;\r\n            }\r\n        }\r\n        push @results , $values;\r\n    }\r\n\r\n#    use Data::Dumper;\r\n#    warn Dumper \\@results;\r\n}\r\n||<','2008-02-15 19:26:08','2008-02-15 10:26:08'),(309,'4FsT4KEBUf','ã¹ã‚“ã¡ã¾ãƒ¼ãã®ã¨ã‚Šã‹ãŸ','perl','\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Benchmark \'cmpthese\';\r\nuse XML::Simple;\r\nuse XML::LibXML;\r\nuse Perl6::Say;\r\n\r\n# my $xml = ...\r\n\r\nsub re {\r\n    my $xml = shift;\r\n    my @result;\r\n    while ($xml =~ m!<id>(.{10})</id>!g) {\r\n        push @result, $1;\r\n    }\r\n    @result;\r\n}\r\n\r\ncmpthese(\r\n    10000, {\r\n        libxml => sub {\r\n            my $parser = XML::LibXML->new;\r\n            my $doc    = $parser->parse_string($xml);\r\n            map { $_->textContent } $doc->getElementsByTagName(\'id\');\r\n        },\r\n        xmlsimple => sub {\r\n            map { $_->{id} } map { @{ $_->{item} } } XMLin($xml, KeyAttr =>  \'item\');\r\n        },\r\n        regexp => sub {\r\n            re($xml);\r\n        },\r\n    }\r\n);\r\n||<','2008-02-15 20:15:14','2008-02-15 11:15:15'),(310,'k17FZj8ZPc','[CentOS][cronolog][install]','CentOS','cronologã®è¨­å®šã‚’Apacheã«æ›¸ãè¾¼ã‚“ã§ã‚„ã£ãŸã‚‰\r\n\r\nãã‚“ãªæ©Ÿèƒ½ã¯ã†ã¡ã«ãªã„ã‚ˆã€‚ã¨ã„ã‚ã‚ŒãŸã®ã§ã‚¤ãƒ³ã‚¹ãƒˆãƒ¼ãƒ«ã—ãŸã€‚\r\n\r\n[http://cronolog.org/download/index.html]\r\n\r\napacheã‚’å†èµ·å‹•ã•ã›ã‚‹ã¨\r\n\r\n>||\r\n/bin/sh: /usr/bin/cronolog: ãã®ã‚ˆã†ãªãƒ•ã‚¡ã‚¤ãƒ«ã‚„ãƒ‡ã‚£ãƒ¬ã‚¯ãƒˆãƒªã¯ã‚ã‚Šã¾ã›ã‚“\r\n||<\r\n\r\nã¨ã„ã‚ã‚ŒãŸã®ã§ã€å®Ÿéš›ã«install ã•ã‚ŒãŸPathã¸ãƒªãƒ³ã‚¯ã‚’ã¯ã£ãŸã‚‰å‹•ãã¾ã—ãŸã€‚\r\n\r\n>|sh|\r\ncd /usr/bin\r\nsudo ln -s /usr/local/sbin/cronolog cronolog\r\n||<\r\n\r\nã¡ã‚ƒã‚“ã¡ã‚ƒã‚“\r\n','2008-02-22 09:59:02','2008-02-22 00:59:03'),(311,'L5zGu6PVVm','XML::Simpleã¨ç¾çŠ¶ã®ãƒ™ã‚¿æ›¸ãã®ãƒ™ãƒ³ãƒãƒžãƒ¼ã‚¯ã‚’ã¨ã£ã¦ã¿ãŸã€‚','perl','\r\nçµæžœã¯ã“ã‚“ãªæ„Ÿã˜\r\n\r\n>||\r\n              Rate  xmlsimple _inputitem\r\nxmlsimple   1082/s         --       -96%\r\n_inputitem 24390/s      2154%         --\r\n||<\r\n\r\nã‚½ãƒ¼ã‚¹ã¯ä»¥ä¸‹\r\n\r\n>|perl|\r\nuse strict;\r\nuse warnings;\r\nuse Encode;\r\nuse XML::Simple;\r\nuse Benchmark \'cmpthese\';\r\n\r\nsub xmlsimple {\r\n\r\n    my $params = {\r\n            item => {\r\n                    id   => [\'hoge\'] ,\r\n                    name => [\'ã»ã’ã ã‚ˆ\'],\r\n                    url  => [\"\'/decomail/hoge\'\"],\r\n            },\r\n    };\r\n\r\n    my $xs = XML::Simple->new( rootname => \'reconize\');\r\n\r\n    my $xml = $xs->XMLout( $params );\r\n}\r\n\r\nsub _inputitem {\r\n    my ($id, $name, $url, $image_url, $desc, $attr, $active_fg) = (\'hoge\', \'ã»ã’ã ã‚ˆ\', \'/decomail/hoge\');\r\n\r\n    my @x = (qq|<reconize>                                  |,\r\n             qq|  <item>                                    |,\r\n             qq|    <id>$id</id>                            |,\r\n             qq|    <name>$name</name>                      |,\r\n             qq|    <url>$url</url>                         |);\r\n    push @x, qq|    <image>$image_url</image>               | if $image_url;\r\n    push @x, qq|    <description>$desc</description>        | if $desc;\r\n\r\nwhile (my ($key, $val) = each %{ $attr || {} }) {\r\n    push @x, qq|    <attribute name=\"$key\">$val</attribute> |\r\n}\r\n\r\n    push @x, qq|    <active>$active_fg</active>             | if $active_fg;\r\n    push @x,(qq|  </item>                                   |,\r\n             qq|</reconize>                                 |);\r\n\r\n    my $xml = join q{}, map { s/ +$/\\n/; $_ } @x;\r\n}\r\n\r\ncmpthese(\r\n    10000, {\r\n        xmlsimple  => sub { xmlsimple },\r\n        _inputitem => sub { _inputitem },\r\n    }\r\n);\r\n||<\r\n\r\n\r\n\r\n','2008-02-22 12:05:03','2008-02-22 03:05:03');
/*!40000 ALTER TABLE `note` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2008-02-23  1:30:21
